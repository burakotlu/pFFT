-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pFFT_positMul is
port (
    ap_ready : OUT STD_LOGIC;
    x_sign : IN STD_LOGIC_VECTOR (0 downto 0);
    x_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
    x_regime1 : IN STD_LOGIC_VECTOR (5 downto 0);
    x_exponent2 : IN STD_LOGIC_VECTOR (0 downto 0);
    x_mantissa : IN STD_LOGIC_VECTOR (29 downto 0);
    y_sign : IN STD_LOGIC_VECTOR (0 downto 0);
    y_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
    y_regime1 : IN STD_LOGIC_VECTOR (5 downto 0);
    y_exponent2 : IN STD_LOGIC_VECTOR (0 downto 0);
    y_mantissa3 : IN STD_LOGIC_VECTOR (29 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (29 downto 0);
    ap_rst : IN STD_LOGIC );
end;


architecture behav of pFFT_positMul is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv30_20000000 : STD_LOGIC_VECTOR (29 downto 0) := "100000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal mant_fu_120_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal mant_fu_120_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln755_fu_146_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln756_fu_154_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln756_fu_150_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln757_fu_158_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln757_1_fu_168_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln757_1_fu_174_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln757_fu_162_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sf_r_fu_178_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_188_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal mant_fu_120_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln734_fu_184_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ovf_fu_202_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_r_1_fu_210_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mantissa_fu_216_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_1_fu_224_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln771_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_r_3_fu_232_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_1_fu_248_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln804_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isZero_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln803_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln820_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln820_fu_276_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln804_fu_268_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln820_1_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln820_2_fu_298_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_2_fu_240_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal sign_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln820_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_2_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal regime_fu_290_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal mantissa_4_fu_312_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mant_fu_120_p00 : STD_LOGIC_VECTOR (59 downto 0);
    signal mant_fu_120_p10 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component pFFT_mul_30ns_30ns_60_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;



begin
    mul_30ns_30ns_60_1_1_U105 : component pFFT_mul_30ns_30ns_60_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 30,
        dout_WIDTH => 60)
    port map (
        din0 => mant_fu_120_p0,
        din1 => mant_fu_120_p1,
        dout => mant_fu_120_p2);




    add_ln757_1_fu_168_p2 <= std_logic_vector(unsigned(zext_ln756_fu_150_p1) + unsigned(zext_ln757_fu_158_p1));
    add_ln757_fu_162_p2 <= std_logic_vector(signed(sext_ln755_fu_146_p1) + signed(sext_ln756_fu_154_p1));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= sign_2_fu_326_p2;
    ap_return_1 <= isZero_fu_140_p2;
    ap_return_2 <= regime_fu_290_p3;
    ap_return_3 <= mantissa_4_fu_312_p3;
    icmp_ln771_fu_196_p2 <= "1" when (tmp_fu_188_p3 = ap_const_lv2_2) else "0";
    icmp_ln803_fu_256_p2 <= "1" when (signed(regime_1_fu_248_p3) > signed(ap_const_lv6_1D)) else "0";
    icmp_ln804_fu_262_p2 <= "1" when (signed(regime_1_fu_248_p3) > signed(ap_const_lv6_22)) else "0";
    isZero_fu_140_p2 <= (y_isZero or x_isZero);
    mant_fu_120_p0 <= mant_fu_120_p00(30 - 1 downto 0);
    mant_fu_120_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_mantissa3),60));
    mant_fu_120_p1 <= mant_fu_120_p10(30 - 1 downto 0);
    mant_fu_120_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_mantissa),60));
    mantissa_1_fu_224_p3 <= mant_fu_120_p2(58 downto 29);
    mantissa_2_fu_240_p3 <= 
        mantissa_fu_216_p3 when (ovf_fu_202_p3(0) = '1') else 
        mantissa_1_fu_224_p3;
    mantissa_4_fu_312_p3 <= 
        select_ln820_2_fu_298_p3 when (or_ln820_1_fu_306_p2(0) = '1') else 
        mantissa_2_fu_240_p3;
    mantissa_fu_216_p3 <= mant_fu_120_p2(59 downto 30);
    or_ln820_1_fu_306_p2 <= (isZero_fu_140_p2 or icmp_ln771_fu_196_p2);
    or_ln820_fu_284_p2 <= (isZero_fu_140_p2 or icmp_ln803_fu_256_p2);
    ovf_fu_202_p3 <= mant_fu_120_p2(59 downto 59);
    regime_1_fu_248_p3 <= 
        ap_const_lv6_22 when (icmp_ln771_fu_196_p2(0) = '1') else 
        sf_r_3_fu_232_p3;
    regime_fu_290_p3 <= 
        select_ln820_fu_276_p3 when (or_ln820_fu_284_p2(0) = '1') else 
        select_ln804_fu_268_p3;
    select_ln804_fu_268_p3 <= 
        regime_1_fu_248_p3 when (icmp_ln804_fu_262_p2(0) = '1') else 
        ap_const_lv6_22;
    select_ln820_2_fu_298_p3 <= 
        ap_const_lv30_0 when (isZero_fu_140_p2(0) = '1') else 
        ap_const_lv30_20000000;
    select_ln820_fu_276_p3 <= 
        ap_const_lv6_0 when (isZero_fu_140_p2(0) = '1') else 
        ap_const_lv6_1E;
        sext_ln755_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_regime1),7));

        sext_ln756_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_regime1),7));

    sf_r_1_fu_210_p2 <= std_logic_vector(unsigned(trunc_ln734_fu_184_p1) + unsigned(ap_const_lv6_1));
    sf_r_3_fu_232_p3 <= 
        sf_r_1_fu_210_p2 when (ovf_fu_202_p3(0) = '1') else 
        trunc_ln734_fu_184_p1;
    sf_r_fu_178_p2 <= std_logic_vector(unsigned(zext_ln757_1_fu_174_p1) + unsigned(add_ln757_fu_162_p2));
    sign_2_fu_326_p2 <= (xor_ln820_fu_320_p2 and sign_fu_134_p2);
    sign_fu_134_p2 <= (y_sign xor x_sign);
    tmp_fu_188_p3 <= sf_r_fu_178_p2(6 downto 5);
    trunc_ln734_fu_184_p1 <= sf_r_fu_178_p2(6 - 1 downto 0);
    xor_ln820_fu_320_p2 <= (isZero_fu_140_p2 xor ap_const_lv1_1);
    zext_ln756_fu_150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_exponent2),2));
    zext_ln757_1_fu_174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln757_1_fu_168_p2),7));
    zext_ln757_fu_158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_exponent2),2));
end behav;
