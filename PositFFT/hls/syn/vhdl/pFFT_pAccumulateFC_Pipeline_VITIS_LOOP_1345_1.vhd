-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pFFT_pAccumulateFC_Pipeline_VITIS_LOOP_1345_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    empty_5 : IN STD_LOGIC_VECTOR (0 downto 0);
    empty : IN STD_LOGIC_VECTOR (0 downto 0);
    add_i321_i : IN STD_LOGIC_VECTOR (6 downto 0);
    conv3_i_i351_i : IN STD_LOGIC_VECTOR (29 downto 0);
    deltaTheta_sign : IN STD_LOGIC_VECTOR (0 downto 0);
    deltaTheta_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
    deltaTheta_regime : IN STD_LOGIC_VECTOR (5 downto 0);
    deltaTheta_mantissa : IN STD_LOGIC_VECTOR (29 downto 0);
    imagSum_mantissa_write_assign_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    imagSum_mantissa_write_assign_out_ap_vld : OUT STD_LOGIC;
    imagSum_exponent_write_assign_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    imagSum_exponent_write_assign_out_ap_vld : OUT STD_LOGIC;
    imagSum_regime_write_assign_out : OUT STD_LOGIC_VECTOR (5 downto 0);
    imagSum_regime_write_assign_out_ap_vld : OUT STD_LOGIC;
    imagSum_isZero_write_assign_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    imagSum_isZero_write_assign_out_ap_vld : OUT STD_LOGIC;
    imagSum_sign_write_assign_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    imagSum_sign_write_assign_out_ap_vld : OUT STD_LOGIC;
    realSum_mantissa_write_assign_out : OUT STD_LOGIC_VECTOR (29 downto 0);
    realSum_mantissa_write_assign_out_ap_vld : OUT STD_LOGIC;
    realSum_exponent_write_assign_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    realSum_exponent_write_assign_out_ap_vld : OUT STD_LOGIC;
    realSum_regime_write_assign_out : OUT STD_LOGIC_VECTOR (5 downto 0);
    realSum_regime_write_assign_out_ap_vld : OUT STD_LOGIC;
    realSum_isZero_write_assign_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    realSum_isZero_write_assign_out_ap_vld : OUT STD_LOGIC;
    realSum_sign_write_assign_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    realSum_sign_write_assign_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of pFFT_pAccumulateFC_Pipeline_VITIS_LOOP_1345_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv30_20000000 : STD_LOGIC_VECTOR (29 downto 0) := "100000000000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv7_74 : STD_LOGIC_VECTOR (6 downto 0) := "1110100";
    constant ap_const_lv7_79 : STD_LOGIC_VECTOR (6 downto 0) := "1111001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal icmp_ln1345_reg_1243 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal angle_exponent_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal angle_isZero_reg_280 : STD_LOGIC_VECTOR (0 downto 0);
    signal angle_sign_reg_292 : STD_LOGIC_VECTOR (0 downto 0);
    signal imagSum_exponent_write_assign_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal imagSum_isZero_write_assign_reg_317 : STD_LOGIC_VECTOR (0 downto 0);
    signal imagSum_sign_write_assign_reg_330 : STD_LOGIC_VECTOR (0 downto 0);
    signal realSum_exponent_write_assign_reg_343 : STD_LOGIC_VECTOR (0 downto 0);
    signal realSum_isZero_write_assign_reg_356 : STD_LOGIC_VECTOR (0 downto 0);
    signal realSum_sign_write_assign_reg_369 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal conv3_i_i351_i_cast_fu_494_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal conv3_i_i351_i_cast_reg_1238 : STD_LOGIC_VECTOR (59 downto 0);
    signal icmp_ln1345_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1345_reg_1243_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1345_reg_1243_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1345_reg_1243_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1345_reg_1243_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1345_reg_1243_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1345_reg_1243_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1345_reg_1243_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal newret11_reg_1247 : STD_LOGIC_VECTOR (0 downto 0);
    signal newret12_reg_1252 : STD_LOGIC_VECTOR (0 downto 0);
    signal newret14_reg_1257 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_1_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal x_isZero_4_reg_1268 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_regime_4_reg_1274 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_exponent_2_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_mantissa_4_reg_1286 : STD_LOGIC_VECTOR (29 downto 0);
    signal newret2_i_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal newret4_i_reg_1297 : STD_LOGIC_VECTOR (0 downto 0);
    signal newret6_i_reg_1302 : STD_LOGIC_VECTOR (5 downto 0);
    signal newret8_i_reg_1307 : STD_LOGIC_VECTOR (29 downto 0);
    signal in_sign_reg_1312 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal in_isZero_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_regime_reg_1324 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_mantissa_reg_1329 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln631_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_regime_19_fu_629_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_regime_19_reg_1340 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_sign_1_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal in_sign_1_reg_1345_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_isZero_1_reg_1351 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_isZero_1_reg_1351_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_regime_1_reg_1357 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_mantissa_1_reg_1363 : STD_LOGIC_VECTOR (29 downto 0);
    signal in_mantissa_1_reg_1363_pp0_iter4_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal in_isZero_2_reg_1369 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal in_isZero_2_reg_1369_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_isZero_2_reg_1369_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_mantissa_2_reg_1374 : STD_LOGIC_VECTOR (29 downto 0);
    signal in_mantissa_2_reg_1374_pp0_iter4_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal in_mantissa_2_reg_1374_pp0_iter5_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln631_3_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_3_reg_1379 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_regime_25_fu_678_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_regime_25_reg_1384 : STD_LOGIC_VECTOR (5 downto 0);
    signal y_sign_3_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_sign_3_reg_1389 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_sign_3_reg_1389_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_sign_3_reg_1389_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal result_regime_28_fu_688_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_regime_28_reg_1394 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal result_regime_28_reg_1394_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal result_sign_reg_1399 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_isZero_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_regime_reg_1409 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_exponent_reg_1414 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_mantissa_reg_1419 : STD_LOGIC_VECTOR (29 downto 0);
    signal result_regime_23_fu_721_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal result_regime_23_reg_1424 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_sign_2_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_isZero_5_reg_1434 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_regime_5_reg_1439 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_exponent_3_reg_1444 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_mantissa_5_reg_1449 : STD_LOGIC_VECTOR (29 downto 0);
    signal isZero_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isZero_reg_1454 : STD_LOGIC_VECTOR (0 downto 0);
    signal regime_13_fu_839_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_13_reg_1461 : STD_LOGIC_VECTOR (5 downto 0);
    signal mantissa_26_fu_861_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_26_reg_1468 : STD_LOGIC_VECTOR (29 downto 0);
    signal sign_3_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_3_reg_1473 : STD_LOGIC_VECTOR (0 downto 0);
    signal isZero_1_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isZero_1_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal regime_16_fu_979_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_16_reg_1485 : STD_LOGIC_VECTOR (5 downto 0);
    signal mantissa_29_fu_1001_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_29_reg_1492 : STD_LOGIC_VECTOR (29 downto 0);
    signal sign_5_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sign_5_reg_1497 : STD_LOGIC_VECTOR (0 downto 0);
    signal regime_22_fu_1050_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_22_reg_1502 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_20_fu_1095_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_20_reg_1507 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal newret6_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal newret7_reg_1517 : STD_LOGIC_VECTOR (0 downto 0);
    signal newret9_reg_1522 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter6_stage7 : STD_LOGIC;
    signal grp_positCos_fu_382_ap_start : STD_LOGIC;
    signal grp_positCos_fu_382_ap_done : STD_LOGIC;
    signal grp_positCos_fu_382_ap_idle : STD_LOGIC;
    signal grp_positCos_fu_382_ap_ready : STD_LOGIC;
    signal grp_positCos_fu_382_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positCos_fu_382_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positCos_fu_382_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positCos_fu_382_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positCos_fu_382_ap_return_4 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_pNAngle_fu_394_ap_start : STD_LOGIC;
    signal grp_pNAngle_fu_394_ap_done : STD_LOGIC;
    signal grp_pNAngle_fu_394_ap_idle : STD_LOGIC;
    signal grp_pNAngle_fu_394_ap_ready : STD_LOGIC;
    signal grp_pNAngle_fu_394_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pNAngle_fu_394_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pNAngle_fu_394_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_pNAngle_fu_394_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pNAngle_fu_394_ap_return_4 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positAdd_fu_406_ap_start : STD_LOGIC;
    signal grp_positAdd_fu_406_ap_done : STD_LOGIC;
    signal grp_positAdd_fu_406_ap_idle : STD_LOGIC;
    signal grp_positAdd_fu_406_ap_ready : STD_LOGIC;
    signal grp_positAdd_fu_406_x_sign : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_x_isZero : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_x_regime1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_406_x_exponent2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_x_mantissa3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positAdd_fu_406_y_sign_val : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_y_isZero_val : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_y_regime1_val : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_406_y_mantissa3_val : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positAdd_fu_406_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_406_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_406_ap_return_4 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positMul_fu_430_ap_ready : STD_LOGIC;
    signal grp_positMul_fu_430_x_sign : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_x_isZero : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_x_regime1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positMul_fu_430_x_exponent2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_x_mantissa : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positMul_fu_430_y_sign : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_y_isZero : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_y_regime1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positMul_fu_430_y_exponent2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_y_mantissa3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positMul_fu_430_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positMul_fu_430_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positMul_fu_430_ap_return_3 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_mux_angle_exponent_phi_fu_272_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_phi_mux_angle_isZero_phi_fu_284_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_angle_sign_phi_fu_296_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_imagSum_exponent_write_assign_phi_fu_308_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_phi_mux_imagSum_isZero_write_assign_phi_fu_321_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_imagSum_sign_write_assign_phi_fu_334_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positCos_fu_382_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_ignoreCallOp100 : BOOLEAN;
    signal grp_pNAngle_fu_394_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_ignoreCallOp101 : BOOLEAN;
    signal grp_positAdd_fu_406_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_ignoreCallOp102 : BOOLEAN;
    signal ap_block_pp0_stage4_ignoreCallOp196 : BOOLEAN;
    signal ap_block_pp0_stage5_ignoreCallOp236 : BOOLEAN;
    signal ap_block_pp0_stage6_ignoreCallOp258 : BOOLEAN;
    signal ap_block_pp0_stage7_ignoreCallOp349 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp352 : BOOLEAN;
    signal y_sign_1_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_regime_27_fu_633_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage2_ignoreCallOp172 : BOOLEAN;
    signal ap_block_pp0_stage3_ignoreCallOp178 : BOOLEAN;
    signal ap_block_pp0_stage4_ignoreCallOp189 : BOOLEAN;
    signal ap_block_pp0_stage5_ignoreCallOp198 : BOOLEAN;
    signal x_regime_fu_122 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal x_mantissa_fu_126 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    signal realSum_regime_write_assign_fu_130 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal realSum_mantissa_write_assign_fu_134 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    signal imagSum_regime_write_assign_fu_138 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal imagSum_mantissa_write_assign_fu_142 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    signal n_fu_146 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln1345_fu_542_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_n_1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal grp_fu_446_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln748_fu_749_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln748_4_fu_889_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal grp_fu_446_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal grp_fu_446_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal sext_ln629_fu_605_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln629_fu_605_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln629_fu_609_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i_fu_615_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln629_3_fu_654_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln629_2_fu_658_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_i_fu_664_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln629_2_fu_694_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln629_1_fu_697_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i_77_fu_703_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln631_2_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_regime_22_fu_717_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln756_fu_764_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln756_fu_768_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln757_fu_772_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sf_r_fu_778_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_787_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln734_fu_783_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_486_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_r_14_fu_801_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mantissa_fu_807_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_25_fu_815_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln771_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_r_19_fu_823_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln820_7_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln820_12_fu_847_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_13_fu_831_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal sign_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln820_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln756_1_fu_904_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln757_4_fu_912_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln756_1_fu_908_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sf_r_16_fu_917_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_927_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln734_2_fu_923_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sf_r_17_fu_941_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mantissa_27_fu_947_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_28_fu_955_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln771_1_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_r_20_fu_963_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln820_8_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln820_16_fu_987_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mantissa_18_fu_971_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal sign_4_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln820_1_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln804_1_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln803_1_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln820_2_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln820_14_fu_1038_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln804_1_fu_1031_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln804_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln803_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln820_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln820_fu_1083_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln804_fu_1076_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component pFFT_positCos IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_sign : IN STD_LOGIC_VECTOR (0 downto 0);
        x_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
        x_regime : IN STD_LOGIC_VECTOR (5 downto 0);
        x_exponent : IN STD_LOGIC_VECTOR (0 downto 0);
        x_mantissa : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component pFFT_pNAngle IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_sign : IN STD_LOGIC_VECTOR (0 downto 0);
        x_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
        x_regime : IN STD_LOGIC_VECTOR (5 downto 0);
        x_exponent : IN STD_LOGIC_VECTOR (0 downto 0);
        x_mantissa : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component pFFT_positAdd IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x_sign : IN STD_LOGIC_VECTOR (0 downto 0);
        x_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
        x_regime1 : IN STD_LOGIC_VECTOR (5 downto 0);
        x_exponent2 : IN STD_LOGIC_VECTOR (0 downto 0);
        x_mantissa3 : IN STD_LOGIC_VECTOR (29 downto 0);
        y_sign_val : IN STD_LOGIC_VECTOR (0 downto 0);
        y_isZero_val : IN STD_LOGIC_VECTOR (0 downto 0);
        y_regime1_val : IN STD_LOGIC_VECTOR (5 downto 0);
        y_exponent2_val : IN STD_LOGIC_VECTOR (0 downto 0);
        y_mantissa3_val : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component pFFT_positMul IS
    port (
        ap_ready : OUT STD_LOGIC;
        x_sign : IN STD_LOGIC_VECTOR (0 downto 0);
        x_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
        x_regime1 : IN STD_LOGIC_VECTOR (5 downto 0);
        x_exponent2 : IN STD_LOGIC_VECTOR (0 downto 0);
        x_mantissa : IN STD_LOGIC_VECTOR (29 downto 0);
        y_sign : IN STD_LOGIC_VECTOR (0 downto 0);
        y_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
        y_regime1 : IN STD_LOGIC_VECTOR (5 downto 0);
        y_exponent2 : IN STD_LOGIC_VECTOR (0 downto 0);
        y_mantissa3 : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (29 downto 0);
        ap_rst : IN STD_LOGIC );
    end component;


    component pFFT_mul_30ns_30ns_60_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component pFFT_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_positCos_fu_382 : component pFFT_positCos
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_positCos_fu_382_ap_start,
        ap_done => grp_positCos_fu_382_ap_done,
        ap_idle => grp_positCos_fu_382_ap_idle,
        ap_ready => grp_positCos_fu_382_ap_ready,
        x_sign => ap_phi_mux_angle_sign_phi_fu_296_p4,
        x_isZero => ap_phi_mux_angle_isZero_phi_fu_284_p4,
        x_regime => x_regime_fu_122,
        x_exponent => ap_phi_mux_angle_exponent_phi_fu_272_p4,
        x_mantissa => x_mantissa_fu_126,
        ap_return_0 => grp_positCos_fu_382_ap_return_0,
        ap_return_1 => grp_positCos_fu_382_ap_return_1,
        ap_return_2 => grp_positCos_fu_382_ap_return_2,
        ap_return_3 => grp_positCos_fu_382_ap_return_3,
        ap_return_4 => grp_positCos_fu_382_ap_return_4);

    grp_pNAngle_fu_394 : component pFFT_pNAngle
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pNAngle_fu_394_ap_start,
        ap_done => grp_pNAngle_fu_394_ap_done,
        ap_idle => grp_pNAngle_fu_394_ap_idle,
        ap_ready => grp_pNAngle_fu_394_ap_ready,
        x_sign => ap_phi_mux_angle_sign_phi_fu_296_p4,
        x_isZero => ap_phi_mux_angle_isZero_phi_fu_284_p4,
        x_regime => x_regime_fu_122,
        x_exponent => ap_phi_mux_angle_exponent_phi_fu_272_p4,
        x_mantissa => x_mantissa_fu_126,
        ap_return_0 => grp_pNAngle_fu_394_ap_return_0,
        ap_return_1 => grp_pNAngle_fu_394_ap_return_1,
        ap_return_2 => grp_pNAngle_fu_394_ap_return_2,
        ap_return_3 => grp_pNAngle_fu_394_ap_return_3,
        ap_return_4 => grp_pNAngle_fu_394_ap_return_4);

    grp_positAdd_fu_406 : component pFFT_positAdd
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_positAdd_fu_406_ap_start,
        ap_done => grp_positAdd_fu_406_ap_done,
        ap_idle => grp_positAdd_fu_406_ap_idle,
        ap_ready => grp_positAdd_fu_406_ap_ready,
        ap_ce => ap_const_logic_1,
        x_sign => grp_positAdd_fu_406_x_sign,
        x_isZero => grp_positAdd_fu_406_x_isZero,
        x_regime1 => grp_positAdd_fu_406_x_regime1,
        x_exponent2 => grp_positAdd_fu_406_x_exponent2,
        x_mantissa3 => grp_positAdd_fu_406_x_mantissa3,
        y_sign_val => grp_positAdd_fu_406_y_sign_val,
        y_isZero_val => grp_positAdd_fu_406_y_isZero_val,
        y_regime1_val => grp_positAdd_fu_406_y_regime1_val,
        y_exponent2_val => ap_const_lv1_0,
        y_mantissa3_val => grp_positAdd_fu_406_y_mantissa3_val,
        ap_return_0 => grp_positAdd_fu_406_ap_return_0,
        ap_return_1 => grp_positAdd_fu_406_ap_return_1,
        ap_return_2 => grp_positAdd_fu_406_ap_return_2,
        ap_return_3 => grp_positAdd_fu_406_ap_return_3,
        ap_return_4 => grp_positAdd_fu_406_ap_return_4);

    grp_positMul_fu_430 : component pFFT_positMul
    port map (
        ap_ready => grp_positMul_fu_430_ap_ready,
        x_sign => grp_positMul_fu_430_x_sign,
        x_isZero => grp_positMul_fu_430_x_isZero,
        x_regime1 => grp_positMul_fu_430_x_regime1,
        x_exponent2 => grp_positMul_fu_430_x_exponent2,
        x_mantissa => grp_positMul_fu_430_x_mantissa,
        y_sign => grp_positMul_fu_430_y_sign,
        y_isZero => grp_positMul_fu_430_y_isZero,
        y_regime1 => grp_positMul_fu_430_y_regime1,
        y_exponent2 => grp_positMul_fu_430_y_exponent2,
        y_mantissa3 => grp_positMul_fu_430_y_mantissa3,
        ap_return_0 => grp_positMul_fu_430_ap_return_0,
        ap_return_1 => grp_positMul_fu_430_ap_return_1,
        ap_return_2 => grp_positMul_fu_430_ap_return_2,
        ap_return_3 => grp_positMul_fu_430_ap_return_3,
        ap_rst => ap_rst);

    mul_30ns_30ns_60_1_1_U116 : component pFFT_mul_30ns_30ns_60_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 30,
        dout_WIDTH => 60)
    port map (
        din0 => grp_fu_446_p0,
        din1 => grp_fu_446_p1,
        dout => grp_fu_446_p2);

    flow_control_loop_pipe_sequential_init_U : component pFFT_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter6_stage7)) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    grp_pNAngle_fu_394_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pNAngle_fu_394_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1345_fu_536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_pNAngle_fu_394_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pNAngle_fu_394_ap_ready = ap_const_logic_1)) then 
                    grp_pNAngle_fu_394_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_positAdd_fu_406_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_positAdd_fu_406_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1345_fu_536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    grp_positAdd_fu_406_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_positAdd_fu_406_ap_ready = ap_const_logic_1)) then 
                    grp_positAdd_fu_406_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_positCos_fu_382_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_positCos_fu_382_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1345_fu_536_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_positCos_fu_382_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_positCos_fu_382_ap_ready = ap_const_logic_1)) then 
                    grp_positCos_fu_382_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    angle_exponent_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                angle_exponent_reg_268 <= newret14_reg_1257;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                angle_exponent_reg_268 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    angle_isZero_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                angle_isZero_reg_280 <= newret12_reg_1252;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                angle_isZero_reg_280 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    angle_sign_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                angle_sign_reg_292 <= newret11_reg_1247;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                angle_sign_reg_292 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    imagSum_exponent_write_assign_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                imagSum_exponent_write_assign_reg_304 <= newret9_reg_1522;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                imagSum_exponent_write_assign_reg_304 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    imagSum_isZero_write_assign_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                imagSum_isZero_write_assign_reg_317 <= newret7_reg_1517;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                imagSum_isZero_write_assign_reg_317 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    imagSum_mantissa_write_assign_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                imagSum_mantissa_write_assign_fu_142 <= ap_const_lv30_20000000;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                imagSum_mantissa_write_assign_fu_142 <= grp_positAdd_fu_406_ap_return_4;
            end if; 
        end if;
    end process;

    imagSum_regime_write_assign_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                imagSum_regime_write_assign_fu_138 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                imagSum_regime_write_assign_fu_138 <= grp_positAdd_fu_406_ap_return_2;
            end if; 
        end if;
    end process;

    imagSum_sign_write_assign_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                imagSum_sign_write_assign_reg_330 <= newret6_reg_1512;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                imagSum_sign_write_assign_reg_330 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    n_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1345_fu_536_p2 = ap_const_lv1_0))) then 
                    n_fu_146 <= add_ln1345_fu_542_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    n_fu_146 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    realSum_exponent_write_assign_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                realSum_exponent_write_assign_reg_343 <= grp_positAdd_fu_406_ap_return_3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                realSum_exponent_write_assign_reg_343 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    realSum_isZero_write_assign_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                realSum_isZero_write_assign_reg_356 <= grp_positAdd_fu_406_ap_return_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                realSum_isZero_write_assign_reg_356 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    realSum_mantissa_write_assign_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                realSum_mantissa_write_assign_fu_134 <= ap_const_lv30_20000000;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                realSum_mantissa_write_assign_fu_134 <= grp_positAdd_fu_406_ap_return_4;
            end if; 
        end if;
    end process;

    realSum_regime_write_assign_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                realSum_regime_write_assign_fu_130 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                realSum_regime_write_assign_fu_130 <= grp_positAdd_fu_406_ap_return_2;
            end if; 
        end if;
    end process;

    realSum_sign_write_assign_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                realSum_sign_write_assign_reg_369 <= grp_positAdd_fu_406_ap_return_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                realSum_sign_write_assign_reg_369 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    x_mantissa_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    x_mantissa_fu_126 <= ap_const_lv30_0;
                elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    x_mantissa_fu_126 <= grp_positAdd_fu_406_ap_return_4;
                end if;
            end if; 
        end if;
    end process;

    x_regime_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    x_regime_fu_122 <= ap_const_lv6_0;
                elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    x_regime_fu_122 <= grp_positAdd_fu_406_ap_return_2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                regime_20_reg_1507 <= regime_20_fu_1095_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    conv3_i_i351_i_cast_reg_1238(29 downto 0) <= conv3_i_i351_i_cast_fu_494_p1(29 downto 0);
                icmp_ln1345_reg_1243 <= icmp_ln1345_fu_536_p2;
                icmp_ln1345_reg_1243_pp0_iter1_reg <= icmp_ln1345_reg_1243;
                icmp_ln1345_reg_1243_pp0_iter2_reg <= icmp_ln1345_reg_1243_pp0_iter1_reg;
                icmp_ln1345_reg_1243_pp0_iter3_reg <= icmp_ln1345_reg_1243_pp0_iter2_reg;
                icmp_ln1345_reg_1243_pp0_iter4_reg <= icmp_ln1345_reg_1243_pp0_iter3_reg;
                icmp_ln1345_reg_1243_pp0_iter5_reg <= icmp_ln1345_reg_1243_pp0_iter4_reg;
                icmp_ln1345_reg_1243_pp0_iter6_reg <= icmp_ln1345_reg_1243_pp0_iter5_reg;
                icmp_ln1345_reg_1243_pp0_iter7_reg <= icmp_ln1345_reg_1243_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                icmp_ln631_3_reg_1379 <= icmp_ln631_3_fu_672_p2;
                in_isZero_2_reg_1369_pp0_iter4_reg <= in_isZero_2_reg_1369;
                in_isZero_2_reg_1369_pp0_iter5_reg <= in_isZero_2_reg_1369_pp0_iter4_reg;
                in_mantissa_2_reg_1374_pp0_iter4_reg <= in_mantissa_2_reg_1374;
                in_mantissa_2_reg_1374_pp0_iter5_reg <= in_mantissa_2_reg_1374_pp0_iter4_reg;
                isZero_1_reg_1478 <= isZero_1_fu_899_p2;
                mantissa_29_reg_1492 <= mantissa_29_fu_1001_p3;
                regime_16_reg_1485 <= regime_16_fu_979_p3;
                result_regime_25_reg_1384 <= result_regime_25_fu_678_p1;
                sign_5_reg_1497 <= sign_5_fu_1015_p2;
                y_sign_3_reg_1389 <= y_sign_3_fu_682_p2;
                y_sign_3_reg_1389_pp0_iter4_reg <= y_sign_3_reg_1389;
                y_sign_3_reg_1389_pp0_iter5_reg <= y_sign_3_reg_1389_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln631_reg_1335 <= icmp_ln631_fu_623_p2;
                result_regime_19_reg_1340 <= result_regime_19_fu_629_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                in_isZero_1_reg_1351 <= grp_positMul_fu_430_ap_return_1;
                in_mantissa_1_reg_1363 <= grp_positMul_fu_430_ap_return_3;
                in_regime_1_reg_1357 <= grp_positMul_fu_430_ap_return_2;
                in_sign_1_reg_1345 <= grp_positMul_fu_430_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                in_isZero_1_reg_1351_pp0_iter4_reg <= in_isZero_1_reg_1351;
                in_mantissa_1_reg_1363_pp0_iter4_reg <= in_mantissa_1_reg_1363;
                in_sign_1_reg_1345_pp0_iter4_reg <= in_sign_1_reg_1345;
                isZero_reg_1454 <= isZero_fu_759_p2;
                mantissa_26_reg_1468 <= mantissa_26_fu_861_p3;
                regime_13_reg_1461 <= regime_13_fu_839_p3;
                result_regime_23_reg_1424 <= result_regime_23_fu_721_p3;
                sign_3_reg_1473 <= sign_3_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                in_isZero_2_reg_1369 <= grp_positMul_fu_430_ap_return_1;
                in_mantissa_2_reg_1374 <= grp_positMul_fu_430_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                in_isZero_reg_1318 <= grp_positMul_fu_430_ap_return_1;
                in_mantissa_reg_1329 <= grp_positMul_fu_430_ap_return_3;
                in_regime_reg_1324 <= grp_positMul_fu_430_ap_return_2;
                in_sign_reg_1312 <= grp_positMul_fu_430_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                newret11_reg_1247 <= grp_positAdd_fu_406_ap_return_0;
                newret12_reg_1252 <= grp_positAdd_fu_406_ap_return_1;
                newret14_reg_1257 <= grp_positAdd_fu_406_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                newret2_i_reg_1292 <= grp_positMul_fu_430_ap_return_0;
                newret4_i_reg_1297 <= grp_positMul_fu_430_ap_return_1;
                newret6_i_reg_1302 <= grp_positMul_fu_430_ap_return_2;
                newret8_i_reg_1307 <= grp_positMul_fu_430_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                newret6_reg_1512 <= grp_positAdd_fu_406_ap_return_0;
                newret7_reg_1517 <= grp_positAdd_fu_406_ap_return_1;
                newret9_reg_1522 <= grp_positAdd_fu_406_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                regime_22_reg_1502 <= regime_22_fu_1050_p3;
                result_regime_28_reg_1394 <= result_regime_28_fu_688_p3;
                result_regime_28_reg_1394_pp0_iter4_reg <= result_regime_28_reg_1394;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                result_exponent_reg_1414 <= grp_positAdd_fu_406_ap_return_3;
                result_isZero_reg_1404 <= grp_positAdd_fu_406_ap_return_1;
                result_mantissa_reg_1419 <= grp_positAdd_fu_406_ap_return_4;
                result_regime_reg_1409 <= grp_positAdd_fu_406_ap_return_2;
                result_sign_reg_1399 <= grp_positAdd_fu_406_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                x_exponent_2_reg_1280 <= grp_pNAngle_fu_394_ap_return_3;
                x_isZero_4_reg_1268 <= grp_pNAngle_fu_394_ap_return_1;
                x_mantissa_4_reg_1286 <= grp_pNAngle_fu_394_ap_return_4;
                x_regime_4_reg_1274 <= grp_pNAngle_fu_394_ap_return_2;
                x_sign_1_reg_1262 <= grp_pNAngle_fu_394_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                x_exponent_3_reg_1444 <= grp_positAdd_fu_406_ap_return_3;
                x_isZero_5_reg_1434 <= grp_positAdd_fu_406_ap_return_1;
                x_mantissa_5_reg_1449 <= grp_positAdd_fu_406_ap_return_4;
                x_regime_5_reg_1439 <= grp_positAdd_fu_406_ap_return_2;
                x_sign_2_reg_1429 <= grp_positAdd_fu_406_ap_return_0;
            end if;
        end if;
    end process;
    conv3_i_i351_i_cast_reg_1238(59 downto 30) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln1345_fu_542_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_n_1) + unsigned(ap_const_lv7_1));
    add_ln629_1_fu_697_p2 <= std_logic_vector(signed(sext_ln629_2_fu_694_p1) + signed(ap_const_lv7_79));
    add_ln629_2_fu_658_p2 <= std_logic_vector(signed(sext_ln629_3_fu_654_p1) + signed(ap_const_lv7_74));
    add_ln629_fu_609_p2 <= std_logic_vector(signed(sext_ln629_fu_605_p1) + signed(ap_const_lv7_7D));
    add_ln757_4_fu_912_p2 <= std_logic_vector(signed(sext_ln756_1_fu_904_p1) + signed(add_i321_i));
    add_ln757_fu_772_p2 <= std_logic_vector(signed(sext_ln756_fu_764_p1) + signed(zext_ln756_fu_768_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp352 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_ignoreCallOp102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_ignoreCallOp172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_ignoreCallOp178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_ignoreCallOp189 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_ignoreCallOp196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_ignoreCallOp198 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_ignoreCallOp236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_ignoreCallOp258 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_ignoreCallOp349 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243)
    begin
        if (((icmp_ln1345_reg_1243 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter6_stage7_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln1345_reg_1243_pp0_iter6_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter6_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter6_stage7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, ap_loop_exit_ready_pp0_iter6_reg, ap_done_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_phi_mux_angle_exponent_phi_fu_272_p4_assign_proc : process(ap_enable_reg_pp0_iter1, angle_exponent_reg_268, ap_CS_fsm_pp0_stage1, icmp_ln1345_reg_1243_pp0_iter1_reg, newret14_reg_1257, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_angle_exponent_phi_fu_272_p4 <= newret14_reg_1257;
        else 
            ap_phi_mux_angle_exponent_phi_fu_272_p4 <= angle_exponent_reg_268;
        end if; 
    end process;


    ap_phi_mux_angle_isZero_phi_fu_284_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, angle_isZero_reg_280, icmp_ln1345_reg_1243_pp0_iter1_reg, newret12_reg_1252, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_angle_isZero_phi_fu_284_p4 <= newret12_reg_1252;
        else 
            ap_phi_mux_angle_isZero_phi_fu_284_p4 <= angle_isZero_reg_280;
        end if; 
    end process;


    ap_phi_mux_angle_sign_phi_fu_296_p4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, angle_sign_reg_292, icmp_ln1345_reg_1243_pp0_iter1_reg, newret11_reg_1247, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_angle_sign_phi_fu_296_p4 <= newret11_reg_1247;
        else 
            ap_phi_mux_angle_sign_phi_fu_296_p4 <= angle_sign_reg_292;
        end if; 
    end process;


    ap_phi_mux_imagSum_exponent_write_assign_phi_fu_308_p4_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, imagSum_exponent_write_assign_reg_304, icmp_ln1345_reg_1243_pp0_iter7_reg, newret9_reg_1522, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_phi_mux_imagSum_exponent_write_assign_phi_fu_308_p4 <= newret9_reg_1522;
        else 
            ap_phi_mux_imagSum_exponent_write_assign_phi_fu_308_p4 <= imagSum_exponent_write_assign_reg_304;
        end if; 
    end process;


    ap_phi_mux_imagSum_isZero_write_assign_phi_fu_321_p4_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, imagSum_isZero_write_assign_reg_317, icmp_ln1345_reg_1243_pp0_iter7_reg, newret7_reg_1517, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_phi_mux_imagSum_isZero_write_assign_phi_fu_321_p4 <= newret7_reg_1517;
        else 
            ap_phi_mux_imagSum_isZero_write_assign_phi_fu_321_p4 <= imagSum_isZero_write_assign_reg_317;
        end if; 
    end process;


    ap_phi_mux_imagSum_sign_write_assign_phi_fu_334_p4_assign_proc : process(ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, imagSum_sign_write_assign_reg_330, icmp_ln1345_reg_1243_pp0_iter7_reg, newret6_reg_1512, ap_block_pp0_stage7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_phi_mux_imagSum_sign_write_assign_phi_fu_334_p4 <= newret6_reg_1512;
        else 
            ap_phi_mux_imagSum_sign_write_assign_phi_fu_334_p4 <= imagSum_sign_write_assign_reg_330;
        end if; 
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, ap_enable_reg_pp0_iter0_reg)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_n_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, ap_block_pp0_stage0, n_fu_146)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_n_1 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_n_1 <= n_fu_146;
        end if; 
    end process;

    conv3_i_i351_i_cast_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv3_i_i351_i),60));

    grp_fu_446_p0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, zext_ln748_fu_749_p1, zext_ln748_4_fu_889_p1, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_446_p0 <= zext_ln748_4_fu_889_p1(30 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_446_p0 <= zext_ln748_fu_749_p1(30 - 1 downto 0);
            else 
                grp_fu_446_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_446_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_446_p1 <= conv3_i_i351_i_cast_reg_1238(30 - 1 downto 0);
    grp_fu_486_p3 <= grp_fu_446_p2(59 downto 59);
    grp_pNAngle_fu_394_ap_start <= grp_pNAngle_fu_394_ap_start_reg;
    grp_positAdd_fu_406_ap_start <= grp_positAdd_fu_406_ap_start_reg;

    grp_positAdd_fu_406_x_exponent2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, ap_CS_fsm_pp0_stage1, realSum_exponent_write_assign_reg_343, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, x_exponent_2_reg_1280, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, result_exponent_reg_1414, x_exponent_3_reg_1444, ap_phi_mux_angle_exponent_phi_fu_272_p4, ap_phi_mux_imagSum_exponent_write_assign_phi_fu_308_p4, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_x_exponent2 <= realSum_exponent_write_assign_reg_343;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_x_exponent2 <= ap_phi_mux_imagSum_exponent_write_assign_phi_fu_308_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_x_exponent2 <= x_exponent_3_reg_1444;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_x_exponent2 <= result_exponent_reg_1414;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_x_exponent2 <= x_exponent_2_reg_1280;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_x_exponent2 <= ap_phi_mux_angle_exponent_phi_fu_272_p4;
        else 
            grp_positAdd_fu_406_x_exponent2 <= "X";
        end if; 
    end process;


    grp_positAdd_fu_406_x_isZero_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, ap_CS_fsm_pp0_stage1, realSum_isZero_write_assign_reg_356, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, x_isZero_4_reg_1268, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, result_isZero_reg_1404, x_isZero_5_reg_1434, ap_phi_mux_angle_isZero_phi_fu_284_p4, ap_phi_mux_imagSum_isZero_write_assign_phi_fu_321_p4, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_x_isZero <= realSum_isZero_write_assign_reg_356;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_x_isZero <= ap_phi_mux_imagSum_isZero_write_assign_phi_fu_321_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_x_isZero <= x_isZero_5_reg_1434;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_x_isZero <= result_isZero_reg_1404;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_x_isZero <= x_isZero_4_reg_1268;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_x_isZero <= ap_phi_mux_angle_isZero_phi_fu_284_p4;
        else 
            grp_positAdd_fu_406_x_isZero <= "X";
        end if; 
    end process;


    grp_positAdd_fu_406_x_mantissa3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, ap_CS_fsm_pp0_stage1, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, x_mantissa_4_reg_1286, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, result_mantissa_reg_1419, x_mantissa_5_reg_1449, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352, x_mantissa_fu_126, realSum_mantissa_write_assign_fu_134, imagSum_mantissa_write_assign_fu_142)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_x_mantissa3 <= realSum_mantissa_write_assign_fu_134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_x_mantissa3 <= imagSum_mantissa_write_assign_fu_142;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_x_mantissa3 <= x_mantissa_5_reg_1449;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_x_mantissa3 <= result_mantissa_reg_1419;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_x_mantissa3 <= x_mantissa_4_reg_1286;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_x_mantissa3 <= x_mantissa_fu_126;
        else 
            grp_positAdd_fu_406_x_mantissa3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_406_x_regime1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, ap_CS_fsm_pp0_stage1, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, x_regime_4_reg_1274, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, result_regime_reg_1409, x_regime_5_reg_1439, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352, x_regime_fu_122, realSum_regime_write_assign_fu_130, imagSum_regime_write_assign_fu_138)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_x_regime1 <= realSum_regime_write_assign_fu_130;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_x_regime1 <= imagSum_regime_write_assign_fu_138;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_x_regime1 <= x_regime_5_reg_1439;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_x_regime1 <= result_regime_reg_1409;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_x_regime1 <= x_regime_4_reg_1274;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_x_regime1 <= x_regime_fu_122;
        else 
            grp_positAdd_fu_406_x_regime1 <= "XXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_406_x_sign_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, ap_CS_fsm_pp0_stage1, realSum_sign_write_assign_reg_369, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, x_sign_1_reg_1262, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, result_sign_reg_1399, x_sign_2_reg_1429, ap_phi_mux_angle_sign_phi_fu_296_p4, ap_phi_mux_imagSum_sign_write_assign_phi_fu_334_p4, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_x_sign <= realSum_sign_write_assign_reg_369;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_x_sign <= ap_phi_mux_imagSum_sign_write_assign_phi_fu_334_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_x_sign <= x_sign_2_reg_1429;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_x_sign <= result_sign_reg_1399;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_x_sign <= x_sign_1_reg_1262;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_x_sign <= ap_phi_mux_angle_sign_phi_fu_296_p4;
        else 
            grp_positAdd_fu_406_x_sign <= "X";
        end if; 
    end process;


    grp_positAdd_fu_406_y_isZero_val_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, deltaTheta_isZero, ap_CS_fsm_pp0_stage1, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, in_isZero_reg_1318, ap_CS_fsm_pp0_stage4, in_isZero_1_reg_1351_pp0_iter4_reg, ap_CS_fsm_pp0_stage5, in_isZero_2_reg_1369_pp0_iter5_reg, ap_CS_fsm_pp0_stage6, isZero_reg_1454, isZero_1_reg_1478, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_y_isZero_val <= isZero_reg_1454;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_y_isZero_val <= isZero_1_reg_1478;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_y_isZero_val <= in_isZero_2_reg_1369_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_y_isZero_val <= in_isZero_1_reg_1351_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_y_isZero_val <= in_isZero_reg_1318;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_y_isZero_val <= deltaTheta_isZero;
        else 
            grp_positAdd_fu_406_y_isZero_val <= "X";
        end if; 
    end process;


    grp_positAdd_fu_406_y_mantissa3_val_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, deltaTheta_mantissa, ap_CS_fsm_pp0_stage1, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, in_mantissa_reg_1329, ap_CS_fsm_pp0_stage4, in_mantissa_1_reg_1363_pp0_iter4_reg, ap_CS_fsm_pp0_stage5, in_mantissa_2_reg_1374_pp0_iter5_reg, ap_CS_fsm_pp0_stage6, mantissa_26_reg_1468, mantissa_29_reg_1492, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_y_mantissa3_val <= mantissa_26_reg_1468;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_y_mantissa3_val <= mantissa_29_reg_1492;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_y_mantissa3_val <= in_mantissa_2_reg_1374_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_y_mantissa3_val <= in_mantissa_1_reg_1363_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_y_mantissa3_val <= in_mantissa_reg_1329;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_y_mantissa3_val <= deltaTheta_mantissa;
        else 
            grp_positAdd_fu_406_y_mantissa3_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_406_y_regime1_val_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, deltaTheta_regime, ap_CS_fsm_pp0_stage1, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, result_regime_28_reg_1394_pp0_iter4_reg, result_regime_23_reg_1424, regime_22_reg_1502, regime_20_reg_1507, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352, result_regime_27_fu_633_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_y_regime1_val <= regime_20_reg_1507;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_y_regime1_val <= regime_22_reg_1502;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_y_regime1_val <= result_regime_28_reg_1394_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_y_regime1_val <= result_regime_23_reg_1424;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_y_regime1_val <= result_regime_27_fu_633_p3;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_y_regime1_val <= deltaTheta_regime;
        else 
            grp_positAdd_fu_406_y_regime1_val <= "XXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_406_y_sign_val_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0_reg, icmp_ln1345_reg_1243, deltaTheta_sign, ap_CS_fsm_pp0_stage1, icmp_ln1345_reg_1243_pp0_iter3_reg, icmp_ln1345_reg_1243_pp0_iter4_reg, icmp_ln1345_reg_1243_pp0_iter5_reg, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_CS_fsm_pp0_stage4, in_sign_1_reg_1345_pp0_iter4_reg, ap_CS_fsm_pp0_stage5, y_sign_3_reg_1389_pp0_iter5_reg, ap_CS_fsm_pp0_stage6, sign_3_reg_1473, sign_5_reg_1497, ap_block_pp0_stage1_ignoreCallOp102, ap_block_pp0_stage4_ignoreCallOp196, ap_block_pp0_stage5_ignoreCallOp236, ap_block_pp0_stage6_ignoreCallOp258, ap_block_pp0_stage7_ignoreCallOp349, ap_block_pp0_stage0_ignoreCallOp352, y_sign_1_fu_640_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp352) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_positAdd_fu_406_y_sign_val <= sign_3_reg_1473;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_ignoreCallOp349) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_positAdd_fu_406_y_sign_val <= sign_5_reg_1497;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_ignoreCallOp258) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_positAdd_fu_406_y_sign_val <= y_sign_3_reg_1389_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp236) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_positAdd_fu_406_y_sign_val <= in_sign_1_reg_1345_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp196) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_positAdd_fu_406_y_sign_val <= y_sign_1_fu_640_p2;
        elsif (((icmp_ln1345_reg_1243 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_positAdd_fu_406_y_sign_val <= deltaTheta_sign;
        else 
            grp_positAdd_fu_406_y_sign_val <= "X";
        end if; 
    end process;

    grp_positCos_fu_382_ap_start <= grp_positCos_fu_382_ap_start_reg;

    grp_positMul_fu_430_x_exponent2_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_3, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_positMul_fu_430_x_exponent2 <= ap_const_lv1_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_positMul_fu_430_x_exponent2 <= grp_pNAngle_fu_394_ap_return_3;
        else 
            grp_positMul_fu_430_x_exponent2 <= "X";
        end if; 
    end process;


    grp_positMul_fu_430_x_isZero_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, newret4_i_reg_1297, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_1, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_positMul_fu_430_x_isZero <= newret4_i_reg_1297;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_positMul_fu_430_x_isZero <= grp_pNAngle_fu_394_ap_return_1;
        else 
            grp_positMul_fu_430_x_isZero <= "X";
        end if; 
    end process;


    grp_positMul_fu_430_x_mantissa_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, newret8_i_reg_1307, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_4, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_positMul_fu_430_x_mantissa <= newret8_i_reg_1307;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_positMul_fu_430_x_mantissa <= grp_pNAngle_fu_394_ap_return_4;
        else 
            grp_positMul_fu_430_x_mantissa <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_positMul_fu_430_x_regime1_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, newret6_i_reg_1302, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_2, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_positMul_fu_430_x_regime1 <= newret6_i_reg_1302;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_positMul_fu_430_x_regime1 <= grp_pNAngle_fu_394_ap_return_2;
        else 
            grp_positMul_fu_430_x_regime1 <= "XXXXXX";
        end if; 
    end process;


    grp_positMul_fu_430_x_sign_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, newret2_i_reg_1292, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_0, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_positMul_fu_430_x_sign <= newret2_i_reg_1292;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_positMul_fu_430_x_sign <= grp_pNAngle_fu_394_ap_return_0;
        else 
            grp_positMul_fu_430_x_sign <= "X";
        end if; 
    end process;


    grp_positMul_fu_430_y_exponent2_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, x_exponent_2_reg_1280, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_3, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_positMul_fu_430_y_exponent2 <= ap_const_lv1_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_positMul_fu_430_y_exponent2 <= x_exponent_2_reg_1280;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_positMul_fu_430_y_exponent2 <= grp_pNAngle_fu_394_ap_return_3;
        else 
            grp_positMul_fu_430_y_exponent2 <= "X";
        end if; 
    end process;


    grp_positMul_fu_430_y_isZero_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, x_isZero_4_reg_1268, ap_CS_fsm_pp0_stage3, in_isZero_reg_1318, ap_CS_fsm_pp0_stage4, in_isZero_1_reg_1351, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_1, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_positMul_fu_430_y_isZero <= in_isZero_1_reg_1351;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_positMul_fu_430_y_isZero <= in_isZero_reg_1318;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_positMul_fu_430_y_isZero <= x_isZero_4_reg_1268;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_positMul_fu_430_y_isZero <= grp_pNAngle_fu_394_ap_return_1;
            else 
                grp_positMul_fu_430_y_isZero <= "X";
            end if;
        else 
            grp_positMul_fu_430_y_isZero <= "X";
        end if; 
    end process;


    grp_positMul_fu_430_y_mantissa3_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, x_mantissa_4_reg_1286, ap_CS_fsm_pp0_stage3, in_mantissa_reg_1329, ap_CS_fsm_pp0_stage4, in_mantissa_1_reg_1363, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_4, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_positMul_fu_430_y_mantissa3 <= in_mantissa_1_reg_1363;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_positMul_fu_430_y_mantissa3 <= in_mantissa_reg_1329;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_positMul_fu_430_y_mantissa3 <= x_mantissa_4_reg_1286;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_positMul_fu_430_y_mantissa3 <= grp_pNAngle_fu_394_ap_return_4;
            else 
                grp_positMul_fu_430_y_mantissa3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_positMul_fu_430_y_mantissa3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_positMul_fu_430_y_regime1_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, x_regime_4_reg_1274, ap_CS_fsm_pp0_stage3, in_regime_reg_1324, ap_CS_fsm_pp0_stage4, in_regime_1_reg_1357, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_2, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_positMul_fu_430_y_regime1 <= in_regime_1_reg_1357;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_positMul_fu_430_y_regime1 <= in_regime_reg_1324;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_positMul_fu_430_y_regime1 <= x_regime_4_reg_1274;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_positMul_fu_430_y_regime1 <= grp_pNAngle_fu_394_ap_return_2;
            else 
                grp_positMul_fu_430_y_regime1 <= "XXXXXX";
            end if;
        else 
            grp_positMul_fu_430_y_regime1 <= "XXXXXX";
        end if; 
    end process;


    grp_positMul_fu_430_y_sign_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1345_reg_1243_pp0_iter3_reg, x_sign_1_reg_1262, ap_CS_fsm_pp0_stage2, in_sign_reg_1312, ap_CS_fsm_pp0_stage3, in_sign_1_reg_1345, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, grp_pNAngle_fu_394_ap_return_0, ap_block_pp0_stage2_ignoreCallOp172, ap_block_pp0_stage3_ignoreCallOp178, ap_block_pp0_stage4_ignoreCallOp189, ap_block_pp0_stage5_ignoreCallOp198)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1345_reg_1243_pp0_iter3_reg = ap_const_lv1_0))) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_ignoreCallOp198) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_positMul_fu_430_y_sign <= in_sign_1_reg_1345;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_ignoreCallOp189) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_positMul_fu_430_y_sign <= in_sign_reg_1312;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_ignoreCallOp178) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_positMul_fu_430_y_sign <= x_sign_1_reg_1262;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_ignoreCallOp172) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_positMul_fu_430_y_sign <= grp_pNAngle_fu_394_ap_return_0;
            else 
                grp_positMul_fu_430_y_sign <= "X";
            end if;
        else 
            grp_positMul_fu_430_y_sign <= "X";
        end if; 
    end process;

    icmp_ln1345_fu_536_p2 <= "1" when (ap_sig_allocacmp_n_1 = ap_const_lv7_40) else "0";
    icmp_ln631_2_fu_711_p2 <= "1" when (tmp_i_77_fu_703_p3 = ap_const_lv2_2) else "0";
    icmp_ln631_3_fu_672_p2 <= "1" when (tmp_5_i_fu_664_p3 = ap_const_lv2_2) else "0";
    icmp_ln631_fu_623_p2 <= "1" when (tmp_i_fu_615_p3 = ap_const_lv2_2) else "0";
    icmp_ln771_1_fu_935_p2 <= "1" when (tmp_s_fu_927_p3 = ap_const_lv2_2) else "0";
    icmp_ln771_fu_795_p2 <= "1" when (tmp_fu_787_p3 = ap_const_lv2_2) else "0";
    icmp_ln803_1_fu_1021_p2 <= "1" when (signed(regime_16_reg_1485) > signed(ap_const_lv6_1D)) else "0";
    icmp_ln803_fu_1066_p2 <= "1" when (signed(regime_13_reg_1461) > signed(ap_const_lv6_1D)) else "0";
    icmp_ln804_1_fu_1026_p2 <= "1" when (signed(regime_16_reg_1485) > signed(ap_const_lv6_22)) else "0";
    icmp_ln804_fu_1071_p2 <= "1" when (signed(regime_13_reg_1461) > signed(ap_const_lv6_22)) else "0";
    imagSum_exponent_write_assign_out <= imagSum_exponent_write_assign_reg_304;

    imagSum_exponent_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            imagSum_exponent_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            imagSum_exponent_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    imagSum_isZero_write_assign_out <= imagSum_isZero_write_assign_reg_317;

    imagSum_isZero_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            imagSum_isZero_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            imagSum_isZero_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    imagSum_mantissa_write_assign_out <= imagSum_mantissa_write_assign_fu_142;

    imagSum_mantissa_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            imagSum_mantissa_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            imagSum_mantissa_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    imagSum_regime_write_assign_out <= imagSum_regime_write_assign_fu_138;

    imagSum_regime_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            imagSum_regime_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            imagSum_regime_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    imagSum_sign_write_assign_out <= imagSum_sign_write_assign_reg_330;

    imagSum_sign_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            imagSum_sign_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            imagSum_sign_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    isZero_1_fu_899_p2 <= (grp_positAdd_fu_406_ap_return_1 or empty);
    isZero_fu_759_p2 <= (grp_positCos_fu_382_ap_return_1 or empty);
    mantissa_13_fu_831_p3 <= 
        mantissa_fu_807_p3 when (grp_fu_486_p3(0) = '1') else 
        mantissa_25_fu_815_p3;
    mantissa_18_fu_971_p3 <= 
        mantissa_27_fu_947_p3 when (grp_fu_486_p3(0) = '1') else 
        mantissa_28_fu_955_p3;
    mantissa_25_fu_815_p3 <= grp_fu_446_p2(58 downto 29);
    mantissa_26_fu_861_p3 <= 
        select_ln820_12_fu_847_p3 when (or_ln820_7_fu_855_p2(0) = '1') else 
        mantissa_13_fu_831_p3;
    mantissa_27_fu_947_p3 <= grp_fu_446_p2(59 downto 30);
    mantissa_28_fu_955_p3 <= grp_fu_446_p2(58 downto 29);
    mantissa_29_fu_1001_p3 <= 
        select_ln820_16_fu_987_p3 when (or_ln820_8_fu_995_p2(0) = '1') else 
        mantissa_18_fu_971_p3;
    mantissa_fu_807_p3 <= grp_fu_446_p2(59 downto 30);
    or_ln820_2_fu_1045_p2 <= (isZero_1_reg_1478 or icmp_ln803_1_fu_1021_p2);
    or_ln820_7_fu_855_p2 <= (isZero_fu_759_p2 or icmp_ln771_fu_795_p2);
    or_ln820_8_fu_995_p2 <= (isZero_1_fu_899_p2 or icmp_ln771_1_fu_935_p2);
    or_ln820_fu_1090_p2 <= (isZero_reg_1454 or icmp_ln803_fu_1066_p2);
    realSum_exponent_write_assign_out <= realSum_exponent_write_assign_reg_343;

    realSum_exponent_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            realSum_exponent_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            realSum_exponent_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    realSum_isZero_write_assign_out <= realSum_isZero_write_assign_reg_356;

    realSum_isZero_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            realSum_isZero_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            realSum_isZero_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    realSum_mantissa_write_assign_out <= realSum_mantissa_write_assign_fu_134;

    realSum_mantissa_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            realSum_mantissa_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            realSum_mantissa_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    realSum_regime_write_assign_out <= realSum_regime_write_assign_fu_130;

    realSum_regime_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            realSum_regime_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            realSum_regime_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    realSum_sign_write_assign_out <= realSum_sign_write_assign_reg_369;

    realSum_sign_write_assign_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln1345_reg_1243_pp0_iter6_reg, ap_block_pp0_stage7_11001, ap_loop_exit_ready_pp0_iter6_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1345_reg_1243_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            realSum_sign_write_assign_out_ap_vld <= ap_const_logic_1;
        else 
            realSum_sign_write_assign_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    regime_13_fu_839_p3 <= 
        ap_const_lv6_22 when (icmp_ln771_fu_795_p2(0) = '1') else 
        sf_r_19_fu_823_p3;
    regime_16_fu_979_p3 <= 
        ap_const_lv6_22 when (icmp_ln771_1_fu_935_p2(0) = '1') else 
        sf_r_20_fu_963_p3;
    regime_20_fu_1095_p3 <= 
        select_ln820_fu_1083_p3 when (or_ln820_fu_1090_p2(0) = '1') else 
        select_ln804_fu_1076_p3;
    regime_22_fu_1050_p3 <= 
        select_ln820_14_fu_1038_p3 when (or_ln820_2_fu_1045_p2(0) = '1') else 
        select_ln804_1_fu_1031_p3;
    result_regime_19_fu_629_p1 <= add_ln629_fu_609_p2(6 - 1 downto 0);
    result_regime_22_fu_717_p1 <= add_ln629_1_fu_697_p2(6 - 1 downto 0);
    result_regime_23_fu_721_p3 <= 
        ap_const_lv6_22 when (icmp_ln631_2_fu_711_p2(0) = '1') else 
        result_regime_22_fu_717_p1;
    result_regime_25_fu_678_p1 <= add_ln629_2_fu_658_p2(6 - 1 downto 0);
    result_regime_27_fu_633_p3 <= 
        ap_const_lv6_22 when (icmp_ln631_reg_1335(0) = '1') else 
        result_regime_19_reg_1340;
    result_regime_28_fu_688_p3 <= 
        ap_const_lv6_22 when (icmp_ln631_3_reg_1379(0) = '1') else 
        result_regime_25_reg_1384;
    select_ln804_1_fu_1031_p3 <= 
        regime_16_reg_1485 when (icmp_ln804_1_fu_1026_p2(0) = '1') else 
        ap_const_lv6_22;
    select_ln804_fu_1076_p3 <= 
        regime_13_reg_1461 when (icmp_ln804_fu_1071_p2(0) = '1') else 
        ap_const_lv6_22;
    select_ln820_12_fu_847_p3 <= 
        ap_const_lv30_0 when (isZero_fu_759_p2(0) = '1') else 
        ap_const_lv30_20000000;
    select_ln820_14_fu_1038_p3 <= 
        ap_const_lv6_0 when (isZero_1_reg_1478(0) = '1') else 
        ap_const_lv6_1E;
    select_ln820_16_fu_987_p3 <= 
        ap_const_lv30_0 when (isZero_1_fu_899_p2(0) = '1') else 
        ap_const_lv30_20000000;
    select_ln820_fu_1083_p3 <= 
        ap_const_lv6_0 when (isZero_reg_1454(0) = '1') else 
        ap_const_lv6_1E;
        sext_ln629_2_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in_regime_1_reg_1357),7));

        sext_ln629_3_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_positMul_fu_430_ap_return_2),7));

    sext_ln629_fu_605_p0 <= grp_positMul_fu_430_ap_return_2;
        sext_ln629_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln629_fu_605_p0),7));

        sext_ln756_1_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_positAdd_fu_406_ap_return_2),7));

        sext_ln756_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_positCos_fu_382_ap_return_2),7));

    sf_r_14_fu_801_p2 <= std_logic_vector(unsigned(trunc_ln734_fu_783_p1) + unsigned(ap_const_lv6_1));
    sf_r_16_fu_917_p2 <= std_logic_vector(unsigned(add_ln757_4_fu_912_p2) + unsigned(zext_ln756_1_fu_908_p1));
    sf_r_17_fu_941_p2 <= std_logic_vector(unsigned(trunc_ln734_2_fu_923_p1) + unsigned(ap_const_lv6_1));
    sf_r_19_fu_823_p3 <= 
        sf_r_14_fu_801_p2 when (grp_fu_486_p3(0) = '1') else 
        trunc_ln734_fu_783_p1;
    sf_r_20_fu_963_p3 <= 
        sf_r_17_fu_941_p2 when (grp_fu_486_p3(0) = '1') else 
        trunc_ln734_2_fu_923_p1;
    sf_r_fu_778_p2 <= std_logic_vector(unsigned(add_ln757_fu_772_p2) + unsigned(add_i321_i));
    sign_3_fu_875_p2 <= (xor_ln820_fu_869_p2 and sign_fu_754_p2);
    sign_4_fu_894_p2 <= (grp_positAdd_fu_406_ap_return_0 xor empty_5);
    sign_5_fu_1015_p2 <= (xor_ln820_1_fu_1009_p2 and sign_4_fu_894_p2);
    sign_fu_754_p2 <= (grp_positCos_fu_382_ap_return_0 xor empty_5);
    tmp_5_i_fu_664_p3 <= add_ln629_2_fu_658_p2(6 downto 5);
    tmp_fu_787_p3 <= sf_r_fu_778_p2(6 downto 5);
    tmp_i_77_fu_703_p3 <= add_ln629_1_fu_697_p2(6 downto 5);
    tmp_i_fu_615_p3 <= add_ln629_fu_609_p2(6 downto 5);
    tmp_s_fu_927_p3 <= sf_r_16_fu_917_p2(6 downto 5);
    trunc_ln734_2_fu_923_p1 <= sf_r_16_fu_917_p2(6 - 1 downto 0);
    trunc_ln734_fu_783_p1 <= sf_r_fu_778_p2(6 - 1 downto 0);
    xor_ln820_1_fu_1009_p2 <= (isZero_1_fu_899_p2 xor ap_const_lv1_1);
    xor_ln820_fu_869_p2 <= (isZero_fu_759_p2 xor ap_const_lv1_1);
    y_sign_1_fu_640_p2 <= (in_sign_reg_1312 xor ap_const_lv1_1);
    y_sign_3_fu_682_p2 <= (grp_positMul_fu_430_ap_return_0 xor ap_const_lv1_1);
    zext_ln748_4_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_positAdd_fu_406_ap_return_4),60));
    zext_ln748_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_positCos_fu_382_ap_return_4),60));
    zext_ln756_1_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_positAdd_fu_406_ap_return_3),7));
    zext_ln756_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_positCos_fu_382_ap_return_3),7));
end behav;
