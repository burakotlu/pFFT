// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module pFFT_positAdd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        x_sign,
        x_isZero,
        x_regime1,
        x_exponent2,
        x_mantissa3,
        y_sign_val,
        y_isZero_val,
        y_regime1_val,
        y_exponent2_val,
        y_mantissa3_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [0:0] x_sign;
input  [0:0] x_isZero;
input  [5:0] x_regime1;
input  [0:0] x_exponent2;
input  [29:0] x_mantissa3;
input  [0:0] y_sign_val;
input  [0:0] y_isZero_val;
input  [5:0] y_regime1_val;
input  [0:0] y_exponent2_val;
input  [29:0] y_mantissa3_val;
output  [0:0] ap_return_0;
output  [0:0] ap_return_1;
output  [5:0] ap_return_2;
output  [0:0] ap_return_3;
output  [29:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
reg   [29:0] y_mantissa3_val_read_reg_1721;
wire    ap_block_pp0_stage0_11001;
reg   [29:0] y_mantissa3_val_read_reg_1721_pp0_iter1_reg;
reg   [29:0] y_mantissa3_val_read_reg_1721_pp0_iter2_reg;
reg   [29:0] y_mantissa3_val_read_reg_1721_pp0_iter3_reg;
reg   [29:0] y_mantissa3_val_read_reg_1721_pp0_iter4_reg;
reg   [29:0] y_mantissa3_val_read_reg_1721_pp0_iter5_reg;
reg   [29:0] y_mantissa3_val_read_reg_1721_pp0_iter6_reg;
reg  signed [5:0] y_regime1_val_read_reg_1726;
reg  signed [5:0] y_regime1_val_read_reg_1726_pp0_iter1_reg;
reg  signed [5:0] y_regime1_val_read_reg_1726_pp0_iter2_reg;
reg  signed [5:0] y_regime1_val_read_reg_1726_pp0_iter3_reg;
reg  signed [5:0] y_regime1_val_read_reg_1726_pp0_iter4_reg;
reg  signed [5:0] y_regime1_val_read_reg_1726_pp0_iter5_reg;
reg   [0:0] y_isZero_val_read_reg_1731;
reg   [0:0] y_isZero_val_read_reg_1731_pp0_iter1_reg;
reg   [0:0] y_isZero_val_read_reg_1731_pp0_iter2_reg;
reg   [0:0] y_isZero_val_read_reg_1731_pp0_iter3_reg;
reg   [0:0] y_isZero_val_read_reg_1731_pp0_iter4_reg;
reg   [0:0] y_isZero_val_read_reg_1731_pp0_iter5_reg;
reg   [29:0] x_mantissa3_read_reg_1737;
reg   [29:0] x_mantissa3_read_reg_1737_pp0_iter1_reg;
reg   [29:0] x_mantissa3_read_reg_1737_pp0_iter2_reg;
reg   [29:0] x_mantissa3_read_reg_1737_pp0_iter3_reg;
reg   [29:0] x_mantissa3_read_reg_1737_pp0_iter4_reg;
reg   [29:0] x_mantissa3_read_reg_1737_pp0_iter5_reg;
reg  signed [5:0] x_regime1_read_reg_1742;
reg  signed [5:0] x_regime1_read_reg_1742_pp0_iter1_reg;
reg  signed [5:0] x_regime1_read_reg_1742_pp0_iter2_reg;
reg  signed [5:0] x_regime1_read_reg_1742_pp0_iter3_reg;
reg  signed [5:0] x_regime1_read_reg_1742_pp0_iter4_reg;
reg  signed [5:0] x_regime1_read_reg_1742_pp0_iter5_reg;
wire   [0:0] xor_ln559_fu_412_p2;
reg   [0:0] xor_ln559_reg_1747;
wire   [30:0] mantissa_fu_418_p2;
reg   [30:0] mantissa_reg_1752;
wire   [30:0] mantissa_19_fu_424_p2;
reg   [30:0] mantissa_19_reg_1757;
wire   [5:0] trunc_ln568_fu_430_p1;
reg   [5:0] trunc_ln568_reg_1762;
reg   [5:0] trunc_ln568_reg_1762_pp0_iter1_reg;
reg   [5:0] trunc_ln568_reg_1762_pp0_iter2_reg;
reg   [5:0] trunc_ln568_reg_1762_pp0_iter3_reg;
reg   [5:0] trunc_ln568_reg_1762_pp0_iter4_reg;
reg   [5:0] trunc_ln568_reg_1762_pp0_iter5_reg;
wire   [0:0] isZero_fu_472_p2;
reg   [0:0] isZero_reg_1767;
reg   [0:0] isZero_reg_1767_pp0_iter1_reg;
reg   [0:0] isZero_reg_1767_pp0_iter2_reg;
reg   [0:0] isZero_reg_1767_pp0_iter3_reg;
reg   [0:0] isZero_reg_1767_pp0_iter4_reg;
reg   [0:0] isZero_reg_1767_pp0_iter5_reg;
reg   [0:0] isZero_reg_1767_pp0_iter6_reg;
wire   [0:0] and_ln605_fu_490_p2;
reg   [0:0] and_ln605_reg_1773;
reg   [0:0] and_ln605_reg_1773_pp0_iter1_reg;
reg   [0:0] and_ln605_reg_1773_pp0_iter2_reg;
reg   [0:0] and_ln605_reg_1773_pp0_iter3_reg;
reg   [0:0] and_ln605_reg_1773_pp0_iter4_reg;
reg   [0:0] and_ln605_reg_1773_pp0_iter5_reg;
wire   [0:0] exponent_fu_504_p9;
reg   [0:0] exponent_reg_1778;
reg   [0:0] exponent_reg_1778_pp0_iter1_reg;
reg   [0:0] exponent_reg_1778_pp0_iter2_reg;
reg   [0:0] exponent_reg_1778_pp0_iter3_reg;
reg   [0:0] exponent_reg_1778_pp0_iter4_reg;
reg   [0:0] exponent_reg_1778_pp0_iter5_reg;
reg   [0:0] exponent_reg_1778_pp0_iter6_reg;
wire   [0:0] sign_fu_524_p9;
reg   [0:0] sign_reg_1783;
reg   [0:0] sign_reg_1783_pp0_iter1_reg;
reg   [0:0] sign_reg_1783_pp0_iter2_reg;
reg   [0:0] sign_reg_1783_pp0_iter3_reg;
reg   [0:0] sign_reg_1783_pp0_iter4_reg;
reg   [0:0] sign_reg_1783_pp0_iter5_reg;
reg   [0:0] sign_reg_1783_pp0_iter6_reg;
wire   [30:0] mantissa_23_fu_544_p3;
reg   [30:0] mantissa_23_reg_1788;
reg   [30:0] mantissa_23_reg_1788_pp0_iter2_reg;
reg   [30:0] mantissa_23_reg_1788_pp0_iter3_reg;
reg   [30:0] mantissa_23_reg_1788_pp0_iter4_reg;
reg   [30:0] mantissa_23_reg_1788_pp0_iter5_reg;
wire   [3:0] count_14_fu_807_p3;
reg   [3:0] count_14_reg_1794;
wire   [0:0] flag_7_fu_815_p2;
reg   [0:0] flag_7_reg_1801;
reg   [0:0] tmp_23_reg_1807;
reg   [0:0] tmp_24_reg_1813;
reg   [0:0] tmp_25_reg_1819;
reg   [0:0] tmp_26_reg_1825;
reg   [0:0] tmp_27_reg_1831;
reg   [0:0] tmp_28_reg_1837;
reg   [0:0] tmp_28_reg_1837_pp0_iter2_reg;
reg   [0:0] tmp_29_reg_1843;
reg   [0:0] tmp_29_reg_1843_pp0_iter2_reg;
reg   [0:0] tmp_30_reg_1849;
reg   [0:0] tmp_30_reg_1849_pp0_iter2_reg;
reg   [0:0] tmp_31_reg_1855;
reg   [0:0] tmp_31_reg_1855_pp0_iter2_reg;
reg   [0:0] tmp_32_reg_1861;
reg   [0:0] tmp_32_reg_1861_pp0_iter2_reg;
reg   [0:0] tmp_33_reg_1867;
reg   [0:0] tmp_33_reg_1867_pp0_iter2_reg;
reg   [0:0] tmp_33_reg_1867_pp0_iter3_reg;
reg   [0:0] tmp_34_reg_1873;
reg   [0:0] tmp_34_reg_1873_pp0_iter2_reg;
reg   [0:0] tmp_34_reg_1873_pp0_iter3_reg;
reg   [0:0] tmp_35_reg_1879;
reg   [0:0] tmp_35_reg_1879_pp0_iter2_reg;
reg   [0:0] tmp_35_reg_1879_pp0_iter3_reg;
reg   [0:0] tmp_36_reg_1885;
reg   [0:0] tmp_36_reg_1885_pp0_iter2_reg;
reg   [0:0] tmp_36_reg_1885_pp0_iter3_reg;
reg   [0:0] tmp_37_reg_1891;
reg   [0:0] tmp_37_reg_1891_pp0_iter2_reg;
reg   [0:0] tmp_37_reg_1891_pp0_iter3_reg;
reg   [0:0] tmp_38_reg_1897;
reg   [0:0] tmp_38_reg_1897_pp0_iter2_reg;
reg   [0:0] tmp_38_reg_1897_pp0_iter3_reg;
reg   [0:0] tmp_38_reg_1897_pp0_iter4_reg;
reg   [0:0] tmp_39_reg_1903;
reg   [0:0] tmp_39_reg_1903_pp0_iter2_reg;
reg   [0:0] tmp_39_reg_1903_pp0_iter3_reg;
reg   [0:0] tmp_39_reg_1903_pp0_iter4_reg;
reg   [0:0] tmp_40_reg_1909;
reg   [0:0] tmp_40_reg_1909_pp0_iter2_reg;
reg   [0:0] tmp_40_reg_1909_pp0_iter3_reg;
reg   [0:0] tmp_40_reg_1909_pp0_iter4_reg;
reg   [0:0] tmp_41_reg_1915;
reg   [0:0] tmp_41_reg_1915_pp0_iter2_reg;
reg   [0:0] tmp_41_reg_1915_pp0_iter3_reg;
reg   [0:0] tmp_41_reg_1915_pp0_iter4_reg;
reg   [0:0] tmp_42_reg_1921;
reg   [0:0] tmp_42_reg_1921_pp0_iter2_reg;
reg   [0:0] tmp_42_reg_1921_pp0_iter3_reg;
reg   [0:0] tmp_42_reg_1921_pp0_iter4_reg;
reg   [0:0] tmp_43_reg_1927;
reg   [0:0] tmp_43_reg_1927_pp0_iter2_reg;
reg   [0:0] tmp_43_reg_1927_pp0_iter3_reg;
reg   [0:0] tmp_43_reg_1927_pp0_iter4_reg;
reg   [0:0] tmp_43_reg_1927_pp0_iter5_reg;
reg   [0:0] tmp_44_reg_1933;
reg   [0:0] tmp_44_reg_1933_pp0_iter2_reg;
reg   [0:0] tmp_44_reg_1933_pp0_iter3_reg;
reg   [0:0] tmp_44_reg_1933_pp0_iter4_reg;
reg   [0:0] tmp_44_reg_1933_pp0_iter5_reg;
wire   [3:0] count_24_fu_1110_p3;
reg   [3:0] count_24_reg_1939;
wire   [0:0] flag_12_fu_1117_p2;
reg   [0:0] flag_12_reg_1946;
wire   [4:0] count_34_fu_1239_p3;
reg   [4:0] count_34_reg_1952;
wire   [0:0] flag_17_fu_1246_p2;
reg   [0:0] flag_17_reg_1959;
wire   [4:0] count_44_fu_1364_p3;
reg   [4:0] count_44_reg_1965;
wire   [0:0] flag_22_fu_1371_p2;
reg   [0:0] flag_22_reg_1972;
wire   [4:0] count_54_fu_1489_p3;
reg   [4:0] count_54_reg_1978;
wire   [0:0] flag_27_fu_1496_p2;
reg   [0:0] flag_27_reg_1985;
wire   [29:0] select_ln611_fu_1639_p3;
reg   [29:0] select_ln611_reg_1991;
wire   [2:0] sel_tmp_fu_1651_p4;
reg   [2:0] sel_tmp_reg_1996;
wire   [5:0] regime_13_fu_1659_p9;
reg   [5:0] regime_13_reg_2001;
wire  signed [5:0] icmp_ln541_fu_202_p0;
wire  signed [5:0] icmp_ln541_fu_202_p1;
wire    ap_block_pp0_stage0;
wire  signed [5:0] sext_ln546_fu_208_p0;
wire  signed [6:0] sext_ln546_fu_208_p1;
wire   [6:0] zext_ln546_fu_212_p1;
wire  signed [5:0] sext_ln547_fu_222_p0;
wire  signed [6:0] sext_ln547_fu_222_p1;
wire   [6:0] zext_ln547_fu_226_p1;
wire  signed [5:0] icmp_ln541_1_fu_236_p0;
wire  signed [5:0] icmp_ln541_1_fu_236_p1;
wire   [0:0] icmp_ln541_1_fu_236_p2;
wire   [0:0] and_ln541_fu_248_p2;
wire   [0:0] xor_ln541_fu_242_p2;
wire   [0:0] xor_ln542_fu_260_p2;
wire   [0:0] xor_ln542_1_fu_266_p2;
wire   [0:0] icmp_ln542_fu_278_p2;
wire   [0:0] and_ln542_fu_272_p2;
wire   [0:0] xor_ln542_2_fu_284_p2;
wire   [0:0] and_ln541_1_fu_254_p2;
wire   [0:0] and_ln542_1_fu_290_p2;
wire   [0:0] or_ln542_fu_296_p2;
wire   [0:0] icmp_ln541_fu_202_p2;
wire   [0:0] or_ln542_1_fu_302_p2;
wire   [29:0] empty_fu_308_p3;
wire   [6:0] sf_x_fu_216_p2;
wire   [6:0] sf_y_fu_230_p2;
wire   [6:0] empty_74_fu_320_p3;
wire   [6:0] empty_76_fu_336_p3;
wire   [6:0] diff_fu_352_p2;
wire   [29:0] mS_fu_344_p3;
wire   [6:0] sub_ln558_fu_370_p2;
wire   [31:0] zext_ln558_fu_366_p1;
wire   [31:0] zext_ln558_1_fu_376_p1;
wire   [31:0] zext_ln558_2_fu_386_p1;
wire   [31:0] shl_ln558_fu_380_p2;
wire   [31:0] lshr_ln558_fu_390_p2;
wire   [0:0] tmp_fu_358_p3;
wire   [30:0] trunc_ln558_fu_396_p1;
wire   [30:0] trunc_ln558_1_fu_400_p1;
wire   [30:0] p_cast_fu_316_p1;
wire   [30:0] mS_1_fu_404_p3;
wire   [0:0] icmp_ln601_fu_434_p2;
wire   [0:0] and_ln601_fu_440_p2;
wire   [0:0] empty_75_fu_328_p3;
wire   [0:0] and_ln601_2_fu_466_p2;
wire   [0:0] and_ln601_1_fu_446_p2;
wire   [0:0] or_ln605_fu_478_p2;
wire   [0:0] xor_ln605_fu_484_p2;
wire   [0:0] exponent_fu_504_p6;
wire   [0:0] exponent_fu_504_p7;
wire   [1:0] sel_tmp1_fu_496_p3;
wire   [0:0] sign_fu_524_p6;
wire   [0:0] sign_fu_524_p7;
wire   [0:0] flag_fu_549_p3;
wire   [0:0] count_fu_557_p2;
wire   [1:0] zext_ln97_fu_563_p1;
wire   [0:0] tmp_16_fu_567_p3;
wire   [1:0] count_1_fu_575_p3;
wire   [1:0] count_2_fu_583_p3;
wire   [0:0] flag_1_fu_591_p2;
wire   [1:0] add_ln101_fu_605_p2;
wire   [0:0] tmp_17_fu_597_p3;
wire   [1:0] count_3_fu_611_p3;
wire   [1:0] count_4_fu_619_p3;
wire   [2:0] zext_ln98_fu_627_p1;
wire   [0:0] flag_2_fu_631_p2;
wire   [2:0] add_ln101_1_fu_645_p2;
wire   [0:0] tmp_18_fu_637_p3;
wire   [2:0] count_5_fu_651_p3;
wire   [2:0] count_6_fu_659_p3;
wire   [0:0] flag_3_fu_667_p2;
wire   [2:0] add_ln101_2_fu_681_p2;
wire   [0:0] tmp_19_fu_673_p3;
wire   [2:0] count_7_fu_687_p3;
wire   [2:0] count_8_fu_695_p3;
wire   [0:0] flag_4_fu_703_p2;
wire   [2:0] add_ln101_3_fu_717_p2;
wire   [0:0] tmp_20_fu_709_p3;
wire   [2:0] count_9_fu_723_p3;
wire   [2:0] count_10_fu_731_p3;
wire   [0:0] flag_5_fu_739_p2;
wire   [2:0] add_ln101_4_fu_753_p2;
wire   [0:0] tmp_21_fu_745_p3;
wire   [2:0] count_11_fu_759_p3;
wire   [2:0] count_12_fu_767_p3;
wire   [3:0] zext_ln98_1_fu_775_p1;
wire   [0:0] flag_6_fu_779_p2;
wire   [3:0] add_ln101_5_fu_793_p2;
wire   [0:0] tmp_22_fu_785_p3;
wire   [3:0] count_13_fu_799_p3;
wire   [3:0] add_ln101_6_fu_997_p2;
wire   [3:0] count_15_fu_1002_p3;
wire   [3:0] count_16_fu_1008_p3;
wire   [0:0] flag_8_fu_1014_p2;
wire   [3:0] add_ln101_7_fu_1018_p2;
wire   [3:0] count_17_fu_1024_p3;
wire   [3:0] count_18_fu_1032_p3;
wire   [0:0] flag_9_fu_1039_p2;
wire   [3:0] add_ln101_8_fu_1044_p2;
wire   [3:0] count_19_fu_1050_p3;
wire   [3:0] count_20_fu_1058_p3;
wire   [0:0] flag_10_fu_1065_p2;
wire   [3:0] add_ln101_9_fu_1070_p2;
wire   [3:0] count_21_fu_1076_p3;
wire   [3:0] count_22_fu_1084_p3;
wire   [0:0] flag_11_fu_1091_p2;
wire   [3:0] add_ln101_10_fu_1096_p2;
wire   [3:0] count_23_fu_1102_p3;
wire   [3:0] add_ln101_11_fu_1122_p2;
wire   [3:0] count_25_fu_1127_p3;
wire   [3:0] count_26_fu_1133_p3;
wire   [0:0] flag_13_fu_1139_p2;
wire   [3:0] add_ln101_12_fu_1143_p2;
wire   [3:0] count_27_fu_1149_p3;
wire   [3:0] count_28_fu_1157_p3;
wire   [4:0] zext_ln98_2_fu_1164_p1;
wire   [0:0] flag_14_fu_1168_p2;
wire   [4:0] add_ln101_13_fu_1173_p2;
wire   [4:0] count_29_fu_1179_p3;
wire   [4:0] count_30_fu_1187_p3;
wire   [0:0] flag_15_fu_1194_p2;
wire   [4:0] add_ln101_14_fu_1199_p2;
wire   [4:0] count_31_fu_1205_p3;
wire   [4:0] count_32_fu_1213_p3;
wire   [0:0] flag_16_fu_1220_p2;
wire   [4:0] add_ln101_15_fu_1225_p2;
wire   [4:0] count_33_fu_1231_p3;
wire   [4:0] add_ln101_16_fu_1251_p2;
wire   [4:0] count_35_fu_1256_p3;
wire   [4:0] count_36_fu_1262_p3;
wire   [0:0] flag_18_fu_1268_p2;
wire   [4:0] add_ln101_17_fu_1272_p2;
wire   [4:0] count_37_fu_1278_p3;
wire   [4:0] count_38_fu_1286_p3;
wire   [0:0] flag_19_fu_1293_p2;
wire   [4:0] add_ln101_18_fu_1298_p2;
wire   [4:0] count_39_fu_1304_p3;
wire   [4:0] count_40_fu_1312_p3;
wire   [0:0] flag_20_fu_1319_p2;
wire   [4:0] add_ln101_19_fu_1324_p2;
wire   [4:0] count_41_fu_1330_p3;
wire   [4:0] count_42_fu_1338_p3;
wire   [0:0] flag_21_fu_1345_p2;
wire   [4:0] add_ln101_20_fu_1350_p2;
wire   [4:0] count_43_fu_1356_p3;
wire   [4:0] add_ln101_21_fu_1376_p2;
wire   [4:0] count_45_fu_1381_p3;
wire   [4:0] count_46_fu_1387_p3;
wire   [0:0] flag_23_fu_1393_p2;
wire   [4:0] add_ln101_22_fu_1397_p2;
wire   [4:0] count_47_fu_1403_p3;
wire   [4:0] count_48_fu_1411_p3;
wire   [0:0] flag_24_fu_1418_p2;
wire   [4:0] add_ln101_23_fu_1423_p2;
wire   [4:0] count_49_fu_1429_p3;
wire   [4:0] count_50_fu_1437_p3;
wire   [0:0] flag_25_fu_1444_p2;
wire   [4:0] add_ln101_24_fu_1449_p2;
wire   [4:0] count_51_fu_1455_p3;
wire   [4:0] count_52_fu_1463_p3;
wire   [0:0] flag_26_fu_1470_p2;
wire   [4:0] add_ln101_25_fu_1475_p2;
wire   [4:0] count_53_fu_1481_p3;
wire   [4:0] add_ln101_26_fu_1501_p2;
wire   [4:0] count_55_fu_1506_p3;
wire   [4:0] count_56_fu_1512_p3;
wire   [0:0] flag_28_fu_1518_p2;
wire   [4:0] add_ln101_27_fu_1522_p2;
wire   [4:0] count_57_fu_1528_p3;
wire   [4:0] count_58_fu_1536_p3;
wire   [0:0] flag_29_fu_1543_p2;
wire   [4:0] add_ln101_28_fu_1551_p2;
wire   [0:0] trunc_ln100_fu_1548_p1;
wire   [4:0] count_59_fu_1557_p3;
wire   [4:0] count_60_fu_1565_p3;
wire   [5:0] zext_ln98_3_fu_1573_p1;
wire  signed [5:0] SA_fu_1577_p2;
wire   [31:0] zext_ln567_fu_1593_p1;
wire  signed [31:0] sext_ln529_fu_1583_p1;
wire   [5:0] sub_ln567_fu_1602_p2;
wire  signed [31:0] sext_ln567_fu_1608_p1;
wire   [31:0] shl_ln567_fu_1596_p2;
wire   [31:0] lshr_ln567_fu_1612_p2;
wire   [0:0] icmp_ln567_fu_1587_p2;
wire   [29:0] trunc_ln594_fu_1618_p1;
wire   [29:0] trunc_ln594_1_fu_1622_p1;
wire   [29:0] mantissa_21_fu_1626_p3;
wire   [5:0] regime_fu_1634_p2;
wire   [5:0] regime_13_fu_1659_p6;
wire   [5:0] regime_13_fu_1659_p7;
wire   [2:0] regime_13_fu_1659_p8;
wire   [29:0] mantissa_24_fu_1678_p7;
wire   [29:0] mantissa_24_fu_1678_p9;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to6;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire  signed [1:0] exponent_fu_504_p1;
wire   [1:0] exponent_fu_504_p3;
wire   [1:0] exponent_fu_504_p5;
wire  signed [1:0] sign_fu_524_p1;
wire   [1:0] sign_fu_524_p3;
wire   [1:0] sign_fu_524_p5;
wire  signed [2:0] regime_13_fu_1659_p1;
wire   [2:0] regime_13_fu_1659_p3;
wire   [2:0] regime_13_fu_1659_p5;
wire  signed [2:0] mantissa_24_fu_1678_p1;
wire   [2:0] mantissa_24_fu_1678_p3;
wire   [2:0] mantissa_24_fu_1678_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

(* dissolve_hierarchy = "yes" *) pFFT_sparsemux_7_2_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 1 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
sparsemux_7_2_1_1_1_U67(
    .din0(1'd0),
    .din1(y_exponent2_val),
    .din2(exponent_fu_504_p6),
    .def(exponent_fu_504_p7),
    .sel(sel_tmp1_fu_496_p3),
    .dout(exponent_fu_504_p9)
);

(* dissolve_hierarchy = "yes" *) pFFT_sparsemux_7_2_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 1 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
sparsemux_7_2_1_1_1_U68(
    .din0(empty_75_fu_328_p3),
    .din1(y_sign_val),
    .din2(sign_fu_524_p6),
    .def(sign_fu_524_p7),
    .sel(sel_tmp1_fu_496_p3),
    .dout(sign_fu_524_p9)
);

(* dissolve_hierarchy = "yes" *) pFFT_sparsemux_7_3_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 6 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 6 ),
    .CASE2( 3'h0 ),
    .din2_WIDTH( 6 ),
    .def_WIDTH( 6 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
sparsemux_7_3_6_1_1_U69(
    .din0(6'd0),
    .din1(y_regime1_val_read_reg_1726_pp0_iter5_reg),
    .din2(regime_13_fu_1659_p6),
    .def(regime_13_fu_1659_p7),
    .sel(regime_13_fu_1659_p8),
    .dout(regime_13_fu_1659_p9)
);

(* dissolve_hierarchy = "yes" *) pFFT_sparsemux_7_3_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 30 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 30 ),
    .CASE2( 3'h0 ),
    .din2_WIDTH( 30 ),
    .def_WIDTH( 30 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 30 ))
sparsemux_7_3_30_1_1_U70(
    .din0(30'd0),
    .din1(y_mantissa3_val_read_reg_1721_pp0_iter6_reg),
    .din2(select_ln611_reg_1991),
    .def(mantissa_24_fu_1678_p7),
    .sel(sel_tmp_reg_1996),
    .dout(mantissa_24_fu_1678_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln605_reg_1773 <= and_ln605_fu_490_p2;
        and_ln605_reg_1773_pp0_iter1_reg <= and_ln605_reg_1773;
        count_14_reg_1794 <= count_14_fu_807_p3;
        exponent_reg_1778 <= exponent_fu_504_p9;
        exponent_reg_1778_pp0_iter1_reg <= exponent_reg_1778;
        flag_7_reg_1801 <= flag_7_fu_815_p2;
        isZero_reg_1767 <= isZero_fu_472_p2;
        isZero_reg_1767_pp0_iter1_reg <= isZero_reg_1767;
        mantissa_19_reg_1757 <= mantissa_19_fu_424_p2;
        mantissa_23_reg_1788 <= mantissa_23_fu_544_p3;
        mantissa_reg_1752 <= mantissa_fu_418_p2;
        sign_reg_1783 <= sign_fu_524_p9;
        sign_reg_1783_pp0_iter1_reg <= sign_reg_1783;
        tmp_23_reg_1807 <= mantissa_23_fu_544_p3[32'd22];
        tmp_24_reg_1813 <= mantissa_23_fu_544_p3[32'd21];
        tmp_25_reg_1819 <= mantissa_23_fu_544_p3[32'd20];
        tmp_26_reg_1825 <= mantissa_23_fu_544_p3[32'd19];
        tmp_27_reg_1831 <= mantissa_23_fu_544_p3[32'd18];
        tmp_28_reg_1837 <= mantissa_23_fu_544_p3[32'd17];
        tmp_29_reg_1843 <= mantissa_23_fu_544_p3[32'd16];
        tmp_30_reg_1849 <= mantissa_23_fu_544_p3[32'd15];
        tmp_31_reg_1855 <= mantissa_23_fu_544_p3[32'd14];
        tmp_32_reg_1861 <= mantissa_23_fu_544_p3[32'd13];
        tmp_33_reg_1867 <= mantissa_23_fu_544_p3[32'd12];
        tmp_34_reg_1873 <= mantissa_23_fu_544_p3[32'd11];
        tmp_35_reg_1879 <= mantissa_23_fu_544_p3[32'd10];
        tmp_36_reg_1885 <= mantissa_23_fu_544_p3[32'd9];
        tmp_37_reg_1891 <= mantissa_23_fu_544_p3[32'd8];
        tmp_38_reg_1897 <= mantissa_23_fu_544_p3[32'd7];
        tmp_39_reg_1903 <= mantissa_23_fu_544_p3[32'd6];
        tmp_40_reg_1909 <= mantissa_23_fu_544_p3[32'd5];
        tmp_41_reg_1915 <= mantissa_23_fu_544_p3[32'd4];
        tmp_42_reg_1921 <= mantissa_23_fu_544_p3[32'd3];
        tmp_43_reg_1927 <= mantissa_23_fu_544_p3[32'd2];
        tmp_44_reg_1933 <= mantissa_23_fu_544_p3[32'd1];
        trunc_ln568_reg_1762 <= trunc_ln568_fu_430_p1;
        trunc_ln568_reg_1762_pp0_iter1_reg <= trunc_ln568_reg_1762;
        x_mantissa3_read_reg_1737 <= x_mantissa3;
        x_mantissa3_read_reg_1737_pp0_iter1_reg <= x_mantissa3_read_reg_1737;
        x_regime1_read_reg_1742 <= x_regime1;
        x_regime1_read_reg_1742_pp0_iter1_reg <= x_regime1_read_reg_1742;
        xor_ln559_reg_1747 <= xor_ln559_fu_412_p2;
        y_isZero_val_read_reg_1731 <= y_isZero_val;
        y_isZero_val_read_reg_1731_pp0_iter1_reg <= y_isZero_val_read_reg_1731;
        y_mantissa3_val_read_reg_1721 <= y_mantissa3_val;
        y_mantissa3_val_read_reg_1721_pp0_iter1_reg <= y_mantissa3_val_read_reg_1721;
        y_regime1_val_read_reg_1726 <= y_regime1_val;
        y_regime1_val_read_reg_1726_pp0_iter1_reg <= y_regime1_val_read_reg_1726;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        and_ln605_reg_1773_pp0_iter2_reg <= and_ln605_reg_1773_pp0_iter1_reg;
        and_ln605_reg_1773_pp0_iter3_reg <= and_ln605_reg_1773_pp0_iter2_reg;
        and_ln605_reg_1773_pp0_iter4_reg <= and_ln605_reg_1773_pp0_iter3_reg;
        and_ln605_reg_1773_pp0_iter5_reg <= and_ln605_reg_1773_pp0_iter4_reg;
        count_24_reg_1939 <= count_24_fu_1110_p3;
        count_34_reg_1952 <= count_34_fu_1239_p3;
        count_44_reg_1965 <= count_44_fu_1364_p3;
        count_54_reg_1978 <= count_54_fu_1489_p3;
        exponent_reg_1778_pp0_iter2_reg <= exponent_reg_1778_pp0_iter1_reg;
        exponent_reg_1778_pp0_iter3_reg <= exponent_reg_1778_pp0_iter2_reg;
        exponent_reg_1778_pp0_iter4_reg <= exponent_reg_1778_pp0_iter3_reg;
        exponent_reg_1778_pp0_iter5_reg <= exponent_reg_1778_pp0_iter4_reg;
        exponent_reg_1778_pp0_iter6_reg <= exponent_reg_1778_pp0_iter5_reg;
        flag_12_reg_1946 <= flag_12_fu_1117_p2;
        flag_17_reg_1959 <= flag_17_fu_1246_p2;
        flag_22_reg_1972 <= flag_22_fu_1371_p2;
        flag_27_reg_1985 <= flag_27_fu_1496_p2;
        isZero_reg_1767_pp0_iter2_reg <= isZero_reg_1767_pp0_iter1_reg;
        isZero_reg_1767_pp0_iter3_reg <= isZero_reg_1767_pp0_iter2_reg;
        isZero_reg_1767_pp0_iter4_reg <= isZero_reg_1767_pp0_iter3_reg;
        isZero_reg_1767_pp0_iter5_reg <= isZero_reg_1767_pp0_iter4_reg;
        isZero_reg_1767_pp0_iter6_reg <= isZero_reg_1767_pp0_iter5_reg;
        mantissa_23_reg_1788_pp0_iter2_reg <= mantissa_23_reg_1788;
        mantissa_23_reg_1788_pp0_iter3_reg <= mantissa_23_reg_1788_pp0_iter2_reg;
        mantissa_23_reg_1788_pp0_iter4_reg <= mantissa_23_reg_1788_pp0_iter3_reg;
        mantissa_23_reg_1788_pp0_iter5_reg <= mantissa_23_reg_1788_pp0_iter4_reg;
        regime_13_reg_2001 <= regime_13_fu_1659_p9;
        sel_tmp_reg_1996[2 : 1] <= sel_tmp_fu_1651_p4[2 : 1];
        select_ln611_reg_1991 <= select_ln611_fu_1639_p3;
        sign_reg_1783_pp0_iter2_reg <= sign_reg_1783_pp0_iter1_reg;
        sign_reg_1783_pp0_iter3_reg <= sign_reg_1783_pp0_iter2_reg;
        sign_reg_1783_pp0_iter4_reg <= sign_reg_1783_pp0_iter3_reg;
        sign_reg_1783_pp0_iter5_reg <= sign_reg_1783_pp0_iter4_reg;
        sign_reg_1783_pp0_iter6_reg <= sign_reg_1783_pp0_iter5_reg;
        tmp_28_reg_1837_pp0_iter2_reg <= tmp_28_reg_1837;
        tmp_29_reg_1843_pp0_iter2_reg <= tmp_29_reg_1843;
        tmp_30_reg_1849_pp0_iter2_reg <= tmp_30_reg_1849;
        tmp_31_reg_1855_pp0_iter2_reg <= tmp_31_reg_1855;
        tmp_32_reg_1861_pp0_iter2_reg <= tmp_32_reg_1861;
        tmp_33_reg_1867_pp0_iter2_reg <= tmp_33_reg_1867;
        tmp_33_reg_1867_pp0_iter3_reg <= tmp_33_reg_1867_pp0_iter2_reg;
        tmp_34_reg_1873_pp0_iter2_reg <= tmp_34_reg_1873;
        tmp_34_reg_1873_pp0_iter3_reg <= tmp_34_reg_1873_pp0_iter2_reg;
        tmp_35_reg_1879_pp0_iter2_reg <= tmp_35_reg_1879;
        tmp_35_reg_1879_pp0_iter3_reg <= tmp_35_reg_1879_pp0_iter2_reg;
        tmp_36_reg_1885_pp0_iter2_reg <= tmp_36_reg_1885;
        tmp_36_reg_1885_pp0_iter3_reg <= tmp_36_reg_1885_pp0_iter2_reg;
        tmp_37_reg_1891_pp0_iter2_reg <= tmp_37_reg_1891;
        tmp_37_reg_1891_pp0_iter3_reg <= tmp_37_reg_1891_pp0_iter2_reg;
        tmp_38_reg_1897_pp0_iter2_reg <= tmp_38_reg_1897;
        tmp_38_reg_1897_pp0_iter3_reg <= tmp_38_reg_1897_pp0_iter2_reg;
        tmp_38_reg_1897_pp0_iter4_reg <= tmp_38_reg_1897_pp0_iter3_reg;
        tmp_39_reg_1903_pp0_iter2_reg <= tmp_39_reg_1903;
        tmp_39_reg_1903_pp0_iter3_reg <= tmp_39_reg_1903_pp0_iter2_reg;
        tmp_39_reg_1903_pp0_iter4_reg <= tmp_39_reg_1903_pp0_iter3_reg;
        tmp_40_reg_1909_pp0_iter2_reg <= tmp_40_reg_1909;
        tmp_40_reg_1909_pp0_iter3_reg <= tmp_40_reg_1909_pp0_iter2_reg;
        tmp_40_reg_1909_pp0_iter4_reg <= tmp_40_reg_1909_pp0_iter3_reg;
        tmp_41_reg_1915_pp0_iter2_reg <= tmp_41_reg_1915;
        tmp_41_reg_1915_pp0_iter3_reg <= tmp_41_reg_1915_pp0_iter2_reg;
        tmp_41_reg_1915_pp0_iter4_reg <= tmp_41_reg_1915_pp0_iter3_reg;
        tmp_42_reg_1921_pp0_iter2_reg <= tmp_42_reg_1921;
        tmp_42_reg_1921_pp0_iter3_reg <= tmp_42_reg_1921_pp0_iter2_reg;
        tmp_42_reg_1921_pp0_iter4_reg <= tmp_42_reg_1921_pp0_iter3_reg;
        tmp_43_reg_1927_pp0_iter2_reg <= tmp_43_reg_1927;
        tmp_43_reg_1927_pp0_iter3_reg <= tmp_43_reg_1927_pp0_iter2_reg;
        tmp_43_reg_1927_pp0_iter4_reg <= tmp_43_reg_1927_pp0_iter3_reg;
        tmp_43_reg_1927_pp0_iter5_reg <= tmp_43_reg_1927_pp0_iter4_reg;
        tmp_44_reg_1933_pp0_iter2_reg <= tmp_44_reg_1933;
        tmp_44_reg_1933_pp0_iter3_reg <= tmp_44_reg_1933_pp0_iter2_reg;
        tmp_44_reg_1933_pp0_iter4_reg <= tmp_44_reg_1933_pp0_iter3_reg;
        tmp_44_reg_1933_pp0_iter5_reg <= tmp_44_reg_1933_pp0_iter4_reg;
        trunc_ln568_reg_1762_pp0_iter2_reg <= trunc_ln568_reg_1762_pp0_iter1_reg;
        trunc_ln568_reg_1762_pp0_iter3_reg <= trunc_ln568_reg_1762_pp0_iter2_reg;
        trunc_ln568_reg_1762_pp0_iter4_reg <= trunc_ln568_reg_1762_pp0_iter3_reg;
        trunc_ln568_reg_1762_pp0_iter5_reg <= trunc_ln568_reg_1762_pp0_iter4_reg;
        x_mantissa3_read_reg_1737_pp0_iter2_reg <= x_mantissa3_read_reg_1737_pp0_iter1_reg;
        x_mantissa3_read_reg_1737_pp0_iter3_reg <= x_mantissa3_read_reg_1737_pp0_iter2_reg;
        x_mantissa3_read_reg_1737_pp0_iter4_reg <= x_mantissa3_read_reg_1737_pp0_iter3_reg;
        x_mantissa3_read_reg_1737_pp0_iter5_reg <= x_mantissa3_read_reg_1737_pp0_iter4_reg;
        x_regime1_read_reg_1742_pp0_iter2_reg <= x_regime1_read_reg_1742_pp0_iter1_reg;
        x_regime1_read_reg_1742_pp0_iter3_reg <= x_regime1_read_reg_1742_pp0_iter2_reg;
        x_regime1_read_reg_1742_pp0_iter4_reg <= x_regime1_read_reg_1742_pp0_iter3_reg;
        x_regime1_read_reg_1742_pp0_iter5_reg <= x_regime1_read_reg_1742_pp0_iter4_reg;
        y_isZero_val_read_reg_1731_pp0_iter2_reg <= y_isZero_val_read_reg_1731_pp0_iter1_reg;
        y_isZero_val_read_reg_1731_pp0_iter3_reg <= y_isZero_val_read_reg_1731_pp0_iter2_reg;
        y_isZero_val_read_reg_1731_pp0_iter4_reg <= y_isZero_val_read_reg_1731_pp0_iter3_reg;
        y_isZero_val_read_reg_1731_pp0_iter5_reg <= y_isZero_val_read_reg_1731_pp0_iter4_reg;
        y_mantissa3_val_read_reg_1721_pp0_iter2_reg <= y_mantissa3_val_read_reg_1721_pp0_iter1_reg;
        y_mantissa3_val_read_reg_1721_pp0_iter3_reg <= y_mantissa3_val_read_reg_1721_pp0_iter2_reg;
        y_mantissa3_val_read_reg_1721_pp0_iter4_reg <= y_mantissa3_val_read_reg_1721_pp0_iter3_reg;
        y_mantissa3_val_read_reg_1721_pp0_iter5_reg <= y_mantissa3_val_read_reg_1721_pp0_iter4_reg;
        y_mantissa3_val_read_reg_1721_pp0_iter6_reg <= y_mantissa3_val_read_reg_1721_pp0_iter5_reg;
        y_regime1_val_read_reg_1726_pp0_iter2_reg <= y_regime1_val_read_reg_1726_pp0_iter1_reg;
        y_regime1_val_read_reg_1726_pp0_iter3_reg <= y_regime1_val_read_reg_1726_pp0_iter2_reg;
        y_regime1_val_read_reg_1726_pp0_iter4_reg <= y_regime1_val_read_reg_1726_pp0_iter3_reg;
        y_regime1_val_read_reg_1726_pp0_iter5_reg <= y_regime1_val_read_reg_1726_pp0_iter4_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SA_fu_1577_p2 = ($signed(zext_ln98_3_fu_1573_p1) + $signed(6'd63));

assign add_ln101_10_fu_1096_p2 = (count_22_fu_1084_p3 + 4'd1);

assign add_ln101_11_fu_1122_p2 = (count_24_reg_1939 + 4'd1);

assign add_ln101_12_fu_1143_p2 = (count_26_fu_1133_p3 + 4'd1);

assign add_ln101_13_fu_1173_p2 = (zext_ln98_2_fu_1164_p1 + 5'd1);

assign add_ln101_14_fu_1199_p2 = (count_30_fu_1187_p3 + 5'd1);

assign add_ln101_15_fu_1225_p2 = (count_32_fu_1213_p3 + 5'd1);

assign add_ln101_16_fu_1251_p2 = (count_34_reg_1952 + 5'd1);

assign add_ln101_17_fu_1272_p2 = (count_36_fu_1262_p3 + 5'd1);

assign add_ln101_18_fu_1298_p2 = (count_38_fu_1286_p3 + 5'd1);

assign add_ln101_19_fu_1324_p2 = (count_40_fu_1312_p3 + 5'd1);

assign add_ln101_1_fu_645_p2 = (zext_ln98_fu_627_p1 + 3'd1);

assign add_ln101_20_fu_1350_p2 = (count_42_fu_1338_p3 + 5'd1);

assign add_ln101_21_fu_1376_p2 = (count_44_reg_1965 + 5'd1);

assign add_ln101_22_fu_1397_p2 = (count_46_fu_1387_p3 + 5'd1);

assign add_ln101_23_fu_1423_p2 = (count_48_fu_1411_p3 + 5'd1);

assign add_ln101_24_fu_1449_p2 = (count_50_fu_1437_p3 + 5'd1);

assign add_ln101_25_fu_1475_p2 = (count_52_fu_1463_p3 + 5'd1);

assign add_ln101_26_fu_1501_p2 = (count_54_reg_1978 + 5'd1);

assign add_ln101_27_fu_1522_p2 = (count_56_fu_1512_p3 + 5'd1);

assign add_ln101_28_fu_1551_p2 = (count_58_fu_1536_p3 + 5'd1);

assign add_ln101_2_fu_681_p2 = (count_6_fu_659_p3 + 3'd1);

assign add_ln101_3_fu_717_p2 = (count_8_fu_695_p3 + 3'd1);

assign add_ln101_4_fu_753_p2 = (count_10_fu_731_p3 + 3'd1);

assign add_ln101_5_fu_793_p2 = (zext_ln98_1_fu_775_p1 + 4'd1);

assign add_ln101_6_fu_997_p2 = (count_14_reg_1794 + 4'd1);

assign add_ln101_7_fu_1018_p2 = (count_16_fu_1008_p3 + 4'd1);

assign add_ln101_8_fu_1044_p2 = (count_18_fu_1032_p3 + 4'd1);

assign add_ln101_9_fu_1070_p2 = (count_20_fu_1058_p3 + 4'd1);

assign add_ln101_fu_605_p2 = (count_2_fu_583_p3 + 2'd1);

assign and_ln541_1_fu_254_p2 = (xor_ln541_fu_242_p2 & and_ln541_fu_248_p2);

assign and_ln541_fu_248_p2 = (x_exponent2 & icmp_ln541_1_fu_236_p2);

assign and_ln542_1_fu_290_p2 = (xor_ln542_2_fu_284_p2 & and_ln542_fu_272_p2);

assign and_ln542_fu_272_p2 = (xor_ln542_1_fu_266_p2 & icmp_ln541_1_fu_236_p2);

assign and_ln601_1_fu_446_p2 = (and_ln601_fu_440_p2 & and_ln542_fu_272_p2);

assign and_ln601_2_fu_466_p2 = (y_isZero_val & x_isZero);

assign and_ln601_fu_440_p2 = (xor_ln559_fu_412_p2 & icmp_ln601_fu_434_p2);

assign and_ln605_fu_490_p2 = (xor_ln605_fu_484_p2 & x_isZero);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = sign_reg_1783_pp0_iter6_reg;

assign ap_return_1 = isZero_reg_1767_pp0_iter6_reg;

assign ap_return_2 = regime_13_reg_2001;

assign ap_return_3 = exponent_reg_1778_pp0_iter6_reg;

assign ap_return_4 = mantissa_24_fu_1678_p9;

assign count_10_fu_731_p3 = ((tmp_20_fu_709_p3[0:0] == 1'b1) ? count_8_fu_695_p3 : count_9_fu_723_p3);

assign count_11_fu_759_p3 = ((flag_5_fu_739_p2[0:0] == 1'b1) ? count_10_fu_731_p3 : add_ln101_4_fu_753_p2);

assign count_12_fu_767_p3 = ((tmp_21_fu_745_p3[0:0] == 1'b1) ? count_10_fu_731_p3 : count_11_fu_759_p3);

assign count_13_fu_799_p3 = ((flag_6_fu_779_p2[0:0] == 1'b1) ? zext_ln98_1_fu_775_p1 : add_ln101_5_fu_793_p2);

assign count_14_fu_807_p3 = ((tmp_22_fu_785_p3[0:0] == 1'b1) ? zext_ln98_1_fu_775_p1 : count_13_fu_799_p3);

assign count_15_fu_1002_p3 = ((flag_7_reg_1801[0:0] == 1'b1) ? count_14_reg_1794 : add_ln101_6_fu_997_p2);

assign count_16_fu_1008_p3 = ((tmp_23_reg_1807[0:0] == 1'b1) ? count_14_reg_1794 : count_15_fu_1002_p3);

assign count_17_fu_1024_p3 = ((flag_8_fu_1014_p2[0:0] == 1'b1) ? count_16_fu_1008_p3 : add_ln101_7_fu_1018_p2);

assign count_18_fu_1032_p3 = ((tmp_24_reg_1813[0:0] == 1'b1) ? count_16_fu_1008_p3 : count_17_fu_1024_p3);

assign count_19_fu_1050_p3 = ((flag_9_fu_1039_p2[0:0] == 1'b1) ? count_18_fu_1032_p3 : add_ln101_8_fu_1044_p2);

assign count_1_fu_575_p3 = ((flag_fu_549_p3[0:0] == 1'b1) ? zext_ln97_fu_563_p1 : 2'd2);

assign count_20_fu_1058_p3 = ((tmp_25_reg_1819[0:0] == 1'b1) ? count_18_fu_1032_p3 : count_19_fu_1050_p3);

assign count_21_fu_1076_p3 = ((flag_10_fu_1065_p2[0:0] == 1'b1) ? count_20_fu_1058_p3 : add_ln101_9_fu_1070_p2);

assign count_22_fu_1084_p3 = ((tmp_26_reg_1825[0:0] == 1'b1) ? count_20_fu_1058_p3 : count_21_fu_1076_p3);

assign count_23_fu_1102_p3 = ((flag_11_fu_1091_p2[0:0] == 1'b1) ? count_22_fu_1084_p3 : add_ln101_10_fu_1096_p2);

assign count_24_fu_1110_p3 = ((tmp_27_reg_1831[0:0] == 1'b1) ? count_22_fu_1084_p3 : count_23_fu_1102_p3);

assign count_25_fu_1127_p3 = ((flag_12_reg_1946[0:0] == 1'b1) ? count_24_reg_1939 : add_ln101_11_fu_1122_p2);

assign count_26_fu_1133_p3 = ((tmp_28_reg_1837_pp0_iter2_reg[0:0] == 1'b1) ? count_24_reg_1939 : count_25_fu_1127_p3);

assign count_27_fu_1149_p3 = ((flag_13_fu_1139_p2[0:0] == 1'b1) ? count_26_fu_1133_p3 : add_ln101_12_fu_1143_p2);

assign count_28_fu_1157_p3 = ((tmp_29_reg_1843_pp0_iter2_reg[0:0] == 1'b1) ? count_26_fu_1133_p3 : count_27_fu_1149_p3);

assign count_29_fu_1179_p3 = ((flag_14_fu_1168_p2[0:0] == 1'b1) ? zext_ln98_2_fu_1164_p1 : add_ln101_13_fu_1173_p2);

assign count_2_fu_583_p3 = ((tmp_16_fu_567_p3[0:0] == 1'b1) ? zext_ln97_fu_563_p1 : count_1_fu_575_p3);

assign count_30_fu_1187_p3 = ((tmp_30_reg_1849_pp0_iter2_reg[0:0] == 1'b1) ? zext_ln98_2_fu_1164_p1 : count_29_fu_1179_p3);

assign count_31_fu_1205_p3 = ((flag_15_fu_1194_p2[0:0] == 1'b1) ? count_30_fu_1187_p3 : add_ln101_14_fu_1199_p2);

assign count_32_fu_1213_p3 = ((tmp_31_reg_1855_pp0_iter2_reg[0:0] == 1'b1) ? count_30_fu_1187_p3 : count_31_fu_1205_p3);

assign count_33_fu_1231_p3 = ((flag_16_fu_1220_p2[0:0] == 1'b1) ? count_32_fu_1213_p3 : add_ln101_15_fu_1225_p2);

assign count_34_fu_1239_p3 = ((tmp_32_reg_1861_pp0_iter2_reg[0:0] == 1'b1) ? count_32_fu_1213_p3 : count_33_fu_1231_p3);

assign count_35_fu_1256_p3 = ((flag_17_reg_1959[0:0] == 1'b1) ? count_34_reg_1952 : add_ln101_16_fu_1251_p2);

assign count_36_fu_1262_p3 = ((tmp_33_reg_1867_pp0_iter3_reg[0:0] == 1'b1) ? count_34_reg_1952 : count_35_fu_1256_p3);

assign count_37_fu_1278_p3 = ((flag_18_fu_1268_p2[0:0] == 1'b1) ? count_36_fu_1262_p3 : add_ln101_17_fu_1272_p2);

assign count_38_fu_1286_p3 = ((tmp_34_reg_1873_pp0_iter3_reg[0:0] == 1'b1) ? count_36_fu_1262_p3 : count_37_fu_1278_p3);

assign count_39_fu_1304_p3 = ((flag_19_fu_1293_p2[0:0] == 1'b1) ? count_38_fu_1286_p3 : add_ln101_18_fu_1298_p2);

assign count_3_fu_611_p3 = ((flag_1_fu_591_p2[0:0] == 1'b1) ? count_2_fu_583_p3 : add_ln101_fu_605_p2);

assign count_40_fu_1312_p3 = ((tmp_35_reg_1879_pp0_iter3_reg[0:0] == 1'b1) ? count_38_fu_1286_p3 : count_39_fu_1304_p3);

assign count_41_fu_1330_p3 = ((flag_20_fu_1319_p2[0:0] == 1'b1) ? count_40_fu_1312_p3 : add_ln101_19_fu_1324_p2);

assign count_42_fu_1338_p3 = ((tmp_36_reg_1885_pp0_iter3_reg[0:0] == 1'b1) ? count_40_fu_1312_p3 : count_41_fu_1330_p3);

assign count_43_fu_1356_p3 = ((flag_21_fu_1345_p2[0:0] == 1'b1) ? count_42_fu_1338_p3 : add_ln101_20_fu_1350_p2);

assign count_44_fu_1364_p3 = ((tmp_37_reg_1891_pp0_iter3_reg[0:0] == 1'b1) ? count_42_fu_1338_p3 : count_43_fu_1356_p3);

assign count_45_fu_1381_p3 = ((flag_22_reg_1972[0:0] == 1'b1) ? count_44_reg_1965 : add_ln101_21_fu_1376_p2);

assign count_46_fu_1387_p3 = ((tmp_38_reg_1897_pp0_iter4_reg[0:0] == 1'b1) ? count_44_reg_1965 : count_45_fu_1381_p3);

assign count_47_fu_1403_p3 = ((flag_23_fu_1393_p2[0:0] == 1'b1) ? count_46_fu_1387_p3 : add_ln101_22_fu_1397_p2);

assign count_48_fu_1411_p3 = ((tmp_39_reg_1903_pp0_iter4_reg[0:0] == 1'b1) ? count_46_fu_1387_p3 : count_47_fu_1403_p3);

assign count_49_fu_1429_p3 = ((flag_24_fu_1418_p2[0:0] == 1'b1) ? count_48_fu_1411_p3 : add_ln101_23_fu_1423_p2);

assign count_4_fu_619_p3 = ((tmp_17_fu_597_p3[0:0] == 1'b1) ? count_2_fu_583_p3 : count_3_fu_611_p3);

assign count_50_fu_1437_p3 = ((tmp_40_reg_1909_pp0_iter4_reg[0:0] == 1'b1) ? count_48_fu_1411_p3 : count_49_fu_1429_p3);

assign count_51_fu_1455_p3 = ((flag_25_fu_1444_p2[0:0] == 1'b1) ? count_50_fu_1437_p3 : add_ln101_24_fu_1449_p2);

assign count_52_fu_1463_p3 = ((tmp_41_reg_1915_pp0_iter4_reg[0:0] == 1'b1) ? count_50_fu_1437_p3 : count_51_fu_1455_p3);

assign count_53_fu_1481_p3 = ((flag_26_fu_1470_p2[0:0] == 1'b1) ? count_52_fu_1463_p3 : add_ln101_25_fu_1475_p2);

assign count_54_fu_1489_p3 = ((tmp_42_reg_1921_pp0_iter4_reg[0:0] == 1'b1) ? count_52_fu_1463_p3 : count_53_fu_1481_p3);

assign count_55_fu_1506_p3 = ((flag_27_reg_1985[0:0] == 1'b1) ? count_54_reg_1978 : add_ln101_26_fu_1501_p2);

assign count_56_fu_1512_p3 = ((tmp_43_reg_1927_pp0_iter5_reg[0:0] == 1'b1) ? count_54_reg_1978 : count_55_fu_1506_p3);

assign count_57_fu_1528_p3 = ((flag_28_fu_1518_p2[0:0] == 1'b1) ? count_56_fu_1512_p3 : add_ln101_27_fu_1522_p2);

assign count_58_fu_1536_p3 = ((tmp_44_reg_1933_pp0_iter5_reg[0:0] == 1'b1) ? count_56_fu_1512_p3 : count_57_fu_1528_p3);

assign count_59_fu_1557_p3 = ((flag_29_fu_1543_p2[0:0] == 1'b1) ? count_58_fu_1536_p3 : add_ln101_28_fu_1551_p2);

assign count_5_fu_651_p3 = ((flag_2_fu_631_p2[0:0] == 1'b1) ? zext_ln98_fu_627_p1 : add_ln101_1_fu_645_p2);

assign count_60_fu_1565_p3 = ((trunc_ln100_fu_1548_p1[0:0] == 1'b1) ? count_58_fu_1536_p3 : count_59_fu_1557_p3);

assign count_6_fu_659_p3 = ((tmp_18_fu_637_p3[0:0] == 1'b1) ? zext_ln98_fu_627_p1 : count_5_fu_651_p3);

assign count_7_fu_687_p3 = ((flag_3_fu_667_p2[0:0] == 1'b1) ? count_6_fu_659_p3 : add_ln101_2_fu_681_p2);

assign count_8_fu_695_p3 = ((tmp_19_fu_673_p3[0:0] == 1'b1) ? count_6_fu_659_p3 : count_7_fu_687_p3);

assign count_9_fu_723_p3 = ((flag_4_fu_703_p2[0:0] == 1'b1) ? count_8_fu_695_p3 : add_ln101_3_fu_717_p2);

assign count_fu_557_p2 = (flag_fu_549_p3 ^ 1'd1);

assign diff_fu_352_p2 = (empty_74_fu_320_p3 - empty_76_fu_336_p3);

assign empty_74_fu_320_p3 = ((or_ln542_1_fu_302_p2[0:0] == 1'b1) ? sf_x_fu_216_p2 : sf_y_fu_230_p2);

assign empty_75_fu_328_p3 = ((or_ln542_1_fu_302_p2[0:0] == 1'b1) ? x_sign : y_sign_val);

assign empty_76_fu_336_p3 = ((or_ln542_1_fu_302_p2[0:0] == 1'b1) ? sf_y_fu_230_p2 : sf_x_fu_216_p2);

assign empty_fu_308_p3 = ((or_ln542_1_fu_302_p2[0:0] == 1'b1) ? x_mantissa3 : y_mantissa3_val);

assign exponent_fu_504_p6 = (y_isZero_val & x_exponent2);

assign exponent_fu_504_p7 = 'bx;

assign flag_10_fu_1065_p2 = (tmp_25_reg_1819 | flag_9_fu_1039_p2);

assign flag_11_fu_1091_p2 = (tmp_26_reg_1825 | flag_10_fu_1065_p2);

assign flag_12_fu_1117_p2 = (tmp_27_reg_1831 | flag_11_fu_1091_p2);

assign flag_13_fu_1139_p2 = (tmp_28_reg_1837_pp0_iter2_reg | flag_12_reg_1946);

assign flag_14_fu_1168_p2 = (tmp_29_reg_1843_pp0_iter2_reg | flag_13_fu_1139_p2);

assign flag_15_fu_1194_p2 = (tmp_30_reg_1849_pp0_iter2_reg | flag_14_fu_1168_p2);

assign flag_16_fu_1220_p2 = (tmp_31_reg_1855_pp0_iter2_reg | flag_15_fu_1194_p2);

assign flag_17_fu_1246_p2 = (tmp_32_reg_1861_pp0_iter2_reg | flag_16_fu_1220_p2);

assign flag_18_fu_1268_p2 = (tmp_33_reg_1867_pp0_iter3_reg | flag_17_reg_1959);

assign flag_19_fu_1293_p2 = (tmp_34_reg_1873_pp0_iter3_reg | flag_18_fu_1268_p2);

assign flag_1_fu_591_p2 = (tmp_16_fu_567_p3 | flag_fu_549_p3);

assign flag_20_fu_1319_p2 = (tmp_35_reg_1879_pp0_iter3_reg | flag_19_fu_1293_p2);

assign flag_21_fu_1345_p2 = (tmp_36_reg_1885_pp0_iter3_reg | flag_20_fu_1319_p2);

assign flag_22_fu_1371_p2 = (tmp_37_reg_1891_pp0_iter3_reg | flag_21_fu_1345_p2);

assign flag_23_fu_1393_p2 = (tmp_38_reg_1897_pp0_iter4_reg | flag_22_reg_1972);

assign flag_24_fu_1418_p2 = (tmp_39_reg_1903_pp0_iter4_reg | flag_23_fu_1393_p2);

assign flag_25_fu_1444_p2 = (tmp_40_reg_1909_pp0_iter4_reg | flag_24_fu_1418_p2);

assign flag_26_fu_1470_p2 = (tmp_41_reg_1915_pp0_iter4_reg | flag_25_fu_1444_p2);

assign flag_27_fu_1496_p2 = (tmp_42_reg_1921_pp0_iter4_reg | flag_26_fu_1470_p2);

assign flag_28_fu_1518_p2 = (tmp_43_reg_1927_pp0_iter5_reg | flag_27_reg_1985);

assign flag_29_fu_1543_p2 = (tmp_44_reg_1933_pp0_iter5_reg | flag_28_fu_1518_p2);

assign flag_2_fu_631_p2 = (tmp_17_fu_597_p3 | flag_1_fu_591_p2);

assign flag_3_fu_667_p2 = (tmp_18_fu_637_p3 | flag_2_fu_631_p2);

assign flag_4_fu_703_p2 = (tmp_19_fu_673_p3 | flag_3_fu_667_p2);

assign flag_5_fu_739_p2 = (tmp_20_fu_709_p3 | flag_4_fu_703_p2);

assign flag_6_fu_779_p2 = (tmp_21_fu_745_p3 | flag_5_fu_739_p2);

assign flag_7_fu_815_p2 = (tmp_22_fu_785_p3 | flag_6_fu_779_p2);

assign flag_8_fu_1014_p2 = (tmp_23_reg_1807 | flag_7_reg_1801);

assign flag_9_fu_1039_p2 = (tmp_24_reg_1813 | flag_8_fu_1014_p2);

assign flag_fu_549_p3 = mantissa_23_fu_544_p3[32'd30];

assign icmp_ln541_1_fu_236_p0 = x_regime1;

assign icmp_ln541_1_fu_236_p1 = y_regime1_val;

assign icmp_ln541_1_fu_236_p2 = ((icmp_ln541_1_fu_236_p0 == icmp_ln541_1_fu_236_p1) ? 1'b1 : 1'b0);

assign icmp_ln541_fu_202_p0 = x_regime1;

assign icmp_ln541_fu_202_p1 = y_regime1_val;

assign icmp_ln541_fu_202_p2 = (($signed(icmp_ln541_fu_202_p0) > $signed(icmp_ln541_fu_202_p1)) ? 1'b1 : 1'b0);

assign icmp_ln542_fu_278_p2 = ((x_mantissa3 < y_mantissa3_val) ? 1'b1 : 1'b0);

assign icmp_ln567_fu_1587_p2 = ((count_60_fu_1565_p3 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln601_fu_434_p2 = ((x_mantissa3 == y_mantissa3_val) ? 1'b1 : 1'b0);

assign isZero_fu_472_p2 = (and_ln601_2_fu_466_p2 | and_ln601_1_fu_446_p2);

assign lshr_ln558_fu_390_p2 = zext_ln558_fu_366_p1 >> zext_ln558_2_fu_386_p1;

assign lshr_ln567_fu_1612_p2 = zext_ln567_fu_1593_p1 >> sext_ln567_fu_1608_p1;

assign mS_1_fu_404_p3 = ((tmp_fu_358_p3[0:0] == 1'b1) ? trunc_ln558_fu_396_p1 : trunc_ln558_1_fu_400_p1);

assign mS_fu_344_p3 = ((or_ln542_1_fu_302_p2[0:0] == 1'b1) ? y_mantissa3_val : x_mantissa3);

assign mantissa_19_fu_424_p2 = (mS_1_fu_404_p3 + p_cast_fu_316_p1);

assign mantissa_21_fu_1626_p3 = ((icmp_ln567_fu_1587_p2[0:0] == 1'b1) ? trunc_ln594_fu_1618_p1 : trunc_ln594_1_fu_1622_p1);

assign mantissa_23_fu_544_p3 = ((xor_ln559_reg_1747[0:0] == 1'b1) ? mantissa_reg_1752 : mantissa_19_reg_1757);

assign mantissa_24_fu_1678_p7 = 'bx;

assign mantissa_fu_418_p2 = (p_cast_fu_316_p1 - mS_1_fu_404_p3);

assign or_ln542_1_fu_302_p2 = (or_ln542_fu_296_p2 | icmp_ln541_fu_202_p2);

assign or_ln542_fu_296_p2 = (and_ln542_1_fu_290_p2 | and_ln541_1_fu_254_p2);

assign or_ln605_fu_478_p2 = (y_isZero_val | and_ln601_1_fu_446_p2);

assign p_cast_fu_316_p1 = empty_fu_308_p3;

assign regime_13_fu_1659_p6 = ((y_isZero_val_read_reg_1731_pp0_iter5_reg[0:0] == 1'b1) ? x_regime1_read_reg_1742_pp0_iter5_reg : regime_fu_1634_p2);

assign regime_13_fu_1659_p7 = 'bx;

assign regime_13_fu_1659_p8 = {{{isZero_reg_1767_pp0_iter5_reg}, {and_ln605_reg_1773_pp0_iter5_reg}}, {1'd0}};

assign regime_fu_1634_p2 = ($signed(trunc_ln568_reg_1762_pp0_iter5_reg) - $signed(SA_fu_1577_p2));

assign sel_tmp1_fu_496_p3 = {{isZero_fu_472_p2}, {and_ln605_fu_490_p2}};

assign sel_tmp_fu_1651_p4 = {{{isZero_reg_1767_pp0_iter5_reg}, {and_ln605_reg_1773_pp0_iter5_reg}}, {1'd0}};

assign select_ln611_fu_1639_p3 = ((y_isZero_val_read_reg_1731_pp0_iter5_reg[0:0] == 1'b1) ? x_mantissa3_read_reg_1737_pp0_iter5_reg : mantissa_21_fu_1626_p3);

assign sext_ln529_fu_1583_p1 = SA_fu_1577_p2;

assign sext_ln546_fu_208_p0 = x_regime1;

assign sext_ln546_fu_208_p1 = sext_ln546_fu_208_p0;

assign sext_ln547_fu_222_p0 = y_regime1_val;

assign sext_ln547_fu_222_p1 = sext_ln547_fu_222_p0;

assign sext_ln567_fu_1608_p1 = $signed(sub_ln567_fu_1602_p2);

assign sf_x_fu_216_p2 = ($signed(sext_ln546_fu_208_p1) + $signed(zext_ln546_fu_212_p1));

assign sf_y_fu_230_p2 = ($signed(sext_ln547_fu_222_p1) + $signed(zext_ln547_fu_226_p1));

assign shl_ln558_fu_380_p2 = zext_ln558_fu_366_p1 << zext_ln558_1_fu_376_p1;

assign shl_ln567_fu_1596_p2 = zext_ln567_fu_1593_p1 << sext_ln529_fu_1583_p1;

assign sign_fu_524_p6 = ((y_isZero_val[0:0] == 1'b1) ? x_sign : empty_75_fu_328_p3);

assign sign_fu_524_p7 = 'bx;

assign sub_ln558_fu_370_p2 = (7'd0 - diff_fu_352_p2);

assign sub_ln567_fu_1602_p2 = (6'd1 - zext_ln98_3_fu_1573_p1);

assign tmp_16_fu_567_p3 = mantissa_23_fu_544_p3[32'd29];

assign tmp_17_fu_597_p3 = mantissa_23_fu_544_p3[32'd28];

assign tmp_18_fu_637_p3 = mantissa_23_fu_544_p3[32'd27];

assign tmp_19_fu_673_p3 = mantissa_23_fu_544_p3[32'd26];

assign tmp_20_fu_709_p3 = mantissa_23_fu_544_p3[32'd25];

assign tmp_21_fu_745_p3 = mantissa_23_fu_544_p3[32'd24];

assign tmp_22_fu_785_p3 = mantissa_23_fu_544_p3[32'd23];

assign tmp_fu_358_p3 = diff_fu_352_p2[32'd6];

assign trunc_ln100_fu_1548_p1 = mantissa_23_reg_1788_pp0_iter5_reg[0:0];

assign trunc_ln558_1_fu_400_p1 = lshr_ln558_fu_390_p2[30:0];

assign trunc_ln558_fu_396_p1 = shl_ln558_fu_380_p2[30:0];

assign trunc_ln568_fu_430_p1 = empty_74_fu_320_p3[5:0];

assign trunc_ln594_1_fu_1622_p1 = lshr_ln567_fu_1612_p2[29:0];

assign trunc_ln594_fu_1618_p1 = shl_ln567_fu_1596_p2[29:0];

assign xor_ln541_fu_242_p2 = (y_exponent2_val ^ 1'd1);

assign xor_ln542_1_fu_266_p2 = (xor_ln542_fu_260_p2 ^ 1'd1);

assign xor_ln542_2_fu_284_p2 = (icmp_ln542_fu_278_p2 ^ 1'd1);

assign xor_ln542_fu_260_p2 = (y_exponent2_val ^ x_exponent2);

assign xor_ln559_fu_412_p2 = (y_sign_val ^ x_sign);

assign xor_ln605_fu_484_p2 = (or_ln605_fu_478_p2 ^ 1'd1);

assign zext_ln546_fu_212_p1 = x_exponent2;

assign zext_ln547_fu_226_p1 = y_exponent2_val;

assign zext_ln558_1_fu_376_p1 = sub_ln558_fu_370_p2;

assign zext_ln558_2_fu_386_p1 = diff_fu_352_p2;

assign zext_ln558_fu_366_p1 = mS_fu_344_p3;

assign zext_ln567_fu_1593_p1 = mantissa_23_reg_1788_pp0_iter5_reg;

assign zext_ln97_fu_563_p1 = count_fu_557_p2;

assign zext_ln98_1_fu_775_p1 = count_12_fu_767_p3;

assign zext_ln98_2_fu_1164_p1 = count_28_fu_1157_p3;

assign zext_ln98_3_fu_1573_p1 = count_60_fu_1565_p3;

assign zext_ln98_fu_627_p1 = count_4_fu_619_p3;

always @ (posedge ap_clk) begin
    sel_tmp_reg_1996[0] <= 1'b0;
end

endmodule //pFFT_positAdd
