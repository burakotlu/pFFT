-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pFFT_pReduceAngle is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_sign : IN STD_LOGIC_VECTOR (0 downto 0);
    x_regime : IN STD_LOGIC_VECTOR (5 downto 0);
    x_exponent : IN STD_LOGIC_VECTOR (0 downto 0);
    x_mantissa : IN STD_LOGIC_VECTOR (29 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (29 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of pFFT_pReduceAngle is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv30_323D70A5 : STD_LOGIC_VECTOR (29 downto 0) := "110010001111010111000010100101";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv119_A30EACD37887042 : STD_LOGIC_VECTOR (118 downto 0) := "00000000000000000000000000000000000000000000000000000000000101000110000111010101100110100110111100010000111000001000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889 : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889_pp0_iter2_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889_pp0_iter3_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889_pp0_iter4_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889_pp0_iter5_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889_pp0_iter6_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal x_mantissa_read_reg_889_pp0_iter7_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal x_exponent_read_reg_895 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_exponent_read_reg_895_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_exponent_read_reg_895_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_exponent_read_reg_895_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_exponent_read_reg_895_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_exponent_read_reg_895_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_exponent_read_reg_895_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_exponent_read_reg_895_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_regime_read_reg_902 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_regime_read_reg_902_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal x_regime_read_reg_902_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal x_regime_read_reg_902_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal x_regime_read_reg_902_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal x_regime_read_reg_902_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal x_regime_read_reg_902_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal x_regime_read_reg_902_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal x_sign_read_reg_909 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_sign_read_reg_909_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_915_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919 : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_5_reg_919_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_923 : STD_LOGIC_VECTOR (0 downto 0);
    signal regime_fu_519_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_reg_928 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i_fu_527_p8 : STD_LOGIC_VECTOR (93 downto 0);
    signal m_angle_sign_3_fu_579_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_angle_sign_3_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_angle_isZero_reg_944 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_angle_regime_5_fu_591_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_angle_regime_5_reg_950 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_angle_exponent_5_fu_601_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_angle_exponent_5_reg_956 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_angle_mantissa_fu_609_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal m_angle_mantissa_reg_962 : STD_LOGIC_VECTOR (29 downto 0);
    signal retval_1_i_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i_reg_968_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i9_reg_972_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i20_reg_986_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_1_i31_reg_990_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_255_ap_start : STD_LOGIC;
    signal grp_positAdd_fu_255_ap_done : STD_LOGIC;
    signal grp_positAdd_fu_255_ap_idle : STD_LOGIC;
    signal grp_positAdd_fu_255_ap_ready : STD_LOGIC;
    signal grp_positAdd_fu_255_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_255_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_255_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_255_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_255_ap_return_4 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positAdd_fu_275_ap_start : STD_LOGIC;
    signal grp_positAdd_fu_275_ap_done : STD_LOGIC;
    signal grp_positAdd_fu_275_ap_idle : STD_LOGIC;
    signal grp_positAdd_fu_275_ap_ready : STD_LOGIC;
    signal grp_positAdd_fu_275_x_sign : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_275_y_sign_val : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_275_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_275_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_275_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_275_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_275_ap_return_4 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positAdd_fu_296_ap_start : STD_LOGIC;
    signal grp_positAdd_fu_296_ap_done : STD_LOGIC;
    signal grp_positAdd_fu_296_ap_idle : STD_LOGIC;
    signal grp_positAdd_fu_296_ap_ready : STD_LOGIC;
    signal grp_positAdd_fu_296_x_sign : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_x_isZero : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_x_regime1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_296_x_exponent2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_x_mantissa3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positAdd_fu_296_y_sign_val : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_y_isZero_val : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_y_regime1_val : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_296_y_exponent2_val : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_y_mantissa3_val : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_positAdd_fu_296_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_positAdd_fu_296_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_296_ap_return_4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_mux_storemerge_in_i_phi_fu_127_p4 : STD_LOGIC_VECTOR (93 downto 0);
    signal tmp_18_i_fu_557_p10 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter9_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter3_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter4_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter5_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter6_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter7_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_reg_pp0_iter8_storemerge_in_i_reg_124 : STD_LOGIC_VECTOR (93 downto 0);
    signal ap_phi_mux_x_sign_3_phi_fu_136_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_x_sign_3_reg_133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_x_regime_6_phi_fu_147_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter17_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter2_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter3_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter4_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter5_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter6_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter7_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter8_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter9_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter10_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter11_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter12_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter13_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter14_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter15_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter16_x_regime_6_reg_144 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_x_exponent_4_phi_fu_159_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_x_exponent_4_reg_156 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_y_mantissa_phi_fu_171_p6 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter17_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter0_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter1_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter2_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter3_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter4_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter5_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter6_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter7_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter8_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter9_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter10_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter11_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter12_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter13_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter14_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter15_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter16_y_mantissa_reg_168 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter0_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter18_y_isZero_reg_180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ref_tmp_1440_2_phi_fu_195_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter25_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter18_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter19_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter20_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter21_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter22_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter23_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter24_ref_tmp_1440_2_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ref_tmp_3_2_phi_fu_207_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter25_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter1_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter2_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter3_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter4_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter5_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter6_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter7_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter8_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter9_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter10_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter11_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter12_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter13_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter14_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter15_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter16_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter17_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter18_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter19_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter20_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter21_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter22_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter23_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter24_ref_tmp_3_2_reg_204 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_ref_tmp_4_2_phi_fu_219_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter25_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter18_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter19_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter20_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter21_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter22_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter23_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter24_ref_tmp_4_2_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_ref_tmp_5_2_phi_fu_231_p6 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter25_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter0_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter1_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter2_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter3_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter4_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter5_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter6_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter7_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter8_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter9_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter10_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter11_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter12_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter13_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter14_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter15_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter16_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter17_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter18_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter19_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter20_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter21_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter22_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter23_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_reg_pp0_iter24_ref_tmp_5_2_reg_228 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_phi_mux_negate_write_assign_phi_fu_244_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter25_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter10_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter11_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter12_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter13_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter14_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter15_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter16_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter17_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter18_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter19_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter20_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter21_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter22_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter23_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter24_negate_write_assign_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_positAdd_fu_255_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op56_call_state3_state2 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp56 : BOOLEAN;
    signal grp_positAdd_fu_275_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op100_call_state11_state10 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp100 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp101 : BOOLEAN;
    signal grp_positAdd_fu_296_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op154_call_state19_state18 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp154 : BOOLEAN;
    signal ap_block_pp0_stage0_ignoreCallOp155 : BOOLEAN;
    signal mul_ln675_fu_330_p0 : STD_LOGIC_VECTOR (58 downto 0);
    signal mul_ln675_fu_330_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_fu_387_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln25_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_433_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal mul_ln675_fu_330_p2 : STD_LOGIC_VECTOR (118 downto 0);
    signal zext_ln680_fu_446_p1 : STD_LOGIC_VECTOR (148 downto 0);
    signal zext_ln675_fu_458_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln680_fu_468_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln680_fu_461_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sf_r_fu_473_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln703_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln800_fu_485_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal regime_14_fu_491_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln804_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln803_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln804_fu_511_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_48_fu_619_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln24_1_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_1_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_1_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_2_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_1_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln24_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_3_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_m_angle_sign_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_2_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_4_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_2_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_5_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_1_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_1_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_2_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_3_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_2_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_6_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_3_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln24_1_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln24_1_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_7_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_2_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_2_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_y_sign_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_4_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_8_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_9_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal absXGreaterEqual_3_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_3_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to24 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln675_fu_330_p00 : STD_LOGIC_VECTOR (118 downto 0);
    signal ap_condition_1301 : BOOLEAN;
    signal ap_condition_1305 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component pFFT_positAdd IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        x_sign : IN STD_LOGIC_VECTOR (0 downto 0);
        x_isZero : IN STD_LOGIC_VECTOR (0 downto 0);
        x_regime1 : IN STD_LOGIC_VECTOR (5 downto 0);
        x_exponent2 : IN STD_LOGIC_VECTOR (0 downto 0);
        x_mantissa3 : IN STD_LOGIC_VECTOR (29 downto 0);
        y_sign_val : IN STD_LOGIC_VECTOR (0 downto 0);
        y_isZero_val : IN STD_LOGIC_VECTOR (0 downto 0);
        y_regime1_val : IN STD_LOGIC_VECTOR (5 downto 0);
        y_exponent2_val : IN STD_LOGIC_VECTOR (0 downto 0);
        y_mantissa3_val : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component pFFT_mul_59ns_61ns_119_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (58 downto 0);
        din1 : IN STD_LOGIC_VECTOR (60 downto 0);
        dout : OUT STD_LOGIC_VECTOR (118 downto 0) );
    end component;



begin
    grp_positAdd_fu_255 : component pFFT_positAdd
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_positAdd_fu_255_ap_start,
        ap_done => grp_positAdd_fu_255_ap_done,
        ap_idle => grp_positAdd_fu_255_ap_idle,
        ap_ready => grp_positAdd_fu_255_ap_ready,
        ap_ce => ap_const_logic_1,
        x_sign => ap_const_lv1_0,
        x_isZero => ap_const_lv1_0,
        x_regime1 => x_regime_read_reg_902_pp0_iter1_reg,
        x_exponent2 => x_exponent_read_reg_895_pp0_iter1_reg,
        x_mantissa3 => x_mantissa_read_reg_889_pp0_iter1_reg,
        y_sign_val => ap_const_lv1_1,
        y_isZero_val => ap_const_lv1_0,
        y_regime1_val => regime_reg_928,
        y_exponent2_val => ap_const_lv1_0,
        y_mantissa3_val => ap_const_lv30_323D70A5,
        ap_return_0 => grp_positAdd_fu_255_ap_return_0,
        ap_return_1 => grp_positAdd_fu_255_ap_return_1,
        ap_return_2 => grp_positAdd_fu_255_ap_return_2,
        ap_return_3 => grp_positAdd_fu_255_ap_return_3,
        ap_return_4 => grp_positAdd_fu_255_ap_return_4);

    grp_positAdd_fu_275 : component pFFT_positAdd
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_positAdd_fu_275_ap_start,
        ap_done => grp_positAdd_fu_275_ap_done,
        ap_idle => grp_positAdd_fu_275_ap_idle,
        ap_ready => grp_positAdd_fu_275_ap_ready,
        ap_ce => ap_const_logic_1,
        x_sign => grp_positAdd_fu_275_x_sign,
        x_isZero => m_angle_isZero_reg_944,
        x_regime1 => m_angle_regime_5_reg_950,
        x_exponent2 => m_angle_exponent_5_reg_956,
        x_mantissa3 => m_angle_mantissa_reg_962,
        y_sign_val => grp_positAdd_fu_275_y_sign_val,
        y_isZero_val => ap_const_lv1_0,
        y_regime1_val => ap_const_lv6_2,
        y_exponent2_val => ap_const_lv1_0,
        y_mantissa3_val => ap_const_lv30_323D70A5,
        ap_return_0 => grp_positAdd_fu_275_ap_return_0,
        ap_return_1 => grp_positAdd_fu_275_ap_return_1,
        ap_return_2 => grp_positAdd_fu_275_ap_return_2,
        ap_return_3 => grp_positAdd_fu_275_ap_return_3,
        ap_return_4 => grp_positAdd_fu_275_ap_return_4);

    grp_positAdd_fu_296 : component pFFT_positAdd
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_positAdd_fu_296_ap_start,
        ap_done => grp_positAdd_fu_296_ap_done,
        ap_idle => grp_positAdd_fu_296_ap_idle,
        ap_ready => grp_positAdd_fu_296_ap_ready,
        ap_ce => ap_const_logic_1,
        x_sign => grp_positAdd_fu_296_x_sign,
        x_isZero => grp_positAdd_fu_296_x_isZero,
        x_regime1 => grp_positAdd_fu_296_x_regime1,
        x_exponent2 => grp_positAdd_fu_296_x_exponent2,
        x_mantissa3 => grp_positAdd_fu_296_x_mantissa3,
        y_sign_val => grp_positAdd_fu_296_y_sign_val,
        y_isZero_val => grp_positAdd_fu_296_y_isZero_val,
        y_regime1_val => grp_positAdd_fu_296_y_regime1_val,
        y_exponent2_val => grp_positAdd_fu_296_y_exponent2_val,
        y_mantissa3_val => grp_positAdd_fu_296_y_mantissa3_val,
        ap_return_0 => grp_positAdd_fu_296_ap_return_0,
        ap_return_1 => grp_positAdd_fu_296_ap_return_1,
        ap_return_2 => grp_positAdd_fu_296_ap_return_2,
        ap_return_3 => grp_positAdd_fu_296_ap_return_3,
        ap_return_4 => grp_positAdd_fu_296_ap_return_4);

    mul_59ns_61ns_119_1_1_U84 : component pFFT_mul_59ns_61ns_119_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 59,
        din1_WIDTH => 61,
        dout_WIDTH => 119)
    port map (
        din0 => mul_ln675_fu_330_p0,
        din1 => mul_ln675_fu_330_p1,
        dout => mul_ln675_fu_330_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_positAdd_fu_255_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_positAdd_fu_255_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_predicate_op56_call_state3_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_positAdd_fu_255_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_positAdd_fu_255_ap_ready = ap_const_logic_1)) then 
                    grp_positAdd_fu_255_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_positAdd_fu_275_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_positAdd_fu_275_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_predicate_op100_call_state11_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (retval_1_i_fu_695_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_positAdd_fu_275_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_positAdd_fu_275_ap_ready = ap_const_logic_1)) then 
                    grp_positAdd_fu_275_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_positAdd_fu_296_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_positAdd_fu_296_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_predicate_op154_call_state19_state18 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i20_fu_809_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                    grp_positAdd_fu_296_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_positAdd_fu_296_ap_ready = ap_const_logic_1)) then 
                    grp_positAdd_fu_296_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter10_x_exponent_4_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i9_fu_737_p2 = ap_const_lv1_0) and (retval_1_i_fu_695_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter10_x_exponent_4_reg_156 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(32 downto 32);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter10_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter9_x_exponent_4_reg_156;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_x_regime_6_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i9_fu_737_p2 = ap_const_lv1_0) and (retval_1_i_fu_695_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter10_x_regime_6_reg_144 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(29 downto 24);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter10_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter9_x_regime_6_reg_144;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_x_sign_3_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i9_fu_737_p2 = ap_const_lv1_0) and (retval_1_i_fu_695_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter10_x_sign_3_reg_133 <= m_angle_sign_3_fu_579_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter10_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter9_x_sign_3_reg_133;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_y_isZero_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i9_fu_737_p2 = ap_const_lv1_0) and (retval_1_i_fu_695_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter10_y_isZero_reg_180 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(8 downto 8);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter10_y_isZero_reg_180 <= ap_phi_reg_pp0_iter9_y_isZero_reg_180;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter10_y_mantissa_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i9_fu_737_p2 = ap_const_lv1_0) and (retval_1_i_fu_695_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter10_y_mantissa_reg_168 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(93 downto 64);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter10_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter9_y_mantissa_reg_168;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter18_y_isZero_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter18_y_isZero_reg_180 <= grp_positAdd_fu_275_ap_return_1;
            elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter18_y_isZero_reg_180 <= ap_phi_reg_pp0_iter17_y_isZero_reg_180;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter19_negate_write_assign_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i31_reg_990 = ap_const_lv1_0) and (retval_1_i20_reg_986 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter19_negate_write_assign_reg_240 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter19_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter18_negate_write_assign_reg_240;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter19_ref_tmp_1440_2_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i31_reg_990 = ap_const_lv1_0) and (retval_1_i20_reg_986 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter18_y_isZero_reg_180;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter18_ref_tmp_1440_2_reg_192;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter19_ref_tmp_3_2_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i31_reg_990 = ap_const_lv1_0) and (retval_1_i20_reg_986 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_3_2_reg_204 <= x_regime_6_reg_144;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter18_ref_tmp_3_2_reg_204;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter19_ref_tmp_4_2_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i31_reg_990 = ap_const_lv1_0) and (retval_1_i20_reg_986 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_4_2_reg_216 <= x_exponent_4_reg_156;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter18_ref_tmp_4_2_reg_216;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter19_ref_tmp_5_2_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((retval_1_i31_reg_990 = ap_const_lv1_0) and (retval_1_i20_reg_986 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_5_2_reg_228 <= y_mantissa_reg_168;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter19_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter18_ref_tmp_5_2_reg_228;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_storemerge_in_i_reg_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_const_lv1_1 = absXGreaterEqual_5_reg_919_pp0_iter7_reg) or (icmp_ln23_reg_915_pp0_iter7_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter9_storemerge_in_i_reg_124 <= tmp_i_fu_527_p8;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter8_storemerge_in_i_reg_124;
                end if;
            end if; 
        end if;
    end process;

    x_exponent_4_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                x_exponent_4_reg_156 <= grp_positAdd_fu_275_ap_return_3;
            elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter17_x_exponent_4_reg_156;
            end if; 
        end if;
    end process;

    x_regime_6_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                x_regime_6_reg_144 <= grp_positAdd_fu_275_ap_return_2;
            elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                x_regime_6_reg_144 <= ap_phi_reg_pp0_iter17_x_regime_6_reg_144;
            end if; 
        end if;
    end process;

    y_mantissa_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                y_mantissa_reg_168 <= grp_positAdd_fu_275_ap_return_4;
            elsif (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                y_mantissa_reg_168 <= ap_phi_reg_pp0_iter17_y_mantissa_reg_168;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                absXGreaterEqual_5_reg_919 <= absXGreaterEqual_5_fu_427_p2;
                absXGreaterEqual_5_reg_919_pp0_iter1_reg <= absXGreaterEqual_5_reg_919;
                icmp_ln23_reg_915 <= icmp_ln23_fu_397_p2;
                icmp_ln23_reg_915_pp0_iter1_reg <= icmp_ln23_reg_915;
                regime_reg_928 <= regime_fu_519_p3;
                tmp_45_reg_923 <= zext_ln680_fu_446_p1(118 downto 118);
                x_exponent_read_reg_895 <= x_exponent;
                x_exponent_read_reg_895_pp0_iter1_reg <= x_exponent_read_reg_895;
                x_mantissa_read_reg_889 <= x_mantissa;
                x_mantissa_read_reg_889_pp0_iter1_reg <= x_mantissa_read_reg_889;
                x_regime_read_reg_902 <= x_regime;
                x_regime_read_reg_902_pp0_iter1_reg <= x_regime_read_reg_902;
                x_sign_read_reg_909 <= x_sign;
                x_sign_read_reg_909_pp0_iter1_reg <= x_sign_read_reg_909;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                absXGreaterEqual_5_reg_919_pp0_iter2_reg <= absXGreaterEqual_5_reg_919_pp0_iter1_reg;
                absXGreaterEqual_5_reg_919_pp0_iter3_reg <= absXGreaterEqual_5_reg_919_pp0_iter2_reg;
                absXGreaterEqual_5_reg_919_pp0_iter4_reg <= absXGreaterEqual_5_reg_919_pp0_iter3_reg;
                absXGreaterEqual_5_reg_919_pp0_iter5_reg <= absXGreaterEqual_5_reg_919_pp0_iter4_reg;
                absXGreaterEqual_5_reg_919_pp0_iter6_reg <= absXGreaterEqual_5_reg_919_pp0_iter5_reg;
                absXGreaterEqual_5_reg_919_pp0_iter7_reg <= absXGreaterEqual_5_reg_919_pp0_iter6_reg;
                absXGreaterEqual_5_reg_919_pp0_iter8_reg <= absXGreaterEqual_5_reg_919_pp0_iter7_reg;
                icmp_ln23_reg_915_pp0_iter2_reg <= icmp_ln23_reg_915_pp0_iter1_reg;
                icmp_ln23_reg_915_pp0_iter3_reg <= icmp_ln23_reg_915_pp0_iter2_reg;
                icmp_ln23_reg_915_pp0_iter4_reg <= icmp_ln23_reg_915_pp0_iter3_reg;
                icmp_ln23_reg_915_pp0_iter5_reg <= icmp_ln23_reg_915_pp0_iter4_reg;
                icmp_ln23_reg_915_pp0_iter6_reg <= icmp_ln23_reg_915_pp0_iter5_reg;
                icmp_ln23_reg_915_pp0_iter7_reg <= icmp_ln23_reg_915_pp0_iter6_reg;
                icmp_ln23_reg_915_pp0_iter8_reg <= icmp_ln23_reg_915_pp0_iter7_reg;
                m_angle_exponent_5_reg_956 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(32 downto 32);
                m_angle_isZero_reg_944 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(8 downto 8);
                m_angle_mantissa_reg_962 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(93 downto 64);
                m_angle_regime_5_reg_950 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(29 downto 24);
                m_angle_sign_3_reg_938 <= m_angle_sign_3_fu_579_p1;
                retval_1_i20_reg_986 <= retval_1_i20_fu_809_p2;
                retval_1_i20_reg_986_pp0_iter18_reg <= retval_1_i20_reg_986;
                retval_1_i20_reg_986_pp0_iter19_reg <= retval_1_i20_reg_986_pp0_iter18_reg;
                retval_1_i20_reg_986_pp0_iter20_reg <= retval_1_i20_reg_986_pp0_iter19_reg;
                retval_1_i20_reg_986_pp0_iter21_reg <= retval_1_i20_reg_986_pp0_iter20_reg;
                retval_1_i20_reg_986_pp0_iter22_reg <= retval_1_i20_reg_986_pp0_iter21_reg;
                retval_1_i20_reg_986_pp0_iter23_reg <= retval_1_i20_reg_986_pp0_iter22_reg;
                retval_1_i20_reg_986_pp0_iter24_reg <= retval_1_i20_reg_986_pp0_iter23_reg;
                retval_1_i31_reg_990 <= retval_1_i31_fu_853_p2;
                retval_1_i31_reg_990_pp0_iter18_reg <= retval_1_i31_reg_990;
                retval_1_i31_reg_990_pp0_iter19_reg <= retval_1_i31_reg_990_pp0_iter18_reg;
                retval_1_i31_reg_990_pp0_iter20_reg <= retval_1_i31_reg_990_pp0_iter19_reg;
                retval_1_i31_reg_990_pp0_iter21_reg <= retval_1_i31_reg_990_pp0_iter20_reg;
                retval_1_i31_reg_990_pp0_iter22_reg <= retval_1_i31_reg_990_pp0_iter21_reg;
                retval_1_i31_reg_990_pp0_iter23_reg <= retval_1_i31_reg_990_pp0_iter22_reg;
                retval_1_i31_reg_990_pp0_iter24_reg <= retval_1_i31_reg_990_pp0_iter23_reg;
                retval_1_i9_reg_972 <= retval_1_i9_fu_737_p2;
                retval_1_i9_reg_972_pp0_iter10_reg <= retval_1_i9_reg_972;
                retval_1_i9_reg_972_pp0_iter11_reg <= retval_1_i9_reg_972_pp0_iter10_reg;
                retval_1_i9_reg_972_pp0_iter12_reg <= retval_1_i9_reg_972_pp0_iter11_reg;
                retval_1_i9_reg_972_pp0_iter13_reg <= retval_1_i9_reg_972_pp0_iter12_reg;
                retval_1_i9_reg_972_pp0_iter14_reg <= retval_1_i9_reg_972_pp0_iter13_reg;
                retval_1_i9_reg_972_pp0_iter15_reg <= retval_1_i9_reg_972_pp0_iter14_reg;
                retval_1_i9_reg_972_pp0_iter16_reg <= retval_1_i9_reg_972_pp0_iter15_reg;
                retval_1_i_reg_968 <= retval_1_i_fu_695_p2;
                retval_1_i_reg_968_pp0_iter10_reg <= retval_1_i_reg_968;
                retval_1_i_reg_968_pp0_iter11_reg <= retval_1_i_reg_968_pp0_iter10_reg;
                retval_1_i_reg_968_pp0_iter12_reg <= retval_1_i_reg_968_pp0_iter11_reg;
                retval_1_i_reg_968_pp0_iter13_reg <= retval_1_i_reg_968_pp0_iter12_reg;
                retval_1_i_reg_968_pp0_iter14_reg <= retval_1_i_reg_968_pp0_iter13_reg;
                retval_1_i_reg_968_pp0_iter15_reg <= retval_1_i_reg_968_pp0_iter14_reg;
                retval_1_i_reg_968_pp0_iter16_reg <= retval_1_i_reg_968_pp0_iter15_reg;
                x_exponent_read_reg_895_pp0_iter2_reg <= x_exponent_read_reg_895_pp0_iter1_reg;
                x_exponent_read_reg_895_pp0_iter3_reg <= x_exponent_read_reg_895_pp0_iter2_reg;
                x_exponent_read_reg_895_pp0_iter4_reg <= x_exponent_read_reg_895_pp0_iter3_reg;
                x_exponent_read_reg_895_pp0_iter5_reg <= x_exponent_read_reg_895_pp0_iter4_reg;
                x_exponent_read_reg_895_pp0_iter6_reg <= x_exponent_read_reg_895_pp0_iter5_reg;
                x_exponent_read_reg_895_pp0_iter7_reg <= x_exponent_read_reg_895_pp0_iter6_reg;
                x_mantissa_read_reg_889_pp0_iter2_reg <= x_mantissa_read_reg_889_pp0_iter1_reg;
                x_mantissa_read_reg_889_pp0_iter3_reg <= x_mantissa_read_reg_889_pp0_iter2_reg;
                x_mantissa_read_reg_889_pp0_iter4_reg <= x_mantissa_read_reg_889_pp0_iter3_reg;
                x_mantissa_read_reg_889_pp0_iter5_reg <= x_mantissa_read_reg_889_pp0_iter4_reg;
                x_mantissa_read_reg_889_pp0_iter6_reg <= x_mantissa_read_reg_889_pp0_iter5_reg;
                x_mantissa_read_reg_889_pp0_iter7_reg <= x_mantissa_read_reg_889_pp0_iter6_reg;
                x_regime_read_reg_902_pp0_iter2_reg <= x_regime_read_reg_902_pp0_iter1_reg;
                x_regime_read_reg_902_pp0_iter3_reg <= x_regime_read_reg_902_pp0_iter2_reg;
                x_regime_read_reg_902_pp0_iter4_reg <= x_regime_read_reg_902_pp0_iter3_reg;
                x_regime_read_reg_902_pp0_iter5_reg <= x_regime_read_reg_902_pp0_iter4_reg;
                x_regime_read_reg_902_pp0_iter6_reg <= x_regime_read_reg_902_pp0_iter5_reg;
                x_regime_read_reg_902_pp0_iter7_reg <= x_regime_read_reg_902_pp0_iter6_reg;
                x_sign_read_reg_909_pp0_iter2_reg <= x_sign_read_reg_909_pp0_iter1_reg;
                x_sign_read_reg_909_pp0_iter3_reg <= x_sign_read_reg_909_pp0_iter2_reg;
                x_sign_read_reg_909_pp0_iter4_reg <= x_sign_read_reg_909_pp0_iter3_reg;
                x_sign_read_reg_909_pp0_iter5_reg <= x_sign_read_reg_909_pp0_iter4_reg;
                x_sign_read_reg_909_pp0_iter6_reg <= x_sign_read_reg_909_pp0_iter5_reg;
                x_sign_read_reg_909_pp0_iter7_reg <= x_sign_read_reg_909_pp0_iter6_reg;
                x_sign_read_reg_909_pp0_iter8_reg <= x_sign_read_reg_909_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter9_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter10_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter9_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter10_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter9_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter10_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter9_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter10_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter9_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter10_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter11_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter10_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter11_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter10_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter11_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter10_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter11_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter10_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter11_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter10_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter11_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter10_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter11_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter10_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter11_y_isZero_reg_180 <= ap_phi_reg_pp0_iter10_y_isZero_reg_180;
                ap_phi_reg_pp0_iter11_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter10_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter12_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter11_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter12_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter11_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter12_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter11_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter12_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter11_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter12_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter11_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter12_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter11_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter12_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter11_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter12_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter11_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter12_y_isZero_reg_180 <= ap_phi_reg_pp0_iter11_y_isZero_reg_180;
                ap_phi_reg_pp0_iter12_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter11_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter13_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter12_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter13_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter12_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter13_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter12_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter13_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter12_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter13_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter12_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter13_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter12_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter13_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter12_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter13_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter12_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter13_y_isZero_reg_180 <= ap_phi_reg_pp0_iter12_y_isZero_reg_180;
                ap_phi_reg_pp0_iter13_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter12_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter14_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter13_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter14_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter13_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter14_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter13_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter14_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter13_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter14_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter13_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter14_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter13_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter14_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter13_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter14_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter13_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter14_y_isZero_reg_180 <= ap_phi_reg_pp0_iter13_y_isZero_reg_180;
                ap_phi_reg_pp0_iter14_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter13_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter15_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter14_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter15_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter14_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter15_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter14_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter15_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter14_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter15_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter14_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter15_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter14_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter15_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter14_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter15_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter14_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter15_y_isZero_reg_180 <= ap_phi_reg_pp0_iter14_y_isZero_reg_180;
                ap_phi_reg_pp0_iter15_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter14_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter16_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter15_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter16_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter15_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter16_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter15_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter16_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter15_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter16_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter15_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter16_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter15_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter16_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter15_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter16_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter15_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter16_y_isZero_reg_180 <= ap_phi_reg_pp0_iter15_y_isZero_reg_180;
                ap_phi_reg_pp0_iter16_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter15_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter17_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter16_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter17_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter16_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter17_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter16_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter17_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter16_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter17_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter16_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter17_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter16_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter17_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter16_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter17_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter16_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter17_y_isZero_reg_180 <= ap_phi_reg_pp0_iter16_y_isZero_reg_180;
                ap_phi_reg_pp0_iter17_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter16_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter18_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter17_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter18_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter17_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter18_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter17_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter18_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter17_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter18_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter17_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter0_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter1_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter0_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter1_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter0_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter1_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter0_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter1_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter0_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter1_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter0_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter1_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter0_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter1_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter0_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter1_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter0_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter1_y_isZero_reg_180 <= ap_phi_reg_pp0_iter0_y_isZero_reg_180;
                ap_phi_reg_pp0_iter1_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter0_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter20_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter19_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter20_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter19_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter20_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter19_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter20_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter19_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter20_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter19_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter21_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter20_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter21_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter20_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter21_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter20_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter21_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter20_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter21_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter20_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter22_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter21_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter22_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter21_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter22_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter21_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter22_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter21_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter22_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter21_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter23_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter22_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter23_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter22_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter23_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter22_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter23_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter22_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter23_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter22_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter24_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter23_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter24_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter23_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter24_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter23_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter24_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter23_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter24_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter23_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter25_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter24_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter25_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter24_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter25_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter24_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter25_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter24_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter25_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter24_ref_tmp_5_2_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter1_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter2_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter1_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter2_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter1_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter2_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter1_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter2_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter1_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter2_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter1_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter2_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter1_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter2_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter1_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter2_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter1_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter2_y_isZero_reg_180 <= ap_phi_reg_pp0_iter1_y_isZero_reg_180;
                ap_phi_reg_pp0_iter2_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter1_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter2_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter3_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter2_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter3_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter2_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter3_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter2_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter3_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter2_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter3_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter2_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter3_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter2_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter3_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter2_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter3_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter2_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter3_y_isZero_reg_180 <= ap_phi_reg_pp0_iter2_y_isZero_reg_180;
                ap_phi_reg_pp0_iter3_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter2_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter3_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter4_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter3_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter4_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter3_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter4_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter3_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter4_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter3_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter4_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter3_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter4_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter3_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter4_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter3_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter4_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter3_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter4_y_isZero_reg_180 <= ap_phi_reg_pp0_iter3_y_isZero_reg_180;
                ap_phi_reg_pp0_iter4_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter3_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter4_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter5_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter4_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter5_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter4_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter5_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter4_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter5_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter4_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter5_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter4_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter5_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter4_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter5_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter4_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter5_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter4_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter5_y_isZero_reg_180 <= ap_phi_reg_pp0_iter4_y_isZero_reg_180;
                ap_phi_reg_pp0_iter5_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter4_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter5_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter6_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter5_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter6_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter5_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter6_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter5_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter6_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter5_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter6_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter5_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter6_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter5_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter6_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter5_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter6_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter5_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter6_y_isZero_reg_180 <= ap_phi_reg_pp0_iter5_y_isZero_reg_180;
                ap_phi_reg_pp0_iter6_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter5_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter6_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter7_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter6_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter7_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter6_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter7_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter6_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter7_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter6_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter7_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter6_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter7_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter6_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter7_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter6_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter7_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter6_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter7_y_isZero_reg_180 <= ap_phi_reg_pp0_iter6_y_isZero_reg_180;
                ap_phi_reg_pp0_iter7_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter6_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter7_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter8_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter7_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter8_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter7_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter8_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter7_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter8_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter7_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter8_storemerge_in_i_reg_124 <= ap_phi_reg_pp0_iter7_storemerge_in_i_reg_124;
                ap_phi_reg_pp0_iter8_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter7_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter8_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter7_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter8_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter7_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter8_y_isZero_reg_180 <= ap_phi_reg_pp0_iter7_y_isZero_reg_180;
                ap_phi_reg_pp0_iter8_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter7_y_mantissa_reg_168;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_negate_write_assign_reg_240 <= ap_phi_reg_pp0_iter8_negate_write_assign_reg_240;
                ap_phi_reg_pp0_iter9_ref_tmp_1440_2_reg_192 <= ap_phi_reg_pp0_iter8_ref_tmp_1440_2_reg_192;
                ap_phi_reg_pp0_iter9_ref_tmp_3_2_reg_204 <= ap_phi_reg_pp0_iter8_ref_tmp_3_2_reg_204;
                ap_phi_reg_pp0_iter9_ref_tmp_4_2_reg_216 <= ap_phi_reg_pp0_iter8_ref_tmp_4_2_reg_216;
                ap_phi_reg_pp0_iter9_ref_tmp_5_2_reg_228 <= ap_phi_reg_pp0_iter8_ref_tmp_5_2_reg_228;
                ap_phi_reg_pp0_iter9_x_exponent_4_reg_156 <= ap_phi_reg_pp0_iter8_x_exponent_4_reg_156;
                ap_phi_reg_pp0_iter9_x_regime_6_reg_144 <= ap_phi_reg_pp0_iter8_x_regime_6_reg_144;
                ap_phi_reg_pp0_iter9_x_sign_3_reg_133 <= ap_phi_reg_pp0_iter8_x_sign_3_reg_133;
                ap_phi_reg_pp0_iter9_y_isZero_reg_180 <= ap_phi_reg_pp0_iter8_y_isZero_reg_180;
                ap_phi_reg_pp0_iter9_y_mantissa_reg_168 <= ap_phi_reg_pp0_iter8_y_mantissa_reg_168;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    absXGreaterEqual_1_fu_725_p2 <= (icmp_ln23_2_fu_701_p2 or and_ln25_5_fu_719_p2);
    absXGreaterEqual_2_fu_791_p2 <= (or_ln24_1_fu_785_p2 or and_ln25_7_fu_779_p2);
    absXGreaterEqual_3_fu_841_p2 <= (tmp_49_fu_815_p3 or and_ln25_9_fu_835_p2);
    absXGreaterEqual_5_fu_427_p2 <= (icmp_ln24_fu_403_p2 and and_ln25_fu_421_p2);
    absXGreaterEqual_fu_677_p2 <= (or_ln24_fu_671_p2 or and_ln25_3_fu_665_p2);
    add_ln680_fu_468_p2 <= std_logic_vector(unsigned(zext_ln675_fu_458_p1) + unsigned(x_regime_read_reg_902));
    add_ln800_fu_485_p2 <= std_logic_vector(unsigned(sf_r_fu_473_p2) + unsigned(ap_const_lv6_2));
    and_ln24_1_fu_755_p2 <= (icmp_ln24_2_fu_749_p2 and ap_phi_mux_x_exponent_4_phi_fu_159_p6);
    and_ln24_fu_641_p2 <= (m_angle_exponent_5_fu_601_p3 and icmp_ln24_1_fu_635_p2);
    and_ln25_2_fu_659_p2 <= (xor_ln25_1_fu_647_p2 and icmp_ln25_1_fu_653_p2);
    and_ln25_3_fu_665_p2 <= (icmp_ln24_1_fu_635_p2 and and_ln25_2_fu_659_p2);
    and_ln25_4_fu_713_p2 <= (xor_ln25_1_fu_647_p2 and icmp_ln25_2_fu_707_p2);
    and_ln25_5_fu_719_p2 <= (icmp_ln24_1_fu_635_p2 and and_ln25_4_fu_713_p2);
    and_ln25_6_fu_773_p2 <= (xor_ln25_2_fu_761_p2 and icmp_ln25_3_fu_767_p2);
    and_ln25_7_fu_779_p2 <= (icmp_ln24_2_fu_749_p2 and and_ln25_6_fu_773_p2);
    and_ln25_8_fu_829_p2 <= (xor_ln25_2_fu_761_p2 and icmp_ln25_4_fu_823_p2);
    and_ln25_9_fu_835_p2 <= (icmp_ln24_2_fu_749_p2 and and_ln25_8_fu_829_p2);
    and_ln25_fu_421_p2 <= (xor_ln25_fu_409_p2 and icmp_ln25_fu_415_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp154 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp155 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1301_assign_proc : process(retval_1_i_reg_968, retval_1_i9_reg_972, ap_block_pp0_stage0_ignoreCallOp100)
    begin
                ap_condition_1301 <= ((retval_1_i9_reg_972 = ap_const_lv1_1) and (retval_1_i_reg_968 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp100));
    end process;


    ap_condition_1305_assign_proc : process(retval_1_i20_reg_986, retval_1_i31_reg_990, ap_block_pp0_stage0_ignoreCallOp154)
    begin
                ap_condition_1305 <= ((retval_1_i31_reg_990 = ap_const_lv1_1) and (retval_1_i20_reg_986 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp154));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter25, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25)
    begin
        if (((ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) 
    and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to24_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) 
    and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to24 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_negate_write_assign_phi_fu_244_p6_assign_proc : process(retval_1_i20_reg_986_pp0_iter24_reg, retval_1_i31_reg_990_pp0_iter24_reg, ap_phi_reg_pp0_iter25_negate_write_assign_reg_240)
    begin
        if (((retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_1) or ((retval_1_i31_reg_990_pp0_iter24_reg = ap_const_lv1_1) and (retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_negate_write_assign_phi_fu_244_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_negate_write_assign_phi_fu_244_p6 <= ap_phi_reg_pp0_iter25_negate_write_assign_reg_240;
        end if; 
    end process;


    ap_phi_mux_ref_tmp_1440_2_phi_fu_195_p6_assign_proc : process(retval_1_i20_reg_986_pp0_iter24_reg, retval_1_i31_reg_990_pp0_iter24_reg, grp_positAdd_fu_296_ap_return_1, ap_phi_reg_pp0_iter25_ref_tmp_1440_2_reg_192)
    begin
        if (((retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_1) or ((retval_1_i31_reg_990_pp0_iter24_reg = ap_const_lv1_1) and (retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_ref_tmp_1440_2_phi_fu_195_p6 <= grp_positAdd_fu_296_ap_return_1;
        else 
            ap_phi_mux_ref_tmp_1440_2_phi_fu_195_p6 <= ap_phi_reg_pp0_iter25_ref_tmp_1440_2_reg_192;
        end if; 
    end process;


    ap_phi_mux_ref_tmp_3_2_phi_fu_207_p6_assign_proc : process(retval_1_i20_reg_986_pp0_iter24_reg, retval_1_i31_reg_990_pp0_iter24_reg, grp_positAdd_fu_296_ap_return_2, ap_phi_reg_pp0_iter25_ref_tmp_3_2_reg_204)
    begin
        if (((retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_1) or ((retval_1_i31_reg_990_pp0_iter24_reg = ap_const_lv1_1) and (retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_ref_tmp_3_2_phi_fu_207_p6 <= grp_positAdd_fu_296_ap_return_2;
        else 
            ap_phi_mux_ref_tmp_3_2_phi_fu_207_p6 <= ap_phi_reg_pp0_iter25_ref_tmp_3_2_reg_204;
        end if; 
    end process;


    ap_phi_mux_ref_tmp_4_2_phi_fu_219_p6_assign_proc : process(retval_1_i20_reg_986_pp0_iter24_reg, retval_1_i31_reg_990_pp0_iter24_reg, grp_positAdd_fu_296_ap_return_3, ap_phi_reg_pp0_iter25_ref_tmp_4_2_reg_216)
    begin
        if (((retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_1) or ((retval_1_i31_reg_990_pp0_iter24_reg = ap_const_lv1_1) and (retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_ref_tmp_4_2_phi_fu_219_p6 <= grp_positAdd_fu_296_ap_return_3;
        else 
            ap_phi_mux_ref_tmp_4_2_phi_fu_219_p6 <= ap_phi_reg_pp0_iter25_ref_tmp_4_2_reg_216;
        end if; 
    end process;


    ap_phi_mux_ref_tmp_5_2_phi_fu_231_p6_assign_proc : process(retval_1_i20_reg_986_pp0_iter24_reg, retval_1_i31_reg_990_pp0_iter24_reg, grp_positAdd_fu_296_ap_return_4, ap_phi_reg_pp0_iter25_ref_tmp_5_2_reg_228)
    begin
        if (((retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_1) or ((retval_1_i31_reg_990_pp0_iter24_reg = ap_const_lv1_1) and (retval_1_i20_reg_986_pp0_iter24_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_ref_tmp_5_2_phi_fu_231_p6 <= grp_positAdd_fu_296_ap_return_4;
        else 
            ap_phi_mux_ref_tmp_5_2_phi_fu_231_p6 <= ap_phi_reg_pp0_iter25_ref_tmp_5_2_reg_228;
        end if; 
    end process;


    ap_phi_mux_storemerge_in_i_phi_fu_127_p4_assign_proc : process(icmp_ln23_reg_915_pp0_iter8_reg, absXGreaterEqual_5_reg_919_pp0_iter8_reg, tmp_18_i_fu_557_p10, ap_phi_reg_pp0_iter9_storemerge_in_i_reg_124)
    begin
        if (((ap_const_lv1_0 = absXGreaterEqual_5_reg_919_pp0_iter8_reg) and (icmp_ln23_reg_915_pp0_iter8_reg = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_in_i_phi_fu_127_p4 <= tmp_18_i_fu_557_p10;
        else 
            ap_phi_mux_storemerge_in_i_phi_fu_127_p4 <= ap_phi_reg_pp0_iter9_storemerge_in_i_reg_124;
        end if; 
    end process;


    ap_phi_mux_x_exponent_4_phi_fu_159_p6_assign_proc : process(retval_1_i_reg_968_pp0_iter16_reg, retval_1_i9_reg_972_pp0_iter16_reg, grp_positAdd_fu_275_ap_return_3, ap_phi_reg_pp0_iter17_x_exponent_4_reg_156)
    begin
        if (((retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) or ((retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_x_exponent_4_phi_fu_159_p6 <= grp_positAdd_fu_275_ap_return_3;
        else 
            ap_phi_mux_x_exponent_4_phi_fu_159_p6 <= ap_phi_reg_pp0_iter17_x_exponent_4_reg_156;
        end if; 
    end process;


    ap_phi_mux_x_regime_6_phi_fu_147_p6_assign_proc : process(retval_1_i_reg_968_pp0_iter16_reg, retval_1_i9_reg_972_pp0_iter16_reg, grp_positAdd_fu_275_ap_return_2, ap_phi_reg_pp0_iter17_x_regime_6_reg_144)
    begin
        if (((retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) or ((retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_x_regime_6_phi_fu_147_p6 <= grp_positAdd_fu_275_ap_return_2;
        else 
            ap_phi_mux_x_regime_6_phi_fu_147_p6 <= ap_phi_reg_pp0_iter17_x_regime_6_reg_144;
        end if; 
    end process;


    ap_phi_mux_x_sign_3_phi_fu_136_p6_assign_proc : process(retval_1_i_reg_968_pp0_iter16_reg, retval_1_i9_reg_972_pp0_iter16_reg, grp_positAdd_fu_275_ap_return_0, ap_phi_reg_pp0_iter17_x_sign_3_reg_133)
    begin
        if (((retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) or ((retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_x_sign_3_phi_fu_136_p6 <= grp_positAdd_fu_275_ap_return_0;
        else 
            ap_phi_mux_x_sign_3_phi_fu_136_p6 <= ap_phi_reg_pp0_iter17_x_sign_3_reg_133;
        end if; 
    end process;


    ap_phi_mux_y_mantissa_phi_fu_171_p6_assign_proc : process(retval_1_i_reg_968_pp0_iter16_reg, retval_1_i9_reg_972_pp0_iter16_reg, grp_positAdd_fu_275_ap_return_4, ap_phi_reg_pp0_iter17_y_mantissa_reg_168)
    begin
        if (((retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_1) or ((retval_1_i9_reg_972_pp0_iter16_reg = ap_const_lv1_1) and (retval_1_i_reg_968_pp0_iter16_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_y_mantissa_phi_fu_171_p6 <= grp_positAdd_fu_275_ap_return_4;
        else 
            ap_phi_mux_y_mantissa_phi_fu_171_p6 <= ap_phi_reg_pp0_iter17_y_mantissa_reg_168;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_negate_write_assign_reg_240 <= "X";
    ap_phi_reg_pp0_iter0_ref_tmp_1440_2_reg_192 <= "X";
    ap_phi_reg_pp0_iter0_ref_tmp_3_2_reg_204 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_ref_tmp_4_2_reg_216 <= "X";
    ap_phi_reg_pp0_iter0_ref_tmp_5_2_reg_228 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_storemerge_in_i_reg_124 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_x_exponent_4_reg_156 <= "X";
    ap_phi_reg_pp0_iter0_x_regime_6_reg_144 <= "XXXXXX";
    ap_phi_reg_pp0_iter0_x_sign_3_reg_133 <= "X";
    ap_phi_reg_pp0_iter0_y_isZero_reg_180 <= "X";
    ap_phi_reg_pp0_iter0_y_mantissa_reg_168 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op100_call_state11_state10_assign_proc : process(retval_1_i_fu_695_p2, retval_1_i9_fu_737_p2)
    begin
                ap_predicate_op100_call_state11_state10 <= ((retval_1_i9_fu_737_p2 = ap_const_lv1_1) and (retval_1_i_fu_695_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op154_call_state19_state18_assign_proc : process(retval_1_i20_fu_809_p2, retval_1_i31_fu_853_p2)
    begin
                ap_predicate_op154_call_state19_state18 <= ((retval_1_i31_fu_853_p2 = ap_const_lv1_1) and (retval_1_i20_fu_809_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op56_call_state3_state2_assign_proc : process(icmp_ln23_reg_915, absXGreaterEqual_5_reg_919)
    begin
                ap_predicate_op56_call_state3_state2 <= ((ap_const_lv1_0 = absXGreaterEqual_5_reg_919) and (icmp_ln23_reg_915 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to24)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to24 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= ap_phi_mux_ref_tmp_1440_2_phi_fu_195_p6;
    ap_return_1 <= ap_phi_mux_ref_tmp_3_2_phi_fu_207_p6;
    ap_return_2 <= ap_phi_mux_ref_tmp_4_2_phi_fu_219_p6;
    ap_return_3 <= ap_phi_mux_ref_tmp_5_2_phi_fu_231_p6;
    ap_return_4 <= ap_phi_mux_negate_write_assign_phi_fu_244_p6;
    grp_positAdd_fu_255_ap_start <= grp_positAdd_fu_255_ap_start_reg;
    grp_positAdd_fu_275_ap_start <= grp_positAdd_fu_275_ap_start_reg;

    grp_positAdd_fu_275_x_sign_assign_proc : process(ap_enable_reg_pp0_iter10, m_angle_sign_3_reg_938, retval_1_i_reg_968, ap_block_pp0_stage0_ignoreCallOp101, ap_condition_1301)
    begin
        if ((ap_enable_reg_pp0_iter10 = ap_const_logic_1)) then
            if (((retval_1_i_reg_968 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp101))) then 
                grp_positAdd_fu_275_x_sign <= m_angle_sign_3_reg_938;
            elsif ((ap_const_boolean_1 = ap_condition_1301)) then 
                grp_positAdd_fu_275_x_sign <= ap_const_lv1_1;
            else 
                grp_positAdd_fu_275_x_sign <= "X";
            end if;
        else 
            grp_positAdd_fu_275_x_sign <= "X";
        end if; 
    end process;


    grp_positAdd_fu_275_y_sign_val_assign_proc : process(ap_enable_reg_pp0_iter10, retval_1_i_reg_968, ap_block_pp0_stage0_ignoreCallOp101, ap_condition_1301)
    begin
        if ((ap_enable_reg_pp0_iter10 = ap_const_logic_1)) then
            if (((retval_1_i_reg_968 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp101))) then 
                grp_positAdd_fu_275_y_sign_val <= ap_const_lv1_1;
            elsif ((ap_const_boolean_1 = ap_condition_1301)) then 
                grp_positAdd_fu_275_y_sign_val <= ap_const_lv1_0;
            else 
                grp_positAdd_fu_275_y_sign_val <= "X";
            end if;
        else 
            grp_positAdd_fu_275_y_sign_val <= "X";
        end if; 
    end process;

    grp_positAdd_fu_296_ap_start <= grp_positAdd_fu_296_ap_start_reg;

    grp_positAdd_fu_296_x_exponent2_assign_proc : process(ap_enable_reg_pp0_iter18, x_exponent_4_reg_156, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_x_exponent2 <= ap_const_lv1_0;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_x_exponent2 <= x_exponent_4_reg_156;
            else 
                grp_positAdd_fu_296_x_exponent2 <= "X";
            end if;
        else 
            grp_positAdd_fu_296_x_exponent2 <= "X";
        end if; 
    end process;


    grp_positAdd_fu_296_x_isZero_assign_proc : process(ap_enable_reg_pp0_iter18, retval_1_i20_reg_986, ap_phi_reg_pp0_iter18_y_isZero_reg_180, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_x_isZero <= ap_const_lv1_0;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_x_isZero <= ap_phi_reg_pp0_iter18_y_isZero_reg_180;
            else 
                grp_positAdd_fu_296_x_isZero <= "X";
            end if;
        else 
            grp_positAdd_fu_296_x_isZero <= "X";
        end if; 
    end process;


    grp_positAdd_fu_296_x_mantissa3_assign_proc : process(ap_enable_reg_pp0_iter18, y_mantissa_reg_168, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_x_mantissa3 <= ap_const_lv30_323D70A5;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_x_mantissa3 <= y_mantissa_reg_168;
            else 
                grp_positAdd_fu_296_x_mantissa3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_positAdd_fu_296_x_mantissa3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_296_x_regime1_assign_proc : process(ap_enable_reg_pp0_iter18, x_regime_6_reg_144, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_x_regime1 <= ap_const_lv6_1;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_x_regime1 <= x_regime_6_reg_144;
            else 
                grp_positAdd_fu_296_x_regime1 <= "XXXXXX";
            end if;
        else 
            grp_positAdd_fu_296_x_regime1 <= "XXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_296_x_sign_assign_proc : process(ap_enable_reg_pp0_iter18, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_x_sign <= ap_const_lv1_0;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_x_sign <= ap_const_lv1_1;
            else 
                grp_positAdd_fu_296_x_sign <= "X";
            end if;
        else 
            grp_positAdd_fu_296_x_sign <= "X";
        end if; 
    end process;


    grp_positAdd_fu_296_y_exponent2_val_assign_proc : process(ap_enable_reg_pp0_iter18, x_exponent_4_reg_156, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_y_exponent2_val <= x_exponent_4_reg_156;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_y_exponent2_val <= ap_const_lv1_0;
            else 
                grp_positAdd_fu_296_y_exponent2_val <= "X";
            end if;
        else 
            grp_positAdd_fu_296_y_exponent2_val <= "X";
        end if; 
    end process;


    grp_positAdd_fu_296_y_isZero_val_assign_proc : process(ap_enable_reg_pp0_iter18, retval_1_i20_reg_986, ap_phi_reg_pp0_iter18_y_isZero_reg_180, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_y_isZero_val <= ap_phi_reg_pp0_iter18_y_isZero_reg_180;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_y_isZero_val <= ap_const_lv1_0;
            else 
                grp_positAdd_fu_296_y_isZero_val <= "X";
            end if;
        else 
            grp_positAdd_fu_296_y_isZero_val <= "X";
        end if; 
    end process;


    grp_positAdd_fu_296_y_mantissa3_val_assign_proc : process(ap_enable_reg_pp0_iter18, y_mantissa_reg_168, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_y_mantissa3_val <= y_mantissa_reg_168;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_y_mantissa3_val <= ap_const_lv30_323D70A5;
            else 
                grp_positAdd_fu_296_y_mantissa3_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_positAdd_fu_296_y_mantissa3_val <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_296_y_regime1_val_assign_proc : process(ap_enable_reg_pp0_iter18, x_regime_6_reg_144, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_y_regime1_val <= x_regime_6_reg_144;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_y_regime1_val <= ap_const_lv6_1;
            else 
                grp_positAdd_fu_296_y_regime1_val <= "XXXXXX";
            end if;
        else 
            grp_positAdd_fu_296_y_regime1_val <= "XXXXXX";
        end if; 
    end process;


    grp_positAdd_fu_296_y_sign_val_assign_proc : process(ap_enable_reg_pp0_iter18, retval_1_i20_reg_986, ap_block_pp0_stage0_ignoreCallOp155, ap_condition_1305)
    begin
        if ((ap_enable_reg_pp0_iter18 = ap_const_logic_1)) then
            if (((retval_1_i20_reg_986 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_ignoreCallOp155))) then 
                grp_positAdd_fu_296_y_sign_val <= ap_const_lv1_1;
            elsif ((ap_const_boolean_1 = ap_condition_1305)) then 
                grp_positAdd_fu_296_y_sign_val <= ap_const_lv1_0;
            else 
                grp_positAdd_fu_296_y_sign_val <= "X";
            end if;
        else 
            grp_positAdd_fu_296_y_sign_val <= "X";
        end if; 
    end process;

    icmp_ln23_1_fu_629_p2 <= "1" when (signed(tmp_48_fu_619_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_ln23_2_fu_701_p2 <= "1" when (signed(m_angle_regime_5_fu_591_p4) < signed(ap_const_lv6_1)) else "0";
    icmp_ln23_3_fu_743_p2 <= "1" when (signed(ap_phi_mux_x_regime_6_phi_fu_147_p6) > signed(ap_const_lv6_0)) else "0";
    icmp_ln23_fu_397_p2 <= "1" when (signed(tmp_fu_387_p4) < signed(ap_const_lv5_1)) else "0";
    icmp_ln24_1_fu_635_p2 <= "1" when (m_angle_regime_5_fu_591_p4 = ap_const_lv6_1) else "0";
    icmp_ln24_2_fu_749_p2 <= "1" when (ap_phi_mux_x_regime_6_phi_fu_147_p6 = ap_const_lv6_0) else "0";
    icmp_ln24_fu_403_p2 <= "1" when (x_regime = ap_const_lv6_2) else "0";
    icmp_ln25_1_fu_653_p2 <= "1" when (unsigned(m_angle_mantissa_fu_609_p4) > unsigned(ap_const_lv30_323D70A5)) else "0";
    icmp_ln25_2_fu_707_p2 <= "1" when (unsigned(m_angle_mantissa_fu_609_p4) < unsigned(ap_const_lv30_323D70A5)) else "0";
    icmp_ln25_3_fu_767_p2 <= "1" when (unsigned(ap_phi_mux_y_mantissa_phi_fu_171_p6) > unsigned(ap_const_lv30_323D70A5)) else "0";
    icmp_ln25_4_fu_823_p2 <= "1" when (unsigned(ap_phi_mux_y_mantissa_phi_fu_171_p6) < unsigned(ap_const_lv30_323D70A5)) else "0";
    icmp_ln25_fu_415_p2 <= "1" when (unsigned(x_mantissa) < unsigned(ap_const_lv30_323D70A5)) else "0";
    icmp_ln703_fu_479_p2 <= "1" when (signed(sf_r_fu_473_p2) < signed(ap_const_lv6_1E)) else "0";
    icmp_ln803_fu_499_p2 <= "1" when (signed(regime_14_fu_491_p3) > signed(ap_const_lv6_1D)) else "0";
    icmp_ln804_fu_505_p2 <= "1" when (signed(regime_14_fu_491_p3) > signed(ap_const_lv6_22)) else "0";
    m_angle_exponent_5_fu_601_p3 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(32 downto 32);
    m_angle_mantissa_fu_609_p4 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(93 downto 64);
    m_angle_regime_5_fu_591_p4 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(29 downto 24);
    m_angle_sign_3_fu_579_p1 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(1 - 1 downto 0);
    mul_ln675_fu_330_p0 <= mul_ln675_fu_330_p00(59 - 1 downto 0);
    mul_ln675_fu_330_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_433_p3),119));
    mul_ln675_fu_330_p1 <= ap_const_lv119_A30EACD37887042(61 - 1 downto 0);
    not_m_angle_sign_fu_689_p2 <= (m_angle_sign_3_fu_579_p1 xor ap_const_lv1_1);
    not_y_sign_fu_803_p2 <= (ap_phi_mux_x_sign_3_phi_fu_136_p6 xor ap_const_lv1_1);
    or_ln24_1_fu_785_p2 <= (icmp_ln23_3_fu_743_p2 or and_ln24_1_fu_755_p2);
    or_ln24_fu_671_p2 <= (icmp_ln23_1_fu_629_p2 or and_ln24_fu_641_p2);
    regime_14_fu_491_p3 <= 
        add_ln800_fu_485_p2 when (icmp_ln703_fu_479_p2(0) = '1') else 
        ap_const_lv6_20;
    regime_fu_519_p3 <= 
        ap_const_lv6_1E when (icmp_ln803_fu_499_p2(0) = '1') else 
        select_ln804_fu_511_p3;
    retval_1_i20_fu_809_p2 <= (xor_ln27_2_fu_797_p2 and not_y_sign_fu_803_p2);
    retval_1_i31_fu_853_p2 <= (xor_ln27_3_fu_847_p2 and ap_phi_mux_x_sign_3_phi_fu_136_p6);
    retval_1_i9_fu_737_p2 <= (xor_ln27_1_fu_731_p2 and m_angle_sign_3_fu_579_p1);
    retval_1_i_fu_695_p2 <= (xor_ln27_fu_683_p2 and not_m_angle_sign_fu_689_p2);
    select_ln680_fu_461_p3 <= 
        ap_const_lv6_3E when (tmp_45_reg_923(0) = '1') else 
        ap_const_lv6_3D;
    select_ln804_fu_511_p3 <= 
        regime_14_fu_491_p3 when (icmp_ln804_fu_505_p2(0) = '1') else 
        ap_const_lv6_22;
    sf_r_fu_473_p2 <= std_logic_vector(unsigned(add_ln680_fu_468_p2) + unsigned(select_ln680_fu_461_p3));
    shl_ln_fu_433_p3 <= (x_mantissa & ap_const_lv29_0);
    tmp_18_i_fu_557_p10 <= ((((((((grp_positAdd_fu_255_ap_return_4 & ap_const_lv31_0) & grp_positAdd_fu_255_ap_return_3) & ap_const_lv2_0) & grp_positAdd_fu_255_ap_return_2) & ap_const_lv15_0) & grp_positAdd_fu_255_ap_return_1) & ap_const_lv7_0) & x_sign_read_reg_909_pp0_iter8_reg);
    tmp_48_fu_619_p4 <= ap_phi_mux_storemerge_in_i_phi_fu_127_p4(29 downto 25);
    tmp_49_fu_815_p3 <= ap_phi_mux_x_regime_6_phi_fu_147_p6(5 downto 5);
    tmp_fu_387_p4 <= x_regime(5 downto 1);
    tmp_i_fu_527_p8 <= ((((((x_mantissa_read_reg_889_pp0_iter7_reg & ap_const_lv31_0) & x_exponent_read_reg_895_pp0_iter7_reg) & ap_const_lv2_0) & x_regime_read_reg_902_pp0_iter7_reg) & ap_const_lv23_0) & x_sign_read_reg_909_pp0_iter7_reg);
    xor_ln25_1_fu_647_p2 <= (m_angle_exponent_5_fu_601_p3 xor ap_const_lv1_1);
    xor_ln25_2_fu_761_p2 <= (ap_phi_mux_x_exponent_4_phi_fu_159_p6 xor ap_const_lv1_1);
    xor_ln25_fu_409_p2 <= (x_exponent xor ap_const_lv1_1);
    xor_ln27_1_fu_731_p2 <= (ap_const_lv1_1 xor absXGreaterEqual_1_fu_725_p2);
    xor_ln27_2_fu_797_p2 <= (ap_phi_mux_x_sign_3_phi_fu_136_p6 xor absXGreaterEqual_2_fu_791_p2);
    xor_ln27_3_fu_847_p2 <= (ap_const_lv1_1 xor absXGreaterEqual_3_fu_841_p2);
    xor_ln27_fu_683_p2 <= (m_angle_sign_3_fu_579_p1 xor absXGreaterEqual_fu_677_p2);
    zext_ln675_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_exponent_read_reg_895),6));
    zext_ln680_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln675_fu_330_p2),149));
end behav;
