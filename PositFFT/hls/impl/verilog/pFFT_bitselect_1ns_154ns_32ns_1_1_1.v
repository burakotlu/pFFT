// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
`timescale 1ns / 1ps

module pFFT_bitselect_1ns_154ns_32ns_1_1_1 (sel,din,dout);

parameter ADDRWIDTH = 32;
parameter DATAWIDTH = 154;


input [ADDRWIDTH-1:0] sel;
input [DATAWIDTH-1:0] din;
output dout;

reg out_tmp;



always @ (*) begin
(* parallel_case *) case (sel)

0: out_tmp = din[0];

1: out_tmp = din[1];

2: out_tmp = din[2];

3: out_tmp = din[3];

4: out_tmp = din[4];

5: out_tmp = din[5];

6: out_tmp = din[6];

7: out_tmp = din[7];

8: out_tmp = din[8];

9: out_tmp = din[9];

10: out_tmp = din[10];

11: out_tmp = din[11];

12: out_tmp = din[12];

13: out_tmp = din[13];

14: out_tmp = din[14];

15: out_tmp = din[15];

16: out_tmp = din[16];

17: out_tmp = din[17];

18: out_tmp = din[18];

19: out_tmp = din[19];

20: out_tmp = din[20];

21: out_tmp = din[21];

22: out_tmp = din[22];

23: out_tmp = din[23];

24: out_tmp = din[24];

25: out_tmp = din[25];

26: out_tmp = din[26];

27: out_tmp = din[27];

28: out_tmp = din[28];

29: out_tmp = din[29];

30: out_tmp = din[30];

31: out_tmp = din[31];

32: out_tmp = din[32];

33: out_tmp = din[33];

34: out_tmp = din[34];

35: out_tmp = din[35];

36: out_tmp = din[36];

37: out_tmp = din[37];

38: out_tmp = din[38];

39: out_tmp = din[39];

40: out_tmp = din[40];

41: out_tmp = din[41];

42: out_tmp = din[42];

43: out_tmp = din[43];

44: out_tmp = din[44];

45: out_tmp = din[45];

46: out_tmp = din[46];

47: out_tmp = din[47];

48: out_tmp = din[48];

49: out_tmp = din[49];

50: out_tmp = din[50];

51: out_tmp = din[51];

52: out_tmp = din[52];

53: out_tmp = din[53];

54: out_tmp = din[54];

55: out_tmp = din[55];

56: out_tmp = din[56];

57: out_tmp = din[57];

58: out_tmp = din[58];

59: out_tmp = din[59];

60: out_tmp = din[60];

61: out_tmp = din[61];

62: out_tmp = din[62];

63: out_tmp = din[63];

64: out_tmp = din[64];

65: out_tmp = din[65];

66: out_tmp = din[66];

67: out_tmp = din[67];

68: out_tmp = din[68];

69: out_tmp = din[69];

70: out_tmp = din[70];

71: out_tmp = din[71];

72: out_tmp = din[72];

73: out_tmp = din[73];

74: out_tmp = din[74];

75: out_tmp = din[75];

76: out_tmp = din[76];

77: out_tmp = din[77];

78: out_tmp = din[78];

79: out_tmp = din[79];

80: out_tmp = din[80];

81: out_tmp = din[81];

82: out_tmp = din[82];

83: out_tmp = din[83];

84: out_tmp = din[84];

85: out_tmp = din[85];

86: out_tmp = din[86];

87: out_tmp = din[87];

88: out_tmp = din[88];

89: out_tmp = din[89];

90: out_tmp = din[90];

91: out_tmp = din[91];

92: out_tmp = din[92];

93: out_tmp = din[93];

94: out_tmp = din[94];

95: out_tmp = din[95];

96: out_tmp = din[96];

97: out_tmp = din[97];

98: out_tmp = din[98];

99: out_tmp = din[99];

100: out_tmp = din[100];

101: out_tmp = din[101];

102: out_tmp = din[102];

103: out_tmp = din[103];

104: out_tmp = din[104];

105: out_tmp = din[105];

106: out_tmp = din[106];

107: out_tmp = din[107];

108: out_tmp = din[108];

109: out_tmp = din[109];

110: out_tmp = din[110];

111: out_tmp = din[111];

112: out_tmp = din[112];

113: out_tmp = din[113];

114: out_tmp = din[114];

115: out_tmp = din[115];

116: out_tmp = din[116];

117: out_tmp = din[117];

118: out_tmp = din[118];

119: out_tmp = din[119];

120: out_tmp = din[120];

121: out_tmp = din[121];

122: out_tmp = din[122];

123: out_tmp = din[123];

124: out_tmp = din[124];

125: out_tmp = din[125];

126: out_tmp = din[126];

127: out_tmp = din[127];

128: out_tmp = din[128];

129: out_tmp = din[129];

130: out_tmp = din[130];

131: out_tmp = din[131];

132: out_tmp = din[132];

133: out_tmp = din[133];

134: out_tmp = din[134];

135: out_tmp = din[135];

136: out_tmp = din[136];

137: out_tmp = din[137];

138: out_tmp = din[138];

139: out_tmp = din[139];

140: out_tmp = din[140];

141: out_tmp = din[141];

142: out_tmp = din[142];

143: out_tmp = din[143];

144: out_tmp = din[144];

145: out_tmp = din[145];

146: out_tmp = din[146];

147: out_tmp = din[147];

148: out_tmp = din[148];

149: out_tmp = din[149];

150: out_tmp = din[150];

151: out_tmp = din[151];

152: out_tmp = din[152];

153: out_tmp = din[153];

default: out_tmp = 'bx;
endcase
end




assign dout = out_tmp;




endmodule
