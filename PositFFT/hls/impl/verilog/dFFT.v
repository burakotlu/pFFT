// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dFFT_dFFT,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xazu7ev-fbvb900-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.533600,HLS_SYN_LAT=3216449,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3214,HLS_SYN_LUT=4459,HLS_VERSION=2024_2}" *)

module dFFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        signal_r,
        result_real_address0,
        result_real_ce0,
        result_real_we0,
        result_real_d0,
        result_imag_address0,
        result_imag_ce0,
        result_imag_we0,
        result_imag_d0
);

parameter    ap_ST_fsm_state1 = 100'd1;
parameter    ap_ST_fsm_state2 = 100'd2;
parameter    ap_ST_fsm_state3 = 100'd4;
parameter    ap_ST_fsm_state4 = 100'd8;
parameter    ap_ST_fsm_state5 = 100'd16;
parameter    ap_ST_fsm_state6 = 100'd32;
parameter    ap_ST_fsm_state7 = 100'd64;
parameter    ap_ST_fsm_state8 = 100'd128;
parameter    ap_ST_fsm_state9 = 100'd256;
parameter    ap_ST_fsm_state10 = 100'd512;
parameter    ap_ST_fsm_state11 = 100'd1024;
parameter    ap_ST_fsm_state12 = 100'd2048;
parameter    ap_ST_fsm_state13 = 100'd4096;
parameter    ap_ST_fsm_state14 = 100'd8192;
parameter    ap_ST_fsm_state15 = 100'd16384;
parameter    ap_ST_fsm_state16 = 100'd32768;
parameter    ap_ST_fsm_state17 = 100'd65536;
parameter    ap_ST_fsm_state18 = 100'd131072;
parameter    ap_ST_fsm_state19 = 100'd262144;
parameter    ap_ST_fsm_state20 = 100'd524288;
parameter    ap_ST_fsm_state21 = 100'd1048576;
parameter    ap_ST_fsm_state22 = 100'd2097152;
parameter    ap_ST_fsm_state23 = 100'd4194304;
parameter    ap_ST_fsm_state24 = 100'd8388608;
parameter    ap_ST_fsm_state25 = 100'd16777216;
parameter    ap_ST_fsm_state26 = 100'd33554432;
parameter    ap_ST_fsm_state27 = 100'd67108864;
parameter    ap_ST_fsm_state28 = 100'd134217728;
parameter    ap_ST_fsm_state29 = 100'd268435456;
parameter    ap_ST_fsm_state30 = 100'd536870912;
parameter    ap_ST_fsm_state31 = 100'd1073741824;
parameter    ap_ST_fsm_state32 = 100'd2147483648;
parameter    ap_ST_fsm_state33 = 100'd4294967296;
parameter    ap_ST_fsm_state34 = 100'd8589934592;
parameter    ap_ST_fsm_state35 = 100'd17179869184;
parameter    ap_ST_fsm_state36 = 100'd34359738368;
parameter    ap_ST_fsm_state37 = 100'd68719476736;
parameter    ap_ST_fsm_state38 = 100'd137438953472;
parameter    ap_ST_fsm_state39 = 100'd274877906944;
parameter    ap_ST_fsm_state40 = 100'd549755813888;
parameter    ap_ST_fsm_state41 = 100'd1099511627776;
parameter    ap_ST_fsm_state42 = 100'd2199023255552;
parameter    ap_ST_fsm_state43 = 100'd4398046511104;
parameter    ap_ST_fsm_state44 = 100'd8796093022208;
parameter    ap_ST_fsm_state45 = 100'd17592186044416;
parameter    ap_ST_fsm_state46 = 100'd35184372088832;
parameter    ap_ST_fsm_state47 = 100'd70368744177664;
parameter    ap_ST_fsm_state48 = 100'd140737488355328;
parameter    ap_ST_fsm_state49 = 100'd281474976710656;
parameter    ap_ST_fsm_state50 = 100'd562949953421312;
parameter    ap_ST_fsm_state51 = 100'd1125899906842624;
parameter    ap_ST_fsm_state52 = 100'd2251799813685248;
parameter    ap_ST_fsm_state53 = 100'd4503599627370496;
parameter    ap_ST_fsm_state54 = 100'd9007199254740992;
parameter    ap_ST_fsm_state55 = 100'd18014398509481984;
parameter    ap_ST_fsm_state56 = 100'd36028797018963968;
parameter    ap_ST_fsm_state57 = 100'd72057594037927936;
parameter    ap_ST_fsm_state58 = 100'd144115188075855872;
parameter    ap_ST_fsm_state59 = 100'd288230376151711744;
parameter    ap_ST_fsm_state60 = 100'd576460752303423488;
parameter    ap_ST_fsm_state61 = 100'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 100'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 100'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 100'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 100'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 100'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 100'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 100'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 100'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 100'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 100'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 100'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 100'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 100'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 100'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 100'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 100'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 100'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 100'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 100'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 100'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 100'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 100'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 100'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 100'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 100'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 100'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 100'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 100'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 100'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 100'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 100'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 100'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 100'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 100'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 100'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 100'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 100'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 100'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 100'd633825300114114700748351602688;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] signal_r;
output  [5:0] result_real_address0;
output   result_real_ce0;
output   result_real_we0;
output  [63:0] result_real_d0;
output  [5:0] result_imag_address0;
output   result_imag_ce0;
output   result_imag_we0;
output  [63:0] result_imag_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [99:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_211_p2;
reg   [63:0] reg_240;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state17;
wire   [63:0] grp_fu_195_p2;
reg   [63:0] reg_246;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state89;
wire   [63:0] grp_fu_201_p2;
reg   [63:0] reg_252;
reg   [63:0] reg_256;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state95;
wire   [63:0] grp_fu_217_p2;
reg   [63:0] reg_263;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state48;
reg   [63:0] reg_269;
reg   [63:0] reg_276;
wire   [63:0] empty_fu_282_p1;
reg   [63:0] empty_reg_561;
wire   [6:0] add_ln1431_fu_300_p2;
reg   [6:0] add_ln1431_reg_572;
wire    ap_CS_fsm_state2;
wire   [63:0] grp_fu_237_p1;
reg   [63:0] conv_i_reg_582;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln1431_fu_315_p1;
reg   [63:0] zext_ln1431_reg_587;
wire   [6:0] add_ln1318_fu_324_p2;
reg   [6:0] add_ln1318_reg_596;
wire    ap_CS_fsm_state18;
wire   [63:0] grp_generic_fmod_double_s_fu_189_ap_return;
reg   [63:0] angle_assign_reg_601;
wire    ap_CS_fsm_state19;
reg   [63:0] angle_reg_611;
wire    ap_CS_fsm_state22;
wire   [63:0] angle_assign_4_fu_398_p3;
reg   [63:0] angle_assign_4_reg_616;
wire    ap_CS_fsm_state25;
wire   [0:0] and_ln878_fu_441_p2;
reg   [0:0] and_ln878_reg_627;
wire   [0:0] and_ln881_fu_447_p2;
reg   [0:0] and_ln881_reg_634;
wire   [0:0] and_ln881_1_fu_459_p2;
reg   [0:0] and_ln881_1_reg_640;
wire   [63:0] angle_assign_s_fu_471_p9;
wire    ap_CS_fsm_state31;
wire   [63:0] term1_fu_498_p3;
reg   [63:0] term1_reg_651;
reg   [63:0] term2_reg_659;
wire    ap_CS_fsm_state50;
wire   [63:0] realPart_fu_545_p3;
reg   [63:0] add_i_reg_669;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state100;
wire    grp_generic_fmod_double_s_fu_189_ap_start;
wire    grp_generic_fmod_double_s_fu_189_ap_done;
wire    grp_generic_fmod_double_s_fu_189_ap_idle;
wire    grp_generic_fmod_double_s_fu_189_ap_ready;
reg   [6:0] n_reg_142;
reg   [63:0] imagSum_reg_153;
reg   [63:0] realSum_reg_165;
reg   [63:0] angle_1_reg_177;
reg    grp_generic_fmod_double_s_fu_189_ap_start_reg;
wire   [0:0] icmp_ln1318_fu_318_p2;
reg   [6:0] k_fu_106;
reg    result_real_we0_local;
wire   [63:0] bitcast_ln1440_fu_330_p1;
reg    result_real_ce0_local;
reg    result_imag_we0_local;
wire   [63:0] bitcast_ln1441_fu_335_p1;
reg    result_imag_ce0_local;
reg   [63:0] grp_fu_195_p0;
reg   [63:0] grp_fu_195_p1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state96;
reg   [63:0] grp_fu_201_p0;
reg   [63:0] grp_fu_201_p1;
reg   [63:0] grp_fu_211_p0;
reg   [63:0] grp_fu_211_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state90;
reg   [63:0] grp_fu_217_p0;
reg   [63:0] grp_fu_217_p1;
reg   [63:0] grp_fu_225_p0;
reg   [63:0] grp_fu_225_p1;
wire    ap_CS_fsm_state29;
reg   [63:0] grp_fu_230_p0;
reg   [63:0] grp_fu_230_p1;
wire   [31:0] grp_fu_237_p0;
wire   [5:0] trunc_ln1438_fu_306_p1;
wire   [63:0] bitcast_ln871_fu_344_p1;
wire   [10:0] tmp_fu_347_p4;
wire   [51:0] trunc_ln871_fu_357_p1;
wire   [0:0] icmp_ln871_1_fu_367_p2;
wire   [0:0] icmp_ln871_fu_361_p2;
wire   [0:0] or_ln871_fu_373_p2;
wire   [0:0] grp_fu_225_p2;
wire   [0:0] grp_fu_230_p2;
wire   [0:0] and_ln873_fu_385_p2;
wire   [0:0] and_ln871_fu_379_p2;
wire   [63:0] select_ln873_fu_391_p3;
wire   [63:0] bitcast_ln878_fu_406_p1;
wire   [10:0] tmp_4_fu_409_p4;
wire   [51:0] trunc_ln878_fu_419_p1;
wire   [0:0] icmp_ln878_1_fu_429_p2;
wire   [0:0] icmp_ln878_fu_423_p2;
wire   [0:0] or_ln878_fu_435_p2;
wire   [0:0] xor_ln878_fu_453_p2;
wire   [63:0] angle_assign_s_fu_471_p7;
wire   [1:0] angle_assign_s_fu_471_p8;
wire   [63:0] select_ln1108_fu_492_p3;
wire   [63:0] bitcast_ln922_fu_511_p1;
wire   [0:0] bit_sel_fu_515_p3;
wire   [0:0] xor_ln922_fu_523_p2;
wire   [62:0] trunc_ln922_fu_529_p1;
wire   [63:0] xor_ln_fu_533_p3;
wire   [0:0] negate_fu_507_p2;
wire   [63:0] bitcast_ln922_1_fu_541_p1;
reg   [1:0] grp_fu_195_opcode;
reg    grp_fu_195_ce;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state99;
reg   [1:0] grp_fu_201_opcode;
wire   [0:0] icmp_ln1431_fu_294_p2;
reg   [99:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire  signed [1:0] angle_assign_s_fu_471_p1;
wire   [1:0] angle_assign_s_fu_471_p3;
wire   [1:0] angle_assign_s_fu_471_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 100'd1;
#0 grp_generic_fmod_double_s_fu_189_ap_start_reg = 1'b0;
#0 k_fu_106 = 7'd0;
end

dFFT_generic_fmod_double_s grp_generic_fmod_double_s_fu_189(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_fmod_double_s_fu_189_ap_start),
    .ap_done(grp_generic_fmod_double_s_fu_189_ap_done),
    .ap_idle(grp_generic_fmod_double_s_fu_189_ap_idle),
    .ap_ready(grp_generic_fmod_double_s_fu_189_ap_ready),
    .x(angle_1_reg_177),
    .ap_return(grp_generic_fmod_double_s_fu_189_ap_return)
);

dFFT_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_195_p0),
    .din1(grp_fu_195_p1),
    .opcode(grp_fu_195_opcode),
    .ce(grp_fu_195_ce),
    .dout(grp_fu_195_p2)
);

dFFT_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_201_p0),
    .din1(grp_fu_201_p1),
    .opcode(grp_fu_201_opcode),
    .ce(1'b1),
    .dout(grp_fu_201_p2)
);

dFFT_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_211_p0),
    .din1(grp_fu_211_p1),
    .ce(1'b1),
    .dout(grp_fu_211_p2)
);

dFFT_dmul_64ns_64ns_64_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_6_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_217_p0),
    .din1(grp_fu_217_p1),
    .ce(1'b1),
    .dout(grp_fu_217_p2)
);

dFFT_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_225_p0),
    .din1(grp_fu_225_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_225_p2)
);

dFFT_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_230_p0),
    .din1(grp_fu_230_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_230_p2)
);

dFFT_sitodp_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_4_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_237_p0),
    .ce(1'b1),
    .dout(grp_fu_237_p1)
);

(* dissolve_hierarchy = "yes" *) dFFT_sparsemux_7_2_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 64 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 64 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
sparsemux_7_2_64_1_1_U14(
    .din0(reg_246),
    .din1(reg_252),
    .din2(angle_assign_4_reg_616),
    .def(angle_assign_s_fu_471_p7),
    .sel(angle_assign_s_fu_471_p8),
    .dout(angle_assign_s_fu_471_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_fmod_double_s_fu_189_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln1318_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
            grp_generic_fmod_double_s_fu_189_ap_start_reg <= 1'b1;
        end else if ((grp_generic_fmod_double_s_fu_189_ap_ready == 1'b1)) begin
            grp_generic_fmod_double_s_fu_189_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        angle_1_reg_177 <= angle_reg_611;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        angle_1_reg_177 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        imagSum_reg_153 <= grp_fu_195_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        imagSum_reg_153 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_fu_106 <= 7'd0;
    end else if (((icmp_ln1318_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        k_fu_106 <= add_ln1431_reg_572;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        n_reg_142 <= add_ln1318_reg_596;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        n_reg_142 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        realSum_reg_165 <= add_i_reg_669;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        realSum_reg_165 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        add_i_reg_669 <= grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln1318_reg_596 <= add_ln1318_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln1431_reg_572 <= add_ln1431_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        and_ln878_reg_627 <= and_ln878_fu_441_p2;
        and_ln881_1_reg_640 <= and_ln881_1_fu_459_p2;
        and_ln881_reg_634 <= and_ln881_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        angle_assign_4_reg_616 <= angle_assign_4_fu_398_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        angle_assign_reg_601 <= grp_generic_fmod_double_s_fu_189_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        angle_reg_611 <= grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_i_reg_582 <= grp_fu_237_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_561 <= empty_fu_282_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_240 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_246 <= grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_252 <= grp_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60))) begin
        reg_256 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36))) begin
        reg_263 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state71))) begin
        reg_269 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state60))) begin
        reg_276 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        term1_reg_651 <= term1_fu_498_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        term2_reg_659 <= grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        zext_ln1431_reg_587[6 : 0] <= zext_ln1431_fu_315_p1[6 : 0];
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((grp_generic_fmod_double_s_fu_189_ap_done == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln1431_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1431_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state100) | (1'b1 
    == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | ((grp_generic_fmod_double_s_fu_189_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)))) begin
        grp_fu_195_ce = 1'b1;
    end else begin
        grp_fu_195_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_195_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state72) | ((icmp_ln1318_fu_318_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_fu_195_opcode = 2'd0;
    end else begin
        grp_fu_195_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_195_p0 = imagSum_reg_153;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_195_p0 = realSum_reg_165;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_195_p0 = term1_reg_651;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state56))) begin
        grp_fu_195_p0 = reg_246;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_195_p0 = 64'd4607182418800017408;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_195_p0 = 64'd4614253070214989087;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_195_p0 = angle_assign_reg_601;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_195_p0 = angle_1_reg_177;
    end else begin
        grp_fu_195_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_195_p1 = reg_263;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_195_p1 = reg_256;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state72))) begin
        grp_fu_195_p1 = reg_269;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_195_p1 = term2_reg_659;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_195_p1 = angle_assign_4_reg_616;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_195_p1 = 64'd13842128706697135391;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_195_p1 = reg_240;
    end else begin
        grp_fu_195_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_201_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_201_opcode = 2'd0;
    end else begin
        grp_fu_201_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_201_p0 = 64'd13837625107069764895;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_201_p0 = angle_assign_reg_601;
    end else begin
        grp_fu_201_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_201_p1 = angle_assign_4_reg_616;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_201_p1 = 64'd4618756669842359583;
    end else begin
        grp_fu_201_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state66))) begin
        grp_fu_211_p0 = empty_reg_561;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_211_p0 = reg_276;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_211_p0 = reg_269;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_fu_211_p0 = reg_256;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_211_p0 = angle_assign_s_fu_471_p9;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_211_p0 = reg_240;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_211_p0 = conv_i_reg_582;
    end else begin
        grp_fu_211_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_211_p1 = reg_246;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_211_p1 = term1_reg_651;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_211_p1 = realPart_fu_545_p3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_211_p1 = 64'd4589168020290535424;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_211_p1 = reg_269;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_211_p1 = 64'd4602678819172646912;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_fu_211_p1 = 64'd4584664420663164928;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_211_p1 = reg_256;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_211_p1 = angle_assign_s_fu_471_p9;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_211_p1 = 64'd4580160821035794432;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_211_p1 = 64'd13842132293034192152;
    end else begin
        grp_fu_211_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_217_p0 = reg_276;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_217_p0 = reg_263;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_217_p0 = term1_fu_498_p3;
    end else begin
        grp_fu_217_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_217_p1 = 64'd4593671619917905920;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_fu_217_p1 = term1_reg_651;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_217_p1 = term1_fu_498_p3;
    end else begin
        grp_fu_217_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_225_p0 = angle_assign_4_reg_616;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_225_p0 = angle_assign_reg_601;
    end else begin
        grp_fu_225_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_225_p1 = 64'd4609749470587618591;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_225_p1 = 64'd4614253070214989087;
    end else begin
        grp_fu_225_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_230_p0 = angle_assign_4_reg_616;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_230_p0 = angle_assign_reg_601;
    end else begin
        grp_fu_230_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_230_p1 = 64'd13833121507442394399;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_230_p1 = 64'd13837625107069764895;
    end else begin
        grp_fu_230_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        result_imag_ce0_local = 1'b1;
    end else begin
        result_imag_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1318_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        result_imag_we0_local = 1'b1;
    end else begin
        result_imag_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        result_real_ce0_local = 1'b1;
    end else begin
        result_real_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1318_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        result_real_we0_local = 1'b1;
    end else begin
        result_real_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1431_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln1318_fu_318_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((grp_generic_fmod_double_s_fu_189_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1318_fu_324_p2 = (n_reg_142 + 7'd1);

assign add_ln1431_fu_300_p2 = (k_fu_106 + 7'd1);

assign and_ln871_fu_379_p2 = (or_ln871_fu_373_p2 & grp_fu_225_p2);

assign and_ln873_fu_385_p2 = (or_ln871_fu_373_p2 & grp_fu_230_p2);

assign and_ln878_fu_441_p2 = (or_ln878_fu_435_p2 & grp_fu_225_p2);

assign and_ln881_1_fu_459_p2 = (xor_ln878_fu_453_p2 & and_ln881_fu_447_p2);

assign and_ln881_fu_447_p2 = (or_ln878_fu_435_p2 & grp_fu_230_p2);

assign angle_assign_4_fu_398_p3 = ((and_ln871_fu_379_p2[0:0] == 1'b1) ? reg_246 : select_ln873_fu_391_p3);

assign angle_assign_s_fu_471_p7 = 'bx;

assign angle_assign_s_fu_471_p8 = {{and_ln878_reg_627}, {and_ln881_1_reg_640}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign bit_sel_fu_515_p3 = bitcast_ln922_fu_511_p1[64'd63];

assign bitcast_ln1440_fu_330_p1 = realSum_reg_165;

assign bitcast_ln1441_fu_335_p1 = imagSum_reg_153;

assign bitcast_ln871_fu_344_p1 = angle_assign_reg_601;

assign bitcast_ln878_fu_406_p1 = angle_assign_4_reg_616;

assign bitcast_ln922_1_fu_541_p1 = xor_ln_fu_533_p3;

assign bitcast_ln922_fu_511_p1 = reg_246;

assign empty_fu_282_p1 = signal_r;

assign grp_fu_237_p0 = trunc_ln1438_fu_306_p1;

assign grp_generic_fmod_double_s_fu_189_ap_start = grp_generic_fmod_double_s_fu_189_ap_start_reg;

assign icmp_ln1318_fu_318_p2 = ((n_reg_142 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln1431_fu_294_p2 = ((k_fu_106 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln871_1_fu_367_p2 = ((trunc_ln871_fu_357_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln871_fu_361_p2 = ((tmp_fu_347_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_429_p2 = ((trunc_ln878_fu_419_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_423_p2 = ((tmp_4_fu_409_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign negate_fu_507_p2 = (and_ln881_reg_634 | and_ln878_reg_627);

assign or_ln871_fu_373_p2 = (icmp_ln871_fu_361_p2 | icmp_ln871_1_fu_367_p2);

assign or_ln878_fu_435_p2 = (icmp_ln878_fu_423_p2 | icmp_ln878_1_fu_429_p2);

assign realPart_fu_545_p3 = ((negate_fu_507_p2[0:0] == 1'b1) ? bitcast_ln922_1_fu_541_p1 : reg_246);

assign result_imag_address0 = zext_ln1431_reg_587;

assign result_imag_ce0 = result_imag_ce0_local;

assign result_imag_d0 = bitcast_ln1441_fu_335_p1;

assign result_imag_we0 = result_imag_we0_local;

assign result_real_address0 = zext_ln1431_reg_587;

assign result_real_ce0 = result_real_ce0_local;

assign result_real_d0 = bitcast_ln1440_fu_330_p1;

assign result_real_we0 = result_real_we0_local;

assign select_ln1108_fu_492_p3 = ((and_ln881_reg_634[0:0] == 1'b1) ? reg_252 : angle_assign_4_reg_616);

assign select_ln873_fu_391_p3 = ((and_ln873_fu_385_p2[0:0] == 1'b1) ? reg_252 : angle_assign_reg_601);

assign term1_fu_498_p3 = ((and_ln878_reg_627[0:0] == 1'b1) ? reg_246 : select_ln1108_fu_492_p3);

assign tmp_4_fu_409_p4 = {{bitcast_ln878_fu_406_p1[62:52]}};

assign tmp_fu_347_p4 = {{bitcast_ln871_fu_344_p1[62:52]}};

assign trunc_ln1438_fu_306_p1 = k_fu_106[5:0];

assign trunc_ln871_fu_357_p1 = bitcast_ln871_fu_344_p1[51:0];

assign trunc_ln878_fu_419_p1 = bitcast_ln878_fu_406_p1[51:0];

assign trunc_ln922_fu_529_p1 = bitcast_ln922_fu_511_p1[62:0];

assign xor_ln878_fu_453_p2 = (1'd1 ^ and_ln878_fu_441_p2);

assign xor_ln922_fu_523_p2 = (bit_sel_fu_515_p3 ^ 1'd1);

assign xor_ln_fu_533_p3 = {{xor_ln922_fu_523_p2}, {trunc_ln922_fu_529_p1}};

assign zext_ln1431_fu_315_p1 = k_fu_106;

always @ (posedge ap_clk) begin
    zext_ln1431_reg_587[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //dFFT
