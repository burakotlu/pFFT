

================================================================
== Vitis HLS Report for 'pReduceAngle'
================================================================
* Date:           Tue Apr  8 14:32:51 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        PositFFT
* Solution:       hls (Vivado IP Flow Target)
* Product family: azynquplus
* Target device:  xazu7ev-fbvb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.140 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       25|       25|  0.250 us|  0.250 us|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        +---------------------+----------+---------+---------+-----------+-----------+-----+-----+---------+
        |                     |          |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
        |       Instance      |  Module  |   min   |   max   |    min    |    max    | min | max |   Type  |
        +---------------------+----------+---------+---------+-----------+-----------+-----+-----+---------+
        |grp_positAdd_fu_255  |positAdd  |        7|        7|  70.000 ns|  70.000 ns|    1|    1|      yes|
        |grp_positAdd_fu_275  |positAdd  |        7|        7|  70.000 ns|  70.000 ns|    1|    1|      yes|
        |grp_positAdd_fu_296  |positAdd  |        7|        7|  70.000 ns|  70.000 ns|    1|    1|      yes|
        +---------------------+----------+---------+---------+-----------+-----------+-----+-----+---------+

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 1, D = 26, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.04>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%x_mantissa_read = read i30 @_ssdm_op_Read.ap_auto.i30, i30 %x_mantissa" [posit_lib.cpp:995->posit_lib.cpp:1048]   --->   Operation 27 'read' 'x_mantissa_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%x_exponent_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_exponent" [posit_lib.cpp:995->posit_lib.cpp:1048]   --->   Operation 28 'read' 'x_exponent_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%x_regime_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %x_regime" [posit_lib.cpp:995->posit_lib.cpp:1048]   --->   Operation 29 'read' 'x_regime_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%x_sign_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_sign" [posit_lib.cpp:995->posit_lib.cpp:1048]   --->   Operation 30 'read' 'x_sign_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp = partselect i5 @_ssdm_op_PartSelect.i5.i6.i32.i32, i6 %x_regime_read, i32 1, i32 5" [posit_lib.cpp:23->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 31 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.87ns)   --->   "%icmp_ln23 = icmp_slt  i5 %tmp, i5 1" [posit_lib.cpp:23->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 32 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln23 = br i1 %icmp_ln23, void %lor.lhs.false.i.i, void %if.then.i41" [posit_lib.cpp:23->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 33 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.88ns)   --->   "%icmp_ln24 = icmp_eq  i6 %x_regime_read, i6 2" [posit_lib.cpp:24->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 34 'icmp' 'icmp_ln24' <Predicate = (!icmp_ln23)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_5)   --->   "%xor_ln25 = xor i1 %x_exponent_read, i1 1" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 35 'xor' 'xor_ln25' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (1.17ns)   --->   "%icmp_ln25 = icmp_ult  i30 %x_mantissa_read, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 36 'icmp' 'icmp_ln25' <Predicate = (!icmp_ln23)> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_5)   --->   "%and_ln25 = and i1 %icmp_ln25, i1 %xor_ln25" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 37 'and' 'and_ln25' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.33ns) (out node of the LUT)   --->   "%absXGreaterEqual_5 = and i1 %and_ln25, i1 %icmp_ln24" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 38 'and' 'absXGreaterEqual_5' <Predicate = (!icmp_ln23)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %absXGreaterEqual_5, void %if.else.i42, void %if.then.i41" [posit_lib.cpp:42->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 39 'br' 'br_ln42' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i59 @_ssdm_op_BitConcatenate.i59.i30.i29, i30 %x_mantissa_read, i29 0" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 40 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln675_1 = zext i59 %shl_ln" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 41 'zext' 'zext_ln675_1' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (5.04ns)   --->   "%mul_ln675 = mul i119 %zext_ln675_1, i119 734344906382274626" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 42 'mul' 'mul_ln675' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 5.04> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.04> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln680 = zext i119 %mul_ln675" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 43 'zext' 'zext_ln680' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_45 = bitselect i1 @_ssdm_op_BitSelect.i1.i149.i32, i149 %zext_ln680, i32 118" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 44 'bitselect' 'tmp_45' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.81>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln675 = zext i1 %x_exponent_read" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 45 'zext' 'zext_ln675' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.27ns)   --->   "%select_ln680 = select i1 %tmp_45, i6 62, i6 61" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 46 'select' 'select_ln680' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln680 = add i6 %zext_ln675, i6 %x_regime_read" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 47 'add' 'add_ln680' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 48 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%sf_r = add i6 %add_ln680, i6 %select_ln680" [posit_lib.cpp:697->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 48 'add' 'sf_r' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.88> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.88ns)   --->   "%icmp_ln703 = icmp_slt  i6 %sf_r, i6 30" [posit_lib.cpp:703->posit_lib.cpp:44->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 49 'icmp' 'icmp_ln703' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.88ns)   --->   "%add_ln800 = add i6 %sf_r, i6 2" [posit_lib.cpp:800->posit_lib.cpp:47->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 50 'add' 'add_ln800' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.44ns)   --->   "%regime_14 = select i1 %icmp_ln703, i6 %add_ln800, i6 32" [posit_lib.cpp:800->posit_lib.cpp:47->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 51 'select' 'regime_14' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.88ns)   --->   "%icmp_ln803 = icmp_sgt  i6 %regime_14, i6 29" [posit_lib.cpp:803->posit_lib.cpp:47->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 52 'icmp' 'icmp_ln803' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.88ns)   --->   "%icmp_ln804 = icmp_sgt  i6 %regime_14, i6 34" [posit_lib.cpp:804->posit_lib.cpp:47->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 53 'icmp' 'icmp_ln804' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node regime)   --->   "%select_ln804 = select i1 %icmp_ln804, i6 %regime_14, i6 34" [posit_lib.cpp:804->posit_lib.cpp:47->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 54 'select' 'select_ln804' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime = select i1 %icmp_ln803, i6 30, i6 %select_ln804" [posit_lib.cpp:820->posit_lib.cpp:47->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 55 'select' 'regime' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.84>
ST_3 : Operation 56 [8/8] (6.84ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 56 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 4 <SV = 3> <Delay = 7.14>
ST_4 : Operation 57 [7/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 57 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 5 <SV = 4> <Delay = 7.14>
ST_5 : Operation 58 [6/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 58 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 6 <SV = 5> <Delay = 7.14>
ST_6 : Operation 59 [5/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 59 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 7 <SV = 6> <Delay = 7.14>
ST_7 : Operation 60 [4/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 60 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 8 <SV = 7> <Delay = 7.14>
ST_8 : Operation 61 [3/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 61 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 9 <SV = 8> <Delay = 7.14>
ST_9 : Operation 62 [2/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 62 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_9 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_i = bitconcatenate i94 @_ssdm_op_BitConcatenate.i94.i30.i31.i1.i2.i6.i23.i1, i30 %x_mantissa_read, i31 0, i1 %x_exponent_read, i2 0, i6 %x_regime_read, i23 0, i1 %x_sign_read" [posit_lib.cpp:995->posit_lib.cpp:1048]   --->   Operation 63 'bitconcatenate' 'tmp_i' <Predicate = (absXGreaterEqual_5) | (icmp_ln23)> <Delay = 0.00>
ST_9 : Operation 64 [1/1] (0.48ns)   --->   "%br_ln42 = br void %positMod.exit" [posit_lib.cpp:42->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 64 'br' 'br_ln42' <Predicate = (absXGreaterEqual_5) | (icmp_ln23)> <Delay = 0.48>

State 10 <SV = 9> <Delay = 3.42>
ST_10 : Operation 65 [1/8] (0.54ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 0, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 0, i6 %regime, i1 0, i30 842887333" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 65 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_10 : Operation 66 [1/1] (0.00ns)   --->   "%result_isZero = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 66 'extractvalue' 'result_isZero' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_10 : Operation 67 [1/1] (0.00ns)   --->   "%result_regime = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 67 'extractvalue' 'result_regime' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_10 : Operation 68 [1/1] (0.00ns)   --->   "%result_exponent = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 68 'extractvalue' 'result_exponent' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_10 : Operation 69 [1/1] (0.00ns)   --->   "%result_mantissa = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 69 'extractvalue' 'result_mantissa' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_10 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_18_i = bitconcatenate i94 @_ssdm_op_BitConcatenate.i94.i30.i31.i1.i2.i6.i15.i1.i7.i1, i30 %result_mantissa, i31 0, i1 %result_exponent, i2 0, i6 %result_regime, i15 0, i1 %result_isZero, i7 0, i1 %x_sign_read" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 70 'bitconcatenate' 'tmp_18_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.00>
ST_10 : Operation 71 [1/1] (0.48ns)   --->   "%br_ln50 = br void %positMod.exit" [posit_lib.cpp:50->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 71 'br' 'br_ln50' <Predicate = (!icmp_ln23 & !absXGreaterEqual_5)> <Delay = 0.48>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%storemerge_in_i = phi i94 %tmp_18_i, void %if.else.i42, i94 %tmp_i, void %if.then.i41" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 72 'phi' 'storemerge_in_i' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 73 [1/1] (0.00ns)   --->   "%m_angle_sign_3 = trunc i94 %storemerge_in_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 73 'trunc' 'm_angle_sign_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%m_angle_isZero = bitselect i1 @_ssdm_op_BitSelect.i1.i94.i32, i94 %storemerge_in_i, i32 8" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 74 'bitselect' 'm_angle_isZero' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%m_angle_regime_5 = partselect i6 @_ssdm_op_PartSelect.i6.i94.i32.i32, i94 %storemerge_in_i, i32 24, i32 29" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 75 'partselect' 'm_angle_regime_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%m_angle_exponent_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i94.i32, i94 %storemerge_in_i, i32 32" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 76 'bitselect' 'm_angle_exponent_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%m_angle_mantissa = partselect i30 @_ssdm_op_PartSelect.i30.i94.i32.i32, i94 %storemerge_in_i, i32 64, i32 93" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 77 'partselect' 'm_angle_mantissa' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_48 = partselect i5 @_ssdm_op_PartSelect.i5.i94.i32.i32, i94 %storemerge_in_i, i32 25, i32 29" [posit_lib.cpp:23->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 78 'partselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.87ns)   --->   "%icmp_ln23_1 = icmp_sgt  i5 %tmp_48, i5 0" [posit_lib.cpp:23->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 79 'icmp' 'icmp_ln23_1' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 80 [1/1] (0.88ns)   --->   "%icmp_ln24_1 = icmp_eq  i6 %m_angle_regime_5, i6 1" [posit_lib.cpp:24->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 80 'icmp' 'icmp_ln24_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%and_ln24 = and i1 %icmp_ln24_1, i1 %m_angle_exponent_5" [posit_lib.cpp:24->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 81 'and' 'and_ln24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 82 [1/1] (0.33ns)   --->   "%xor_ln25_1 = xor i1 %m_angle_exponent_5, i1 1" [posit_lib.cpp:25->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 82 'xor' 'xor_ln25_1' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 83 [1/1] (1.17ns)   --->   "%icmp_ln25_1 = icmp_ugt  i30 %m_angle_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 83 'icmp' 'icmp_ln25_1' <Predicate = true> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%and_ln25_2 = and i1 %icmp_ln25_1, i1 %xor_ln25_1" [posit_lib.cpp:25->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 84 'and' 'and_ln25_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%and_ln25_3 = and i1 %and_ln25_2, i1 %icmp_ln24_1" [posit_lib.cpp:25->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 85 'and' 'and_ln25_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%or_ln24 = or i1 %icmp_ln23_1, i1 %and_ln24" [posit_lib.cpp:24->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 86 'or' 'or_ln24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 87 [1/1] (0.33ns) (out node of the LUT)   --->   "%absXGreaterEqual = or i1 %or_ln24, i1 %and_ln25_3" [posit_lib.cpp:24->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 87 'or' 'absXGreaterEqual' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i)   --->   "%xor_ln27 = xor i1 %absXGreaterEqual, i1 %m_angle_sign_3" [posit_lib.cpp:27->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 88 'xor' 'xor_ln27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i)   --->   "%not_m_angle_sign = xor i1 %m_angle_sign_3, i1 1" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 89 'xor' 'not_m_angle_sign' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 90 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i = and i1 %xor_ln27, i1 %not_m_angle_sign" [posit_lib.cpp:27->posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 90 'and' 'retval_1_i' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln999 = br i1 %retval_1_i, void %if.else.i, void %if.then.i" [posit_lib.cpp:999->posit_lib.cpp:1048]   --->   Operation 91 'br' 'br_ln999' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.88ns)   --->   "%icmp_ln23_2 = icmp_slt  i6 %m_angle_regime_5, i6 1" [posit_lib.cpp:23->posit_lib.cpp:1001->posit_lib.cpp:1048]   --->   Operation 92 'icmp' 'icmp_ln23_2' <Predicate = (!retval_1_i)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 93 [1/1] (1.17ns)   --->   "%icmp_ln25_2 = icmp_ult  i30 %m_angle_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:1001->posit_lib.cpp:1048]   --->   Operation 93 'icmp' 'icmp_ln25_2' <Predicate = (!retval_1_i)> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%and_ln25_4 = and i1 %icmp_ln25_2, i1 %xor_ln25_1" [posit_lib.cpp:25->posit_lib.cpp:1001->posit_lib.cpp:1048]   --->   Operation 94 'and' 'and_ln25_4' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%and_ln25_5 = and i1 %and_ln25_4, i1 %icmp_ln24_1" [posit_lib.cpp:25->posit_lib.cpp:1001->posit_lib.cpp:1048]   --->   Operation 95 'and' 'and_ln25_5' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%absXGreaterEqual_1 = or i1 %icmp_ln23_2, i1 %and_ln25_5" [posit_lib.cpp:23->posit_lib.cpp:1001->posit_lib.cpp:1048]   --->   Operation 96 'or' 'absXGreaterEqual_1' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%xor_ln27_1 = xor i1 %absXGreaterEqual_1, i1 1" [posit_lib.cpp:27->posit_lib.cpp:1001->posit_lib.cpp:1048]   --->   Operation 97 'xor' 'xor_ln27_1' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 98 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i9 = and i1 %m_angle_sign_3, i1 %xor_ln27_1" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:997->posit_lib.cpp:1048]   --->   Operation 98 'and' 'retval_1_i9' <Predicate = (!retval_1_i)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 99 [1/1] (0.54ns)   --->   "%br_ln1001 = br i1 %retval_1_i9, void %if.end14.i, void %if.then10.i" [posit_lib.cpp:1001->posit_lib.cpp:1048]   --->   Operation 99 'br' 'br_ln1001' <Predicate = (!retval_1_i)> <Delay = 0.54>

State 11 <SV = 10> <Delay = 6.84>
ST_11 : Operation 100 [8/8] (6.84ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 100 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core
ST_11 : Operation 101 [8/8] (6.84ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 101 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 12 <SV = 11> <Delay = 7.14>
ST_12 : Operation 102 [7/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 102 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_12 : Operation 103 [7/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 103 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 13 <SV = 12> <Delay = 7.14>
ST_13 : Operation 104 [6/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 104 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_13 : Operation 105 [6/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 105 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 14 <SV = 13> <Delay = 7.14>
ST_14 : Operation 106 [5/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 106 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_14 : Operation 107 [5/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 107 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 15 <SV = 14> <Delay = 7.14>
ST_15 : Operation 108 [4/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 108 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_15 : Operation 109 [4/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 109 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 16 <SV = 15> <Delay = 7.14>
ST_16 : Operation 110 [3/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 110 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_16 : Operation 111 [3/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 111 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 17 <SV = 16> <Delay = 7.14>
ST_17 : Operation 112 [2/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 112 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_17 : Operation 113 [2/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 113 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 18 <SV = 17> <Delay = 2.93>
ST_18 : Operation 114 [1/8] (0.54ns)   --->   "%call_ret5 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 114 'call' 'call_ret5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_18 : Operation 115 [1/1] (0.00ns)   --->   "%m_angle_sign_1 = extractvalue i39 %call_ret5" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 115 'extractvalue' 'm_angle_sign_1' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 116 [1/1] (0.00ns)   --->   "%m_angle_isZero_2 = extractvalue i39 %call_ret5" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 116 'extractvalue' 'm_angle_isZero_2' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 117 [1/1] (0.00ns)   --->   "%m_angle_regime_1 = extractvalue i39 %call_ret5" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 117 'extractvalue' 'm_angle_regime_1' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 118 [1/1] (0.00ns)   --->   "%m_angle_exponent_1 = extractvalue i39 %call_ret5" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 118 'extractvalue' 'm_angle_exponent_1' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 119 [1/1] (0.00ns)   --->   "%m_angle_mantissa_2 = extractvalue i39 %call_ret5" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 119 'extractvalue' 'm_angle_mantissa_2' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 120 [1/1] (0.54ns)   --->   "%br_ln1002 = br void %if.end14.i" [posit_lib.cpp:1002->posit_lib.cpp:1048]   --->   Operation 120 'br' 'br_ln1002' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.54>
ST_18 : Operation 121 [1/8] (0.54ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_3, i1 %m_angle_isZero, i6 %m_angle_regime_5, i1 %m_angle_exponent_5, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 121 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_18 : Operation 122 [1/1] (0.00ns)   --->   "%m_angle_sign = extractvalue i39 %call_ret" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 122 'extractvalue' 'm_angle_sign' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 123 [1/1] (0.00ns)   --->   "%m_angle_isZero_1 = extractvalue i39 %call_ret" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 123 'extractvalue' 'm_angle_isZero_1' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 124 [1/1] (0.00ns)   --->   "%m_angle_regime = extractvalue i39 %call_ret" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 124 'extractvalue' 'm_angle_regime' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 125 [1/1] (0.00ns)   --->   "%m_angle_exponent = extractvalue i39 %call_ret" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 125 'extractvalue' 'm_angle_exponent' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 126 [1/1] (0.00ns)   --->   "%m_angle_mantissa_1 = extractvalue i39 %call_ret" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 126 'extractvalue' 'm_angle_mantissa_1' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 127 [1/1] (0.54ns)   --->   "%br_ln1000 = br void %if.end14.i" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 127 'br' 'br_ln1000' <Predicate = (retval_1_i)> <Delay = 0.54>
ST_18 : Operation 128 [1/1] (0.00ns)   --->   "%x_sign_3 = phi i1 %m_angle_sign, void %if.then.i, i1 %m_angle_sign_1, void %if.then10.i, i1 %m_angle_sign_3, void %if.else.i"   --->   Operation 128 'phi' 'x_sign_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 129 [1/1] (0.00ns)   --->   "%x_regime_6 = phi i6 %m_angle_regime, void %if.then.i, i6 %m_angle_regime_1, void %if.then10.i, i6 %m_angle_regime_5, void %if.else.i"   --->   Operation 129 'phi' 'x_regime_6' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 130 [1/1] (0.00ns)   --->   "%x_exponent_4 = phi i1 %m_angle_exponent, void %if.then.i, i1 %m_angle_exponent_1, void %if.then10.i, i1 %m_angle_exponent_5, void %if.else.i"   --->   Operation 130 'phi' 'x_exponent_4' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 131 [1/1] (0.00ns)   --->   "%y_mantissa = phi i30 %m_angle_mantissa_1, void %if.then.i, i30 %m_angle_mantissa_2, void %if.then10.i, i30 %m_angle_mantissa, void %if.else.i"   --->   Operation 131 'phi' 'y_mantissa' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 132 [1/1] (0.88ns)   --->   "%icmp_ln23_3 = icmp_sgt  i6 %x_regime_6, i6 0" [posit_lib.cpp:23->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 132 'icmp' 'icmp_ln23_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 133 [1/1] (0.88ns)   --->   "%icmp_ln24_2 = icmp_eq  i6 %x_regime_6, i6 0" [posit_lib.cpp:24->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 133 'icmp' 'icmp_ln24_2' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_2)   --->   "%and_ln24_1 = and i1 %icmp_ln24_2, i1 %x_exponent_4" [posit_lib.cpp:24->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 134 'and' 'and_ln24_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 135 [1/1] (0.33ns)   --->   "%xor_ln25_2 = xor i1 %x_exponent_4, i1 1" [posit_lib.cpp:25->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 135 'xor' 'xor_ln25_2' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 136 [1/1] (1.17ns)   --->   "%icmp_ln25_3 = icmp_ugt  i30 %y_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 136 'icmp' 'icmp_ln25_3' <Predicate = true> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_2)   --->   "%and_ln25_6 = and i1 %icmp_ln25_3, i1 %xor_ln25_2" [posit_lib.cpp:25->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 137 'and' 'and_ln25_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_2)   --->   "%and_ln25_7 = and i1 %and_ln25_6, i1 %icmp_ln24_2" [posit_lib.cpp:25->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 138 'and' 'and_ln25_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_2)   --->   "%or_ln24_1 = or i1 %icmp_ln23_3, i1 %and_ln24_1" [posit_lib.cpp:24->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 139 'or' 'or_ln24_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 140 [1/1] (0.33ns) (out node of the LUT)   --->   "%absXGreaterEqual_2 = or i1 %or_ln24_1, i1 %and_ln25_7" [posit_lib.cpp:24->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 140 'or' 'absXGreaterEqual_2' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i20)   --->   "%xor_ln27_2 = xor i1 %absXGreaterEqual_2, i1 %x_sign_3" [posit_lib.cpp:27->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 141 'xor' 'xor_ln27_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i20)   --->   "%not_y_sign = xor i1 %x_sign_3, i1 1" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 142 'xor' 'not_y_sign' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 143 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i20 = and i1 %xor_ln27_2, i1 %not_y_sign" [posit_lib.cpp:27->posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 143 'and' 'retval_1_i20' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 144 [1/1] (0.00ns)   --->   "%br_ln1006 = br i1 %retval_1_i20, void %if.else22.i, void %if.then18.i" [posit_lib.cpp:1006->posit_lib.cpp:1048]   --->   Operation 144 'br' 'br_ln1006' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%tmp_49 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %x_regime_6, i32 5" [posit_lib.cpp:23->posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 145 'bitselect' 'tmp_49' <Predicate = (!retval_1_i20)> <Delay = 0.00>
ST_18 : Operation 146 [1/1] (1.17ns)   --->   "%icmp_ln25_4 = icmp_ult  i30 %y_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 146 'icmp' 'icmp_ln25_4' <Predicate = (!retval_1_i20)> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%and_ln25_8 = and i1 %icmp_ln25_4, i1 %xor_ln25_2" [posit_lib.cpp:25->posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 147 'and' 'and_ln25_8' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%and_ln25_9 = and i1 %and_ln25_8, i1 %icmp_ln24_2" [posit_lib.cpp:25->posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 148 'and' 'and_ln25_9' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%absXGreaterEqual_3 = or i1 %tmp_49, i1 %and_ln25_9" [posit_lib.cpp:23->posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 149 'or' 'absXGreaterEqual_3' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%xor_ln27_3 = xor i1 %absXGreaterEqual_3, i1 1" [posit_lib.cpp:27->posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 150 'xor' 'xor_ln27_3' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 151 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i31 = and i1 %x_sign_3, i1 %xor_ln27_3" [posit_lib.cpp:1000->posit_lib.cpp:1048]   --->   Operation 151 'and' 'retval_1_i31' <Predicate = (!retval_1_i20)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.84>
ST_19 : Operation 152 [1/1] (0.00ns)   --->   "%y_isZero = phi i1 %m_angle_isZero_1, void %if.then.i, i1 %m_angle_isZero_2, void %if.then10.i, i1 %m_angle_isZero, void %if.else.i"   --->   Operation 152 'phi' 'y_isZero' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 153 [1/1] (0.54ns)   --->   "%br_ln1009 = br i1 %retval_1_i31, void %_Z12pReduceAngle5POSITRb.1260.exit, void %if.then26.i" [posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 153 'br' 'br_ln1009' <Predicate = (!retval_1_i20)> <Delay = 0.54>
ST_19 : Operation 154 [8/8] (6.84ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 154 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core
ST_19 : Operation 155 [8/8] (6.84ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 155 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 20 <SV = 19> <Delay = 7.14>
ST_20 : Operation 156 [7/8] (7.14ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 156 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_20 : Operation 157 [7/8] (7.14ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 157 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 21 <SV = 20> <Delay = 7.14>
ST_21 : Operation 158 [6/8] (7.14ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 158 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_21 : Operation 159 [6/8] (7.14ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 159 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 22 <SV = 21> <Delay = 7.14>
ST_22 : Operation 160 [5/8] (7.14ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 160 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_22 : Operation 161 [5/8] (7.14ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 161 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 23 <SV = 22> <Delay = 7.14>
ST_23 : Operation 162 [4/8] (7.14ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 162 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_23 : Operation 163 [4/8] (7.14ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 163 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 24 <SV = 23> <Delay = 7.14>
ST_24 : Operation 164 [3/8] (7.14ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 164 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_24 : Operation 165 [3/8] (7.14ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 165 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 25 <SV = 24> <Delay = 7.14>
ST_25 : Operation 166 [2/8] (7.14ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 166 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_25 : Operation 167 [2/8] (7.14ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 167 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 26 <SV = 25> <Delay = 1.09>
ST_26 : Operation 168 [1/8] (0.54ns)   --->   "%call_ret7 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 168 'call' 'call_ret7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_26 : Operation 169 [1/1] (0.00ns)   --->   "%m_angle_isZero_4 = extractvalue i39 %call_ret7" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 169 'extractvalue' 'm_angle_isZero_4' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 170 [1/1] (0.00ns)   --->   "%m_angle_regime_3 = extractvalue i39 %call_ret7" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 170 'extractvalue' 'm_angle_regime_3' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 171 [1/1] (0.00ns)   --->   "%m_angle_exponent_3 = extractvalue i39 %call_ret7" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 171 'extractvalue' 'm_angle_exponent_3' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 172 [1/1] (0.00ns)   --->   "%m_angle_mantissa_4 = extractvalue i39 %call_ret7" [posit_lib.cpp:1010->posit_lib.cpp:1048]   --->   Operation 172 'extractvalue' 'm_angle_mantissa_4' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 173 [1/1] (0.54ns)   --->   "%br_ln1013 = br void %_Z12pReduceAngle5POSITRb.1260.exit" [posit_lib.cpp:1013->posit_lib.cpp:1048]   --->   Operation 173 'br' 'br_ln1013' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.54>
ST_26 : Operation 174 [1/8] (0.54ns)   --->   "%call_ret6 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_6, i1 %x_exponent_4, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 174 'call' 'call_ret6' <Predicate = (retval_1_i20)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_26 : Operation 175 [1/1] (0.00ns)   --->   "%result_isZero_5 = extractvalue i39 %call_ret6" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 175 'extractvalue' 'result_isZero_5' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 176 [1/1] (0.00ns)   --->   "%result_regime_14 = extractvalue i39 %call_ret6" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 176 'extractvalue' 'result_regime_14' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 177 [1/1] (0.00ns)   --->   "%result_exponent_1 = extractvalue i39 %call_ret6" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 177 'extractvalue' 'result_exponent_1' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 178 [1/1] (0.00ns)   --->   "%result_mantissa_7 = extractvalue i39 %call_ret6" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 178 'extractvalue' 'result_mantissa_7' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 179 [1/1] (0.54ns)   --->   "%br_ln1009 = br void %_Z12pReduceAngle5POSITRb.1260.exit" [posit_lib.cpp:1009->posit_lib.cpp:1048]   --->   Operation 179 'br' 'br_ln1009' <Predicate = (retval_1_i20)> <Delay = 0.54>
ST_26 : Operation 180 [1/1] (0.00ns)   --->   "%ref_tmp_1440_2 = phi i1 %result_isZero_5, void %if.then18.i, i1 %m_angle_isZero_4, void %if.then26.i, i1 %y_isZero, void %if.else22.i"   --->   Operation 180 'phi' 'ref_tmp_1440_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 181 [1/1] (0.00ns)   --->   "%ref_tmp_3_2 = phi i6 %result_regime_14, void %if.then18.i, i6 %m_angle_regime_3, void %if.then26.i, i6 %x_regime_6, void %if.else22.i"   --->   Operation 181 'phi' 'ref_tmp_3_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 182 [1/1] (0.00ns)   --->   "%ref_tmp_4_2 = phi i1 %result_exponent_1, void %if.then18.i, i1 %m_angle_exponent_3, void %if.then26.i, i1 %x_exponent_4, void %if.else22.i"   --->   Operation 182 'phi' 'ref_tmp_4_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 183 [1/1] (0.00ns)   --->   "%ref_tmp_5_2 = phi i30 %result_mantissa_7, void %if.then18.i, i30 %m_angle_mantissa_4, void %if.then26.i, i30 %y_mantissa, void %if.else22.i"   --->   Operation 183 'phi' 'ref_tmp_5_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 184 [1/1] (0.00ns)   --->   "%negate_write_assign = phi i1 1, void %if.then18.i, i1 1, void %if.then26.i, i1 0, void %if.else22.i"   --->   Operation 184 'phi' 'negate_write_assign' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 185 [1/1] (0.00ns)   --->   "%newret1 = insertvalue i39 <undef>, i1 %ref_tmp_1440_2" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 185 'insertvalue' 'newret1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 186 [1/1] (0.00ns)   --->   "%newret3 = insertvalue i39 %newret1, i6 %ref_tmp_3_2" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 186 'insertvalue' 'newret3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 187 [1/1] (0.00ns)   --->   "%newret5 = insertvalue i39 %newret3, i1 %ref_tmp_4_2" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 187 'insertvalue' 'newret5' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 188 [1/1] (0.00ns)   --->   "%newret7 = insertvalue i39 %newret5, i30 %ref_tmp_5_2" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 188 'insertvalue' 'newret7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 189 [1/1] (0.00ns)   --->   "%newret9 = insertvalue i39 %newret7, i1 %negate_write_assign" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 189 'insertvalue' 'newret9' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 190 [1/1] (0.00ns)   --->   "%ret_ln852 = ret i39 %newret9" [posit_lib.cpp:852->posit_lib.cpp:1007->posit_lib.cpp:1048]   --->   Operation 190 'ret' 'ret_ln852' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ x_sign]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ x_regime]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ x_exponent]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ x_mantissa]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
x_mantissa_read     (read          ) [ 011111111100000000000000000]
x_exponent_read     (read          ) [ 011111111100000000000000000]
x_regime_read       (read          ) [ 011111111100000000000000000]
x_sign_read         (read          ) [ 011111111110000000000000000]
tmp                 (partselect    ) [ 000000000000000000000000000]
icmp_ln23           (icmp          ) [ 011111111110000000000000000]
br_ln23             (br            ) [ 000000000000000000000000000]
icmp_ln24           (icmp          ) [ 000000000000000000000000000]
xor_ln25            (xor           ) [ 000000000000000000000000000]
icmp_ln25           (icmp          ) [ 000000000000000000000000000]
and_ln25            (and           ) [ 000000000000000000000000000]
absXGreaterEqual_5  (and           ) [ 011111111110000000000000000]
br_ln42             (br            ) [ 000000000000000000000000000]
shl_ln              (bitconcatenate) [ 000000000000000000000000000]
zext_ln675_1        (zext          ) [ 000000000000000000000000000]
mul_ln675           (mul           ) [ 000000000000000000000000000]
zext_ln680          (zext          ) [ 000000000000000000000000000]
tmp_45              (bitselect     ) [ 011000000000000000000000000]
zext_ln675          (zext          ) [ 000000000000000000000000000]
select_ln680        (select        ) [ 000000000000000000000000000]
add_ln680           (add           ) [ 000000000000000000000000000]
sf_r                (add           ) [ 000000000000000000000000000]
icmp_ln703          (icmp          ) [ 000000000000000000000000000]
add_ln800           (add           ) [ 000000000000000000000000000]
regime_14           (select        ) [ 000000000000000000000000000]
icmp_ln803          (icmp          ) [ 000000000000000000000000000]
icmp_ln804          (icmp          ) [ 000000000000000000000000000]
select_ln804        (select        ) [ 000000000000000000000000000]
regime              (select        ) [ 010100000000000000000000000]
tmp_i               (bitconcatenate) [ 010000000110000000000000000]
br_ln42             (br            ) [ 010000000110000000000000000]
call_ret_i          (call          ) [ 000000000000000000000000000]
result_isZero       (extractvalue  ) [ 000000000000000000000000000]
result_regime       (extractvalue  ) [ 000000000000000000000000000]
result_exponent     (extractvalue  ) [ 000000000000000000000000000]
result_mantissa     (extractvalue  ) [ 000000000000000000000000000]
tmp_18_i            (bitconcatenate) [ 000000000000000000000000000]
br_ln50             (br            ) [ 000000000000000000000000000]
storemerge_in_i     (phi           ) [ 010000000010000000000000000]
m_angle_sign_3      (trunc         ) [ 010000000011111111100000000]
m_angle_isZero      (bitselect     ) [ 010000000011111111110000000]
m_angle_regime_5    (partselect    ) [ 010000000011111111100000000]
m_angle_exponent_5  (bitselect     ) [ 010000000011111111100000000]
m_angle_mantissa    (partselect    ) [ 010000000011111111100000000]
tmp_48              (partselect    ) [ 000000000000000000000000000]
icmp_ln23_1         (icmp          ) [ 000000000000000000000000000]
icmp_ln24_1         (icmp          ) [ 000000000000000000000000000]
and_ln24            (and           ) [ 000000000000000000000000000]
xor_ln25_1          (xor           ) [ 000000000000000000000000000]
icmp_ln25_1         (icmp          ) [ 000000000000000000000000000]
and_ln25_2          (and           ) [ 000000000000000000000000000]
and_ln25_3          (and           ) [ 000000000000000000000000000]
or_ln24             (or            ) [ 000000000000000000000000000]
absXGreaterEqual    (or            ) [ 000000000000000000000000000]
xor_ln27            (xor           ) [ 000000000000000000000000000]
not_m_angle_sign    (xor           ) [ 000000000000000000000000000]
retval_1_i          (and           ) [ 010000000011111111100000000]
br_ln999            (br            ) [ 000000000000000000000000000]
icmp_ln23_2         (icmp          ) [ 000000000000000000000000000]
icmp_ln25_2         (icmp          ) [ 000000000000000000000000000]
and_ln25_4          (and           ) [ 000000000000000000000000000]
and_ln25_5          (and           ) [ 000000000000000000000000000]
absXGreaterEqual_1  (or            ) [ 000000000000000000000000000]
xor_ln27_1          (xor           ) [ 000000000000000000000000000]
retval_1_i9         (and           ) [ 010000000001111111100000000]
br_ln1001           (br            ) [ 010000000011111111110000000]
call_ret5           (call          ) [ 000000000000000000000000000]
m_angle_sign_1      (extractvalue  ) [ 000000000000000000000000000]
m_angle_isZero_2    (extractvalue  ) [ 010000000010000000110000000]
m_angle_regime_1    (extractvalue  ) [ 000000000000000000000000000]
m_angle_exponent_1  (extractvalue  ) [ 000000000000000000000000000]
m_angle_mantissa_2  (extractvalue  ) [ 000000000000000000000000000]
br_ln1002           (br            ) [ 010000000010000000110000000]
call_ret            (call          ) [ 000000000000000000000000000]
m_angle_sign        (extractvalue  ) [ 000000000000000000000000000]
m_angle_isZero_1    (extractvalue  ) [ 010000000010000000110000000]
m_angle_regime      (extractvalue  ) [ 000000000000000000000000000]
m_angle_exponent    (extractvalue  ) [ 000000000000000000000000000]
m_angle_mantissa_1  (extractvalue  ) [ 000000000000000000000000000]
br_ln1000           (br            ) [ 010000000010000000110000000]
x_sign_3            (phi           ) [ 010000000001111111100000000]
x_regime_6          (phi           ) [ 010000000001111111111111111]
x_exponent_4        (phi           ) [ 010000000001111111111111111]
y_mantissa          (phi           ) [ 010000000001111111111111111]
icmp_ln23_3         (icmp          ) [ 000000000000000000000000000]
icmp_ln24_2         (icmp          ) [ 000000000000000000000000000]
and_ln24_1          (and           ) [ 000000000000000000000000000]
xor_ln25_2          (xor           ) [ 000000000000000000000000000]
icmp_ln25_3         (icmp          ) [ 000000000000000000000000000]
and_ln25_6          (and           ) [ 000000000000000000000000000]
and_ln25_7          (and           ) [ 000000000000000000000000000]
or_ln24_1           (or            ) [ 000000000000000000000000000]
absXGreaterEqual_2  (or            ) [ 000000000000000000000000000]
xor_ln27_2          (xor           ) [ 000000000000000000000000000]
not_y_sign          (xor           ) [ 000000000000000000000000000]
retval_1_i20        (and           ) [ 010000000000000000111111111]
br_ln1006           (br            ) [ 000000000000000000000000000]
tmp_49              (bitselect     ) [ 000000000000000000000000000]
icmp_ln25_4         (icmp          ) [ 000000000000000000000000000]
and_ln25_8          (and           ) [ 000000000000000000000000000]
and_ln25_9          (and           ) [ 000000000000000000000000000]
absXGreaterEqual_3  (or            ) [ 000000000000000000000000000]
xor_ln27_3          (xor           ) [ 000000000000000000000000000]
retval_1_i31        (and           ) [ 010000000000000000011111111]
y_isZero            (phi           ) [ 010000000000000000011111111]
br_ln1009           (br            ) [ 010000000000000000011111111]
call_ret7           (call          ) [ 000000000000000000000000000]
m_angle_isZero_4    (extractvalue  ) [ 000000000000000000000000000]
m_angle_regime_3    (extractvalue  ) [ 000000000000000000000000000]
m_angle_exponent_3  (extractvalue  ) [ 000000000000000000000000000]
m_angle_mantissa_4  (extractvalue  ) [ 000000000000000000000000000]
br_ln1013           (br            ) [ 000000000000000000000000000]
call_ret6           (call          ) [ 000000000000000000000000000]
result_isZero_5     (extractvalue  ) [ 000000000000000000000000000]
result_regime_14    (extractvalue  ) [ 000000000000000000000000000]
result_exponent_1   (extractvalue  ) [ 000000000000000000000000000]
result_mantissa_7   (extractvalue  ) [ 000000000000000000000000000]
br_ln1009           (br            ) [ 000000000000000000000000000]
ref_tmp_1440_2      (phi           ) [ 010000000000000000001111111]
ref_tmp_3_2         (phi           ) [ 010000000000000000001111111]
ref_tmp_4_2         (phi           ) [ 010000000000000000001111111]
ref_tmp_5_2         (phi           ) [ 010000000000000000001111111]
negate_write_assign (phi           ) [ 010000000000000000001111111]
newret1             (insertvalue   ) [ 000000000000000000000000000]
newret3             (insertvalue   ) [ 000000000000000000000000000]
newret5             (insertvalue   ) [ 000000000000000000000000000]
newret7             (insertvalue   ) [ 000000000000000000000000000]
newret9             (insertvalue   ) [ 000000000000000000000000000]
ret_ln852           (ret           ) [ 000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="x_sign">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_sign"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="x_regime">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_regime"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="x_exponent">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_exponent"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="x_mantissa">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_mantissa"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i30"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i6"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i5.i6.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i59.i30.i29"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i149.i32"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="positAdd"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i94.i30.i31.i1.i2.i6.i23.i1"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i94.i30.i31.i1.i2.i6.i15.i1.i7.i1"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i94.i32"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i6.i94.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i30.i94.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i5.i94.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="96" class="1001" name="const_96">
<pin_list>
<pin id="97" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i6.i32"/></StgValue>
</bind>
</comp>

<comp id="98" class="1001" name="const_98">
<pin_list>
<pin id="99" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="100" class="1004" name="x_mantissa_read_read_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="30" slack="0"/>
<pin id="102" dir="0" index="1" bw="30" slack="0"/>
<pin id="103" dir="1" index="2" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_mantissa_read/1 "/>
</bind>
</comp>

<comp id="106" class="1004" name="x_exponent_read_read_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="1" slack="0"/>
<pin id="108" dir="0" index="1" bw="1" slack="0"/>
<pin id="109" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_exponent_read/1 "/>
</bind>
</comp>

<comp id="112" class="1004" name="x_regime_read_read_fu_112">
<pin_list>
<pin id="113" dir="0" index="0" bw="6" slack="0"/>
<pin id="114" dir="0" index="1" bw="6" slack="0"/>
<pin id="115" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_regime_read/1 "/>
</bind>
</comp>

<comp id="118" class="1004" name="x_sign_read_read_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="1" slack="0"/>
<pin id="120" dir="0" index="1" bw="1" slack="0"/>
<pin id="121" dir="1" index="2" bw="1" slack="8"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_sign_read/1 "/>
</bind>
</comp>

<comp id="124" class="1005" name="storemerge_in_i_reg_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="94" slack="2147483647"/>
<pin id="126" dir="1" index="1" bw="94" slack="2147483647"/>
</pin_list>
<bind>
<opset="storemerge_in_i (phireg) "/>
</bind>
</comp>

<comp id="127" class="1004" name="storemerge_in_i_phi_fu_127">
<pin_list>
<pin id="128" dir="0" index="0" bw="94" slack="0"/>
<pin id="129" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="130" dir="0" index="2" bw="94" slack="1"/>
<pin id="131" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="132" dir="1" index="4" bw="94" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="storemerge_in_i/10 "/>
</bind>
</comp>

<comp id="133" class="1005" name="x_sign_3_reg_133">
<pin_list>
<pin id="134" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="135" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="x_sign_3 (phireg) "/>
</bind>
</comp>

<comp id="136" class="1004" name="x_sign_3_phi_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="1" slack="0"/>
<pin id="138" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="139" dir="0" index="2" bw="1" slack="0"/>
<pin id="140" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="141" dir="0" index="4" bw="1" slack="8"/>
<pin id="142" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="143" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="x_sign_3/18 "/>
</bind>
</comp>

<comp id="144" class="1005" name="x_regime_6_reg_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="6" slack="1"/>
<pin id="146" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="x_regime_6 (phireg) "/>
</bind>
</comp>

<comp id="147" class="1004" name="x_regime_6_phi_fu_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="6" slack="0"/>
<pin id="149" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="150" dir="0" index="2" bw="6" slack="0"/>
<pin id="151" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="152" dir="0" index="4" bw="6" slack="8"/>
<pin id="153" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="154" dir="1" index="6" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="x_regime_6/18 "/>
</bind>
</comp>

<comp id="156" class="1005" name="x_exponent_4_reg_156">
<pin_list>
<pin id="157" dir="0" index="0" bw="1" slack="1"/>
<pin id="158" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="x_exponent_4 (phireg) "/>
</bind>
</comp>

<comp id="159" class="1004" name="x_exponent_4_phi_fu_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="1" slack="0"/>
<pin id="161" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="162" dir="0" index="2" bw="1" slack="0"/>
<pin id="163" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="164" dir="0" index="4" bw="1" slack="8"/>
<pin id="165" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="166" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="x_exponent_4/18 "/>
</bind>
</comp>

<comp id="168" class="1005" name="y_mantissa_reg_168">
<pin_list>
<pin id="169" dir="0" index="0" bw="30" slack="1"/>
<pin id="170" dir="1" index="1" bw="30" slack="1"/>
</pin_list>
<bind>
<opset="y_mantissa (phireg) "/>
</bind>
</comp>

<comp id="171" class="1004" name="y_mantissa_phi_fu_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="30" slack="0"/>
<pin id="173" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="174" dir="0" index="2" bw="30" slack="0"/>
<pin id="175" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="176" dir="0" index="4" bw="30" slack="8"/>
<pin id="177" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="178" dir="1" index="6" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="y_mantissa/18 "/>
</bind>
</comp>

<comp id="180" class="1005" name="y_isZero_reg_180">
<pin_list>
<pin id="181" dir="0" index="0" bw="1" slack="1"/>
<pin id="182" dir="1" index="1" bw="1" slack="7"/>
</pin_list>
<bind>
<opset="y_isZero (phireg) "/>
</bind>
</comp>

<comp id="183" class="1004" name="y_isZero_phi_fu_183">
<pin_list>
<pin id="184" dir="0" index="0" bw="1" slack="1"/>
<pin id="185" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="186" dir="0" index="2" bw="1" slack="1"/>
<pin id="187" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="188" dir="0" index="4" bw="1" slack="9"/>
<pin id="189" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="190" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="y_isZero/19 "/>
</bind>
</comp>

<comp id="192" class="1005" name="ref_tmp_1440_2_reg_192">
<pin_list>
<pin id="193" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="194" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_1440_2 (phireg) "/>
</bind>
</comp>

<comp id="195" class="1004" name="ref_tmp_1440_2_phi_fu_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="1" slack="0"/>
<pin id="197" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="198" dir="0" index="2" bw="1" slack="0"/>
<pin id="199" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="200" dir="0" index="4" bw="1" slack="7"/>
<pin id="201" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="202" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_1440_2/26 "/>
</bind>
</comp>

<comp id="204" class="1005" name="ref_tmp_3_2_reg_204">
<pin_list>
<pin id="205" dir="0" index="0" bw="6" slack="2147483647"/>
<pin id="206" dir="1" index="1" bw="6" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_3_2 (phireg) "/>
</bind>
</comp>

<comp id="207" class="1004" name="ref_tmp_3_2_phi_fu_207">
<pin_list>
<pin id="208" dir="0" index="0" bw="6" slack="0"/>
<pin id="209" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="210" dir="0" index="2" bw="6" slack="0"/>
<pin id="211" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="212" dir="0" index="4" bw="6" slack="8"/>
<pin id="213" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="214" dir="1" index="6" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_3_2/26 "/>
</bind>
</comp>

<comp id="216" class="1005" name="ref_tmp_4_2_reg_216">
<pin_list>
<pin id="217" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="218" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_4_2 (phireg) "/>
</bind>
</comp>

<comp id="219" class="1004" name="ref_tmp_4_2_phi_fu_219">
<pin_list>
<pin id="220" dir="0" index="0" bw="1" slack="0"/>
<pin id="221" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="222" dir="0" index="2" bw="1" slack="0"/>
<pin id="223" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="224" dir="0" index="4" bw="1" slack="8"/>
<pin id="225" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="226" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_4_2/26 "/>
</bind>
</comp>

<comp id="228" class="1005" name="ref_tmp_5_2_reg_228">
<pin_list>
<pin id="229" dir="0" index="0" bw="30" slack="2147483647"/>
<pin id="230" dir="1" index="1" bw="30" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_5_2 (phireg) "/>
</bind>
</comp>

<comp id="231" class="1004" name="ref_tmp_5_2_phi_fu_231">
<pin_list>
<pin id="232" dir="0" index="0" bw="30" slack="0"/>
<pin id="233" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="234" dir="0" index="2" bw="30" slack="0"/>
<pin id="235" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="236" dir="0" index="4" bw="30" slack="8"/>
<pin id="237" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="238" dir="1" index="6" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_5_2/26 "/>
</bind>
</comp>

<comp id="240" class="1005" name="negate_write_assign_reg_240">
<pin_list>
<pin id="241" dir="0" index="0" bw="1" slack="7"/>
<pin id="242" dir="1" index="1" bw="1" slack="7"/>
</pin_list>
<bind>
<opset="negate_write_assign (phireg) "/>
</bind>
</comp>

<comp id="244" class="1004" name="negate_write_assign_phi_fu_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="1" slack="0"/>
<pin id="246" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="247" dir="0" index="2" bw="1" slack="0"/>
<pin id="248" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="249" dir="0" index="4" bw="1" slack="7"/>
<pin id="250" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="251" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="negate_write_assign/26 "/>
</bind>
</comp>

<comp id="255" class="1004" name="grp_positAdd_fu_255">
<pin_list>
<pin id="256" dir="0" index="0" bw="39" slack="0"/>
<pin id="257" dir="0" index="1" bw="1" slack="0"/>
<pin id="258" dir="0" index="2" bw="1" slack="0"/>
<pin id="259" dir="0" index="3" bw="6" slack="2"/>
<pin id="260" dir="0" index="4" bw="1" slack="2"/>
<pin id="261" dir="0" index="5" bw="30" slack="2"/>
<pin id="262" dir="0" index="6" bw="1" slack="0"/>
<pin id="263" dir="0" index="7" bw="1" slack="0"/>
<pin id="264" dir="0" index="8" bw="6" slack="1"/>
<pin id="265" dir="0" index="9" bw="1" slack="0"/>
<pin id="266" dir="0" index="10" bw="29" slack="0"/>
<pin id="267" dir="1" index="11" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret_i/3 "/>
</bind>
</comp>

<comp id="275" class="1004" name="grp_positAdd_fu_275">
<pin_list>
<pin id="276" dir="0" index="0" bw="39" slack="0"/>
<pin id="277" dir="0" index="1" bw="1" slack="0"/>
<pin id="278" dir="0" index="2" bw="1" slack="1"/>
<pin id="279" dir="0" index="3" bw="6" slack="1"/>
<pin id="280" dir="0" index="4" bw="1" slack="1"/>
<pin id="281" dir="0" index="5" bw="30" slack="1"/>
<pin id="282" dir="0" index="6" bw="1" slack="0"/>
<pin id="283" dir="0" index="7" bw="1" slack="0"/>
<pin id="284" dir="0" index="8" bw="3" slack="0"/>
<pin id="285" dir="0" index="9" bw="1" slack="0"/>
<pin id="286" dir="0" index="10" bw="29" slack="0"/>
<pin id="287" dir="1" index="11" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret5/11 call_ret/11 "/>
</bind>
</comp>

<comp id="296" class="1004" name="grp_positAdd_fu_296">
<pin_list>
<pin id="297" dir="0" index="0" bw="39" slack="0"/>
<pin id="298" dir="0" index="1" bw="1" slack="0"/>
<pin id="299" dir="0" index="2" bw="1" slack="0"/>
<pin id="300" dir="0" index="3" bw="6" slack="0"/>
<pin id="301" dir="0" index="4" bw="1" slack="0"/>
<pin id="302" dir="0" index="5" bw="30" slack="0"/>
<pin id="303" dir="0" index="6" bw="1" slack="0"/>
<pin id="304" dir="0" index="7" bw="1" slack="0"/>
<pin id="305" dir="0" index="8" bw="6" slack="0"/>
<pin id="306" dir="0" index="9" bw="1" slack="0"/>
<pin id="307" dir="0" index="10" bw="30" slack="0"/>
<pin id="308" dir="1" index="11" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret7/19 call_ret6/19 "/>
</bind>
</comp>

<comp id="330" class="1004" name="mul_ln675_fu_330">
<pin_list>
<pin id="331" dir="0" index="0" bw="59" slack="0"/>
<pin id="332" dir="0" index="1" bw="61" slack="0"/>
<pin id="333" dir="1" index="2" bw="119" slack="0"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="mul_ln675/1 "/>
</bind>
</comp>

<comp id="335" class="1004" name="grp_fu_335">
<pin_list>
<pin id="336" dir="0" index="0" bw="39" slack="0"/>
<pin id="337" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_sign_1/18 m_angle_sign/18 "/>
</bind>
</comp>

<comp id="341" class="1004" name="grp_fu_341">
<pin_list>
<pin id="342" dir="0" index="0" bw="39" slack="0"/>
<pin id="343" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_isZero_2/18 m_angle_isZero_1/18 "/>
</bind>
</comp>

<comp id="345" class="1004" name="grp_fu_345">
<pin_list>
<pin id="346" dir="0" index="0" bw="39" slack="0"/>
<pin id="347" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_regime_1/18 m_angle_regime/18 "/>
</bind>
</comp>

<comp id="351" class="1004" name="grp_fu_351">
<pin_list>
<pin id="352" dir="0" index="0" bw="39" slack="0"/>
<pin id="353" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_exponent_1/18 m_angle_exponent/18 "/>
</bind>
</comp>

<comp id="357" class="1004" name="grp_fu_357">
<pin_list>
<pin id="358" dir="0" index="0" bw="39" slack="0"/>
<pin id="359" dir="1" index="1" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_mantissa_2/18 m_angle_mantissa_1/18 "/>
</bind>
</comp>

<comp id="363" class="1004" name="grp_fu_363">
<pin_list>
<pin id="364" dir="0" index="0" bw="39" slack="0"/>
<pin id="365" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_isZero_4/26 result_isZero_5/26 "/>
</bind>
</comp>

<comp id="369" class="1004" name="grp_fu_369">
<pin_list>
<pin id="370" dir="0" index="0" bw="39" slack="0"/>
<pin id="371" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_regime_3/26 result_regime_14/26 "/>
</bind>
</comp>

<comp id="375" class="1004" name="grp_fu_375">
<pin_list>
<pin id="376" dir="0" index="0" bw="39" slack="0"/>
<pin id="377" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_exponent_3/26 result_exponent_1/26 "/>
</bind>
</comp>

<comp id="381" class="1004" name="grp_fu_381">
<pin_list>
<pin id="382" dir="0" index="0" bw="39" slack="0"/>
<pin id="383" dir="1" index="1" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_mantissa_4/26 result_mantissa_7/26 "/>
</bind>
</comp>

<comp id="387" class="1004" name="tmp_fu_387">
<pin_list>
<pin id="388" dir="0" index="0" bw="5" slack="0"/>
<pin id="389" dir="0" index="1" bw="6" slack="0"/>
<pin id="390" dir="0" index="2" bw="1" slack="0"/>
<pin id="391" dir="0" index="3" bw="4" slack="0"/>
<pin id="392" dir="1" index="4" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="397" class="1004" name="icmp_ln23_fu_397">
<pin_list>
<pin id="398" dir="0" index="0" bw="5" slack="0"/>
<pin id="399" dir="0" index="1" bw="1" slack="0"/>
<pin id="400" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23/1 "/>
</bind>
</comp>

<comp id="403" class="1004" name="icmp_ln24_fu_403">
<pin_list>
<pin id="404" dir="0" index="0" bw="6" slack="0"/>
<pin id="405" dir="0" index="1" bw="3" slack="0"/>
<pin id="406" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln24/1 "/>
</bind>
</comp>

<comp id="409" class="1004" name="xor_ln25_fu_409">
<pin_list>
<pin id="410" dir="0" index="0" bw="1" slack="0"/>
<pin id="411" dir="0" index="1" bw="1" slack="0"/>
<pin id="412" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln25/1 "/>
</bind>
</comp>

<comp id="415" class="1004" name="icmp_ln25_fu_415">
<pin_list>
<pin id="416" dir="0" index="0" bw="30" slack="0"/>
<pin id="417" dir="0" index="1" bw="29" slack="0"/>
<pin id="418" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25/1 "/>
</bind>
</comp>

<comp id="421" class="1004" name="and_ln25_fu_421">
<pin_list>
<pin id="422" dir="0" index="0" bw="1" slack="0"/>
<pin id="423" dir="0" index="1" bw="1" slack="0"/>
<pin id="424" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25/1 "/>
</bind>
</comp>

<comp id="427" class="1004" name="absXGreaterEqual_5_fu_427">
<pin_list>
<pin id="428" dir="0" index="0" bw="1" slack="0"/>
<pin id="429" dir="0" index="1" bw="1" slack="0"/>
<pin id="430" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="absXGreaterEqual_5/1 "/>
</bind>
</comp>

<comp id="433" class="1004" name="shl_ln_fu_433">
<pin_list>
<pin id="434" dir="0" index="0" bw="59" slack="0"/>
<pin id="435" dir="0" index="1" bw="30" slack="0"/>
<pin id="436" dir="0" index="2" bw="1" slack="0"/>
<pin id="437" dir="1" index="3" bw="59" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="shl_ln/1 "/>
</bind>
</comp>

<comp id="441" class="1004" name="zext_ln675_1_fu_441">
<pin_list>
<pin id="442" dir="0" index="0" bw="59" slack="0"/>
<pin id="443" dir="1" index="1" bw="119" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln675_1/1 "/>
</bind>
</comp>

<comp id="446" class="1004" name="zext_ln680_fu_446">
<pin_list>
<pin id="447" dir="0" index="0" bw="119" slack="0"/>
<pin id="448" dir="1" index="1" bw="149" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln680/1 "/>
</bind>
</comp>

<comp id="450" class="1004" name="tmp_45_fu_450">
<pin_list>
<pin id="451" dir="0" index="0" bw="1" slack="0"/>
<pin id="452" dir="0" index="1" bw="119" slack="0"/>
<pin id="453" dir="0" index="2" bw="8" slack="0"/>
<pin id="454" dir="1" index="3" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_45/1 "/>
</bind>
</comp>

<comp id="458" class="1004" name="zext_ln675_fu_458">
<pin_list>
<pin id="459" dir="0" index="0" bw="1" slack="1"/>
<pin id="460" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln675/2 "/>
</bind>
</comp>

<comp id="461" class="1004" name="select_ln680_fu_461">
<pin_list>
<pin id="462" dir="0" index="0" bw="1" slack="1"/>
<pin id="463" dir="0" index="1" bw="2" slack="0"/>
<pin id="464" dir="0" index="2" bw="3" slack="0"/>
<pin id="465" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln680/2 "/>
</bind>
</comp>

<comp id="468" class="1004" name="add_ln680_fu_468">
<pin_list>
<pin id="469" dir="0" index="0" bw="1" slack="0"/>
<pin id="470" dir="0" index="1" bw="6" slack="1"/>
<pin id="471" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln680/2 "/>
</bind>
</comp>

<comp id="473" class="1004" name="sf_r_fu_473">
<pin_list>
<pin id="474" dir="0" index="0" bw="6" slack="0"/>
<pin id="475" dir="0" index="1" bw="3" slack="0"/>
<pin id="476" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="sf_r/2 "/>
</bind>
</comp>

<comp id="479" class="1004" name="icmp_ln703_fu_479">
<pin_list>
<pin id="480" dir="0" index="0" bw="6" slack="0"/>
<pin id="481" dir="0" index="1" bw="6" slack="0"/>
<pin id="482" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln703/2 "/>
</bind>
</comp>

<comp id="485" class="1004" name="add_ln800_fu_485">
<pin_list>
<pin id="486" dir="0" index="0" bw="6" slack="0"/>
<pin id="487" dir="0" index="1" bw="3" slack="0"/>
<pin id="488" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln800/2 "/>
</bind>
</comp>

<comp id="491" class="1004" name="regime_14_fu_491">
<pin_list>
<pin id="492" dir="0" index="0" bw="1" slack="0"/>
<pin id="493" dir="0" index="1" bw="6" slack="0"/>
<pin id="494" dir="0" index="2" bw="6" slack="0"/>
<pin id="495" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="regime_14/2 "/>
</bind>
</comp>

<comp id="499" class="1004" name="icmp_ln803_fu_499">
<pin_list>
<pin id="500" dir="0" index="0" bw="6" slack="0"/>
<pin id="501" dir="0" index="1" bw="6" slack="0"/>
<pin id="502" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln803/2 "/>
</bind>
</comp>

<comp id="505" class="1004" name="icmp_ln804_fu_505">
<pin_list>
<pin id="506" dir="0" index="0" bw="6" slack="0"/>
<pin id="507" dir="0" index="1" bw="6" slack="0"/>
<pin id="508" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln804/2 "/>
</bind>
</comp>

<comp id="511" class="1004" name="select_ln804_fu_511">
<pin_list>
<pin id="512" dir="0" index="0" bw="1" slack="0"/>
<pin id="513" dir="0" index="1" bw="6" slack="0"/>
<pin id="514" dir="0" index="2" bw="6" slack="0"/>
<pin id="515" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln804/2 "/>
</bind>
</comp>

<comp id="519" class="1004" name="regime_fu_519">
<pin_list>
<pin id="520" dir="0" index="0" bw="1" slack="0"/>
<pin id="521" dir="0" index="1" bw="6" slack="0"/>
<pin id="522" dir="0" index="2" bw="6" slack="0"/>
<pin id="523" dir="1" index="3" bw="6" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="regime/2 "/>
</bind>
</comp>

<comp id="527" class="1004" name="tmp_i_fu_527">
<pin_list>
<pin id="528" dir="0" index="0" bw="94" slack="0"/>
<pin id="529" dir="0" index="1" bw="30" slack="8"/>
<pin id="530" dir="0" index="2" bw="1" slack="0"/>
<pin id="531" dir="0" index="3" bw="1" slack="8"/>
<pin id="532" dir="0" index="4" bw="1" slack="0"/>
<pin id="533" dir="0" index="5" bw="6" slack="8"/>
<pin id="534" dir="0" index="6" bw="1" slack="0"/>
<pin id="535" dir="0" index="7" bw="1" slack="8"/>
<pin id="536" dir="1" index="8" bw="94" slack="1"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp_i/9 "/>
</bind>
</comp>

<comp id="541" class="1004" name="result_isZero_fu_541">
<pin_list>
<pin id="542" dir="0" index="0" bw="39" slack="0"/>
<pin id="543" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_isZero/10 "/>
</bind>
</comp>

<comp id="545" class="1004" name="result_regime_fu_545">
<pin_list>
<pin id="546" dir="0" index="0" bw="39" slack="0"/>
<pin id="547" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_regime/10 "/>
</bind>
</comp>

<comp id="549" class="1004" name="result_exponent_fu_549">
<pin_list>
<pin id="550" dir="0" index="0" bw="39" slack="0"/>
<pin id="551" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_exponent/10 "/>
</bind>
</comp>

<comp id="553" class="1004" name="result_mantissa_fu_553">
<pin_list>
<pin id="554" dir="0" index="0" bw="39" slack="0"/>
<pin id="555" dir="1" index="1" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_mantissa/10 "/>
</bind>
</comp>

<comp id="557" class="1004" name="tmp_18_i_fu_557">
<pin_list>
<pin id="558" dir="0" index="0" bw="94" slack="0"/>
<pin id="559" dir="0" index="1" bw="30" slack="0"/>
<pin id="560" dir="0" index="2" bw="1" slack="0"/>
<pin id="561" dir="0" index="3" bw="1" slack="0"/>
<pin id="562" dir="0" index="4" bw="1" slack="0"/>
<pin id="563" dir="0" index="5" bw="6" slack="0"/>
<pin id="564" dir="0" index="6" bw="1" slack="0"/>
<pin id="565" dir="0" index="7" bw="1" slack="0"/>
<pin id="566" dir="0" index="8" bw="1" slack="0"/>
<pin id="567" dir="0" index="9" bw="1" slack="9"/>
<pin id="568" dir="1" index="10" bw="94" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp_18_i/10 "/>
</bind>
</comp>

<comp id="579" class="1004" name="m_angle_sign_3_fu_579">
<pin_list>
<pin id="580" dir="0" index="0" bw="94" slack="0"/>
<pin id="581" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="m_angle_sign_3/10 "/>
</bind>
</comp>

<comp id="583" class="1004" name="m_angle_isZero_fu_583">
<pin_list>
<pin id="584" dir="0" index="0" bw="1" slack="0"/>
<pin id="585" dir="0" index="1" bw="94" slack="0"/>
<pin id="586" dir="0" index="2" bw="5" slack="0"/>
<pin id="587" dir="1" index="3" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="m_angle_isZero/10 "/>
</bind>
</comp>

<comp id="591" class="1004" name="m_angle_regime_5_fu_591">
<pin_list>
<pin id="592" dir="0" index="0" bw="6" slack="0"/>
<pin id="593" dir="0" index="1" bw="94" slack="0"/>
<pin id="594" dir="0" index="2" bw="6" slack="0"/>
<pin id="595" dir="0" index="3" bw="6" slack="0"/>
<pin id="596" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="m_angle_regime_5/10 "/>
</bind>
</comp>

<comp id="601" class="1004" name="m_angle_exponent_5_fu_601">
<pin_list>
<pin id="602" dir="0" index="0" bw="1" slack="0"/>
<pin id="603" dir="0" index="1" bw="94" slack="0"/>
<pin id="604" dir="0" index="2" bw="7" slack="0"/>
<pin id="605" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="m_angle_exponent_5/10 "/>
</bind>
</comp>

<comp id="609" class="1004" name="m_angle_mantissa_fu_609">
<pin_list>
<pin id="610" dir="0" index="0" bw="30" slack="0"/>
<pin id="611" dir="0" index="1" bw="94" slack="0"/>
<pin id="612" dir="0" index="2" bw="8" slack="0"/>
<pin id="613" dir="0" index="3" bw="8" slack="0"/>
<pin id="614" dir="1" index="4" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="m_angle_mantissa/10 "/>
</bind>
</comp>

<comp id="619" class="1004" name="tmp_48_fu_619">
<pin_list>
<pin id="620" dir="0" index="0" bw="5" slack="0"/>
<pin id="621" dir="0" index="1" bw="94" slack="0"/>
<pin id="622" dir="0" index="2" bw="6" slack="0"/>
<pin id="623" dir="0" index="3" bw="6" slack="0"/>
<pin id="624" dir="1" index="4" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_48/10 "/>
</bind>
</comp>

<comp id="629" class="1004" name="icmp_ln23_1_fu_629">
<pin_list>
<pin id="630" dir="0" index="0" bw="5" slack="0"/>
<pin id="631" dir="0" index="1" bw="1" slack="0"/>
<pin id="632" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23_1/10 "/>
</bind>
</comp>

<comp id="635" class="1004" name="icmp_ln24_1_fu_635">
<pin_list>
<pin id="636" dir="0" index="0" bw="6" slack="0"/>
<pin id="637" dir="0" index="1" bw="1" slack="0"/>
<pin id="638" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln24_1/10 "/>
</bind>
</comp>

<comp id="641" class="1004" name="and_ln24_fu_641">
<pin_list>
<pin id="642" dir="0" index="0" bw="1" slack="0"/>
<pin id="643" dir="0" index="1" bw="1" slack="0"/>
<pin id="644" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln24/10 "/>
</bind>
</comp>

<comp id="647" class="1004" name="xor_ln25_1_fu_647">
<pin_list>
<pin id="648" dir="0" index="0" bw="1" slack="0"/>
<pin id="649" dir="0" index="1" bw="1" slack="0"/>
<pin id="650" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln25_1/10 "/>
</bind>
</comp>

<comp id="653" class="1004" name="icmp_ln25_1_fu_653">
<pin_list>
<pin id="654" dir="0" index="0" bw="30" slack="0"/>
<pin id="655" dir="0" index="1" bw="29" slack="0"/>
<pin id="656" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_1/10 "/>
</bind>
</comp>

<comp id="659" class="1004" name="and_ln25_2_fu_659">
<pin_list>
<pin id="660" dir="0" index="0" bw="1" slack="0"/>
<pin id="661" dir="0" index="1" bw="1" slack="0"/>
<pin id="662" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_2/10 "/>
</bind>
</comp>

<comp id="665" class="1004" name="and_ln25_3_fu_665">
<pin_list>
<pin id="666" dir="0" index="0" bw="1" slack="0"/>
<pin id="667" dir="0" index="1" bw="1" slack="0"/>
<pin id="668" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_3/10 "/>
</bind>
</comp>

<comp id="671" class="1004" name="or_ln24_fu_671">
<pin_list>
<pin id="672" dir="0" index="0" bw="1" slack="0"/>
<pin id="673" dir="0" index="1" bw="1" slack="0"/>
<pin id="674" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln24/10 "/>
</bind>
</comp>

<comp id="677" class="1004" name="absXGreaterEqual_fu_677">
<pin_list>
<pin id="678" dir="0" index="0" bw="1" slack="0"/>
<pin id="679" dir="0" index="1" bw="1" slack="0"/>
<pin id="680" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual/10 "/>
</bind>
</comp>

<comp id="683" class="1004" name="xor_ln27_fu_683">
<pin_list>
<pin id="684" dir="0" index="0" bw="1" slack="0"/>
<pin id="685" dir="0" index="1" bw="1" slack="0"/>
<pin id="686" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27/10 "/>
</bind>
</comp>

<comp id="689" class="1004" name="not_m_angle_sign_fu_689">
<pin_list>
<pin id="690" dir="0" index="0" bw="1" slack="0"/>
<pin id="691" dir="0" index="1" bw="1" slack="0"/>
<pin id="692" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="not_m_angle_sign/10 "/>
</bind>
</comp>

<comp id="695" class="1004" name="retval_1_i_fu_695">
<pin_list>
<pin id="696" dir="0" index="0" bw="1" slack="0"/>
<pin id="697" dir="0" index="1" bw="1" slack="0"/>
<pin id="698" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i/10 "/>
</bind>
</comp>

<comp id="701" class="1004" name="icmp_ln23_2_fu_701">
<pin_list>
<pin id="702" dir="0" index="0" bw="6" slack="0"/>
<pin id="703" dir="0" index="1" bw="1" slack="0"/>
<pin id="704" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23_2/10 "/>
</bind>
</comp>

<comp id="707" class="1004" name="icmp_ln25_2_fu_707">
<pin_list>
<pin id="708" dir="0" index="0" bw="30" slack="0"/>
<pin id="709" dir="0" index="1" bw="29" slack="0"/>
<pin id="710" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_2/10 "/>
</bind>
</comp>

<comp id="713" class="1004" name="and_ln25_4_fu_713">
<pin_list>
<pin id="714" dir="0" index="0" bw="1" slack="0"/>
<pin id="715" dir="0" index="1" bw="1" slack="0"/>
<pin id="716" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_4/10 "/>
</bind>
</comp>

<comp id="719" class="1004" name="and_ln25_5_fu_719">
<pin_list>
<pin id="720" dir="0" index="0" bw="1" slack="0"/>
<pin id="721" dir="0" index="1" bw="1" slack="0"/>
<pin id="722" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_5/10 "/>
</bind>
</comp>

<comp id="725" class="1004" name="absXGreaterEqual_1_fu_725">
<pin_list>
<pin id="726" dir="0" index="0" bw="1" slack="0"/>
<pin id="727" dir="0" index="1" bw="1" slack="0"/>
<pin id="728" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual_1/10 "/>
</bind>
</comp>

<comp id="731" class="1004" name="xor_ln27_1_fu_731">
<pin_list>
<pin id="732" dir="0" index="0" bw="1" slack="0"/>
<pin id="733" dir="0" index="1" bw="1" slack="0"/>
<pin id="734" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27_1/10 "/>
</bind>
</comp>

<comp id="737" class="1004" name="retval_1_i9_fu_737">
<pin_list>
<pin id="738" dir="0" index="0" bw="1" slack="0"/>
<pin id="739" dir="0" index="1" bw="1" slack="0"/>
<pin id="740" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i9/10 "/>
</bind>
</comp>

<comp id="743" class="1004" name="icmp_ln23_3_fu_743">
<pin_list>
<pin id="744" dir="0" index="0" bw="6" slack="0"/>
<pin id="745" dir="0" index="1" bw="1" slack="0"/>
<pin id="746" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23_3/18 "/>
</bind>
</comp>

<comp id="749" class="1004" name="icmp_ln24_2_fu_749">
<pin_list>
<pin id="750" dir="0" index="0" bw="6" slack="0"/>
<pin id="751" dir="0" index="1" bw="1" slack="0"/>
<pin id="752" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln24_2/18 "/>
</bind>
</comp>

<comp id="755" class="1004" name="and_ln24_1_fu_755">
<pin_list>
<pin id="756" dir="0" index="0" bw="1" slack="0"/>
<pin id="757" dir="0" index="1" bw="1" slack="0"/>
<pin id="758" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln24_1/18 "/>
</bind>
</comp>

<comp id="761" class="1004" name="xor_ln25_2_fu_761">
<pin_list>
<pin id="762" dir="0" index="0" bw="1" slack="0"/>
<pin id="763" dir="0" index="1" bw="1" slack="0"/>
<pin id="764" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln25_2/18 "/>
</bind>
</comp>

<comp id="767" class="1004" name="icmp_ln25_3_fu_767">
<pin_list>
<pin id="768" dir="0" index="0" bw="30" slack="0"/>
<pin id="769" dir="0" index="1" bw="29" slack="0"/>
<pin id="770" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_3/18 "/>
</bind>
</comp>

<comp id="773" class="1004" name="and_ln25_6_fu_773">
<pin_list>
<pin id="774" dir="0" index="0" bw="1" slack="0"/>
<pin id="775" dir="0" index="1" bw="1" slack="0"/>
<pin id="776" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_6/18 "/>
</bind>
</comp>

<comp id="779" class="1004" name="and_ln25_7_fu_779">
<pin_list>
<pin id="780" dir="0" index="0" bw="1" slack="0"/>
<pin id="781" dir="0" index="1" bw="1" slack="0"/>
<pin id="782" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_7/18 "/>
</bind>
</comp>

<comp id="785" class="1004" name="or_ln24_1_fu_785">
<pin_list>
<pin id="786" dir="0" index="0" bw="1" slack="0"/>
<pin id="787" dir="0" index="1" bw="1" slack="0"/>
<pin id="788" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln24_1/18 "/>
</bind>
</comp>

<comp id="791" class="1004" name="absXGreaterEqual_2_fu_791">
<pin_list>
<pin id="792" dir="0" index="0" bw="1" slack="0"/>
<pin id="793" dir="0" index="1" bw="1" slack="0"/>
<pin id="794" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual_2/18 "/>
</bind>
</comp>

<comp id="797" class="1004" name="xor_ln27_2_fu_797">
<pin_list>
<pin id="798" dir="0" index="0" bw="1" slack="0"/>
<pin id="799" dir="0" index="1" bw="1" slack="0"/>
<pin id="800" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27_2/18 "/>
</bind>
</comp>

<comp id="803" class="1004" name="not_y_sign_fu_803">
<pin_list>
<pin id="804" dir="0" index="0" bw="1" slack="0"/>
<pin id="805" dir="0" index="1" bw="1" slack="0"/>
<pin id="806" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="not_y_sign/18 "/>
</bind>
</comp>

<comp id="809" class="1004" name="retval_1_i20_fu_809">
<pin_list>
<pin id="810" dir="0" index="0" bw="1" slack="0"/>
<pin id="811" dir="0" index="1" bw="1" slack="0"/>
<pin id="812" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i20/18 "/>
</bind>
</comp>

<comp id="815" class="1004" name="tmp_49_fu_815">
<pin_list>
<pin id="816" dir="0" index="0" bw="1" slack="0"/>
<pin id="817" dir="0" index="1" bw="6" slack="0"/>
<pin id="818" dir="0" index="2" bw="4" slack="0"/>
<pin id="819" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_49/18 "/>
</bind>
</comp>

<comp id="823" class="1004" name="icmp_ln25_4_fu_823">
<pin_list>
<pin id="824" dir="0" index="0" bw="30" slack="0"/>
<pin id="825" dir="0" index="1" bw="29" slack="0"/>
<pin id="826" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_4/18 "/>
</bind>
</comp>

<comp id="829" class="1004" name="and_ln25_8_fu_829">
<pin_list>
<pin id="830" dir="0" index="0" bw="1" slack="0"/>
<pin id="831" dir="0" index="1" bw="1" slack="0"/>
<pin id="832" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_8/18 "/>
</bind>
</comp>

<comp id="835" class="1004" name="and_ln25_9_fu_835">
<pin_list>
<pin id="836" dir="0" index="0" bw="1" slack="0"/>
<pin id="837" dir="0" index="1" bw="1" slack="0"/>
<pin id="838" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_9/18 "/>
</bind>
</comp>

<comp id="841" class="1004" name="absXGreaterEqual_3_fu_841">
<pin_list>
<pin id="842" dir="0" index="0" bw="1" slack="0"/>
<pin id="843" dir="0" index="1" bw="1" slack="0"/>
<pin id="844" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual_3/18 "/>
</bind>
</comp>

<comp id="847" class="1004" name="xor_ln27_3_fu_847">
<pin_list>
<pin id="848" dir="0" index="0" bw="1" slack="0"/>
<pin id="849" dir="0" index="1" bw="1" slack="0"/>
<pin id="850" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27_3/18 "/>
</bind>
</comp>

<comp id="853" class="1004" name="retval_1_i31_fu_853">
<pin_list>
<pin id="854" dir="0" index="0" bw="1" slack="0"/>
<pin id="855" dir="0" index="1" bw="1" slack="0"/>
<pin id="856" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i31/18 "/>
</bind>
</comp>

<comp id="859" class="1004" name="newret1_fu_859">
<pin_list>
<pin id="860" dir="0" index="0" bw="39" slack="0"/>
<pin id="861" dir="0" index="1" bw="1" slack="0"/>
<pin id="862" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="newret1/26 "/>
</bind>
</comp>

<comp id="865" class="1004" name="newret3_fu_865">
<pin_list>
<pin id="866" dir="0" index="0" bw="39" slack="0"/>
<pin id="867" dir="0" index="1" bw="6" slack="0"/>
<pin id="868" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="newret3/26 "/>
</bind>
</comp>

<comp id="871" class="1004" name="newret5_fu_871">
<pin_list>
<pin id="872" dir="0" index="0" bw="39" slack="0"/>
<pin id="873" dir="0" index="1" bw="1" slack="0"/>
<pin id="874" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="newret5/26 "/>
</bind>
</comp>

<comp id="877" class="1004" name="newret7_fu_877">
<pin_list>
<pin id="878" dir="0" index="0" bw="39" slack="0"/>
<pin id="879" dir="0" index="1" bw="30" slack="0"/>
<pin id="880" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="newret7/26 "/>
</bind>
</comp>

<comp id="883" class="1004" name="newret9_fu_883">
<pin_list>
<pin id="884" dir="0" index="0" bw="39" slack="0"/>
<pin id="885" dir="0" index="1" bw="1" slack="0"/>
<pin id="886" dir="1" index="2" bw="39" slack="2147483647"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="newret9/26 "/>
</bind>
</comp>

<comp id="889" class="1005" name="x_mantissa_read_reg_889">
<pin_list>
<pin id="890" dir="0" index="0" bw="30" slack="2"/>
<pin id="891" dir="1" index="1" bw="30" slack="2"/>
</pin_list>
<bind>
<opset="x_mantissa_read "/>
</bind>
</comp>

<comp id="895" class="1005" name="x_exponent_read_reg_895">
<pin_list>
<pin id="896" dir="0" index="0" bw="1" slack="1"/>
<pin id="897" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="x_exponent_read "/>
</bind>
</comp>

<comp id="902" class="1005" name="x_regime_read_reg_902">
<pin_list>
<pin id="903" dir="0" index="0" bw="6" slack="1"/>
<pin id="904" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="x_regime_read "/>
</bind>
</comp>

<comp id="909" class="1005" name="x_sign_read_reg_909">
<pin_list>
<pin id="910" dir="0" index="0" bw="1" slack="8"/>
<pin id="911" dir="1" index="1" bw="1" slack="8"/>
</pin_list>
<bind>
<opset="x_sign_read "/>
</bind>
</comp>

<comp id="915" class="1005" name="icmp_ln23_reg_915">
<pin_list>
<pin id="916" dir="0" index="0" bw="1" slack="1"/>
<pin id="917" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="icmp_ln23 "/>
</bind>
</comp>

<comp id="919" class="1005" name="absXGreaterEqual_5_reg_919">
<pin_list>
<pin id="920" dir="0" index="0" bw="1" slack="1"/>
<pin id="921" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="absXGreaterEqual_5 "/>
</bind>
</comp>

<comp id="923" class="1005" name="tmp_45_reg_923">
<pin_list>
<pin id="924" dir="0" index="0" bw="1" slack="1"/>
<pin id="925" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_45 "/>
</bind>
</comp>

<comp id="928" class="1005" name="regime_reg_928">
<pin_list>
<pin id="929" dir="0" index="0" bw="6" slack="1"/>
<pin id="930" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="regime "/>
</bind>
</comp>

<comp id="933" class="1005" name="tmp_i_reg_933">
<pin_list>
<pin id="934" dir="0" index="0" bw="94" slack="1"/>
<pin id="935" dir="1" index="1" bw="94" slack="1"/>
</pin_list>
<bind>
<opset="tmp_i "/>
</bind>
</comp>

<comp id="938" class="1005" name="m_angle_sign_3_reg_938">
<pin_list>
<pin id="939" dir="0" index="0" bw="1" slack="1"/>
<pin id="940" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_sign_3 "/>
</bind>
</comp>

<comp id="944" class="1005" name="m_angle_isZero_reg_944">
<pin_list>
<pin id="945" dir="0" index="0" bw="1" slack="1"/>
<pin id="946" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_isZero "/>
</bind>
</comp>

<comp id="950" class="1005" name="m_angle_regime_5_reg_950">
<pin_list>
<pin id="951" dir="0" index="0" bw="6" slack="1"/>
<pin id="952" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_regime_5 "/>
</bind>
</comp>

<comp id="956" class="1005" name="m_angle_exponent_5_reg_956">
<pin_list>
<pin id="957" dir="0" index="0" bw="1" slack="1"/>
<pin id="958" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_exponent_5 "/>
</bind>
</comp>

<comp id="962" class="1005" name="m_angle_mantissa_reg_962">
<pin_list>
<pin id="963" dir="0" index="0" bw="30" slack="1"/>
<pin id="964" dir="1" index="1" bw="30" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_mantissa "/>
</bind>
</comp>

<comp id="968" class="1005" name="retval_1_i_reg_968">
<pin_list>
<pin id="969" dir="0" index="0" bw="1" slack="1"/>
<pin id="970" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i "/>
</bind>
</comp>

<comp id="972" class="1005" name="retval_1_i9_reg_972">
<pin_list>
<pin id="973" dir="0" index="0" bw="1" slack="1"/>
<pin id="974" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i9 "/>
</bind>
</comp>

<comp id="976" class="1005" name="m_angle_isZero_2_reg_976">
<pin_list>
<pin id="977" dir="0" index="0" bw="1" slack="1"/>
<pin id="978" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_isZero_2 "/>
</bind>
</comp>

<comp id="981" class="1005" name="m_angle_isZero_1_reg_981">
<pin_list>
<pin id="982" dir="0" index="0" bw="1" slack="1"/>
<pin id="983" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_isZero_1 "/>
</bind>
</comp>

<comp id="986" class="1005" name="retval_1_i20_reg_986">
<pin_list>
<pin id="987" dir="0" index="0" bw="1" slack="1"/>
<pin id="988" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i20 "/>
</bind>
</comp>

<comp id="990" class="1005" name="retval_1_i31_reg_990">
<pin_list>
<pin id="991" dir="0" index="0" bw="1" slack="1"/>
<pin id="992" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i31 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="104"><net_src comp="8" pin="0"/><net_sink comp="100" pin=0"/></net>

<net id="105"><net_src comp="6" pin="0"/><net_sink comp="100" pin=1"/></net>

<net id="110"><net_src comp="10" pin="0"/><net_sink comp="106" pin=0"/></net>

<net id="111"><net_src comp="4" pin="0"/><net_sink comp="106" pin=1"/></net>

<net id="116"><net_src comp="12" pin="0"/><net_sink comp="112" pin=0"/></net>

<net id="117"><net_src comp="2" pin="0"/><net_sink comp="112" pin=1"/></net>

<net id="122"><net_src comp="10" pin="0"/><net_sink comp="118" pin=0"/></net>

<net id="123"><net_src comp="0" pin="0"/><net_sink comp="118" pin=1"/></net>

<net id="155"><net_src comp="147" pin="6"/><net_sink comp="144" pin=0"/></net>

<net id="167"><net_src comp="159" pin="6"/><net_sink comp="156" pin=0"/></net>

<net id="179"><net_src comp="171" pin="6"/><net_sink comp="168" pin=0"/></net>

<net id="191"><net_src comp="183" pin="6"/><net_sink comp="180" pin=0"/></net>

<net id="203"><net_src comp="180" pin="1"/><net_sink comp="195" pin=4"/></net>

<net id="215"><net_src comp="144" pin="1"/><net_sink comp="207" pin=4"/></net>

<net id="227"><net_src comp="156" pin="1"/><net_sink comp="219" pin=4"/></net>

<net id="239"><net_src comp="168" pin="1"/><net_sink comp="231" pin=4"/></net>

<net id="243"><net_src comp="52" pin="0"/><net_sink comp="240" pin=0"/></net>

<net id="252"><net_src comp="24" pin="0"/><net_sink comp="244" pin=0"/></net>

<net id="253"><net_src comp="24" pin="0"/><net_sink comp="244" pin=2"/></net>

<net id="254"><net_src comp="240" pin="1"/><net_sink comp="244" pin=4"/></net>

<net id="268"><net_src comp="50" pin="0"/><net_sink comp="255" pin=0"/></net>

<net id="269"><net_src comp="52" pin="0"/><net_sink comp="255" pin=1"/></net>

<net id="270"><net_src comp="52" pin="0"/><net_sink comp="255" pin=2"/></net>

<net id="271"><net_src comp="24" pin="0"/><net_sink comp="255" pin=6"/></net>

<net id="272"><net_src comp="52" pin="0"/><net_sink comp="255" pin=7"/></net>

<net id="273"><net_src comp="52" pin="0"/><net_sink comp="255" pin=9"/></net>

<net id="274"><net_src comp="26" pin="0"/><net_sink comp="255" pin=10"/></net>

<net id="288"><net_src comp="50" pin="0"/><net_sink comp="275" pin=0"/></net>

<net id="289"><net_src comp="24" pin="0"/><net_sink comp="275" pin=1"/></net>

<net id="290"><net_src comp="52" pin="0"/><net_sink comp="275" pin=6"/></net>

<net id="291"><net_src comp="52" pin="0"/><net_sink comp="275" pin=7"/></net>

<net id="292"><net_src comp="22" pin="0"/><net_sink comp="275" pin=8"/></net>

<net id="293"><net_src comp="52" pin="0"/><net_sink comp="275" pin=9"/></net>

<net id="294"><net_src comp="26" pin="0"/><net_sink comp="275" pin=10"/></net>

<net id="295"><net_src comp="24" pin="0"/><net_sink comp="275" pin=6"/></net>

<net id="309"><net_src comp="50" pin="0"/><net_sink comp="296" pin=0"/></net>

<net id="310"><net_src comp="24" pin="0"/><net_sink comp="296" pin=1"/></net>

<net id="311"><net_src comp="183" pin="6"/><net_sink comp="296" pin=2"/></net>

<net id="312"><net_src comp="144" pin="1"/><net_sink comp="296" pin=3"/></net>

<net id="313"><net_src comp="156" pin="1"/><net_sink comp="296" pin=4"/></net>

<net id="314"><net_src comp="168" pin="1"/><net_sink comp="296" pin=5"/></net>

<net id="315"><net_src comp="52" pin="0"/><net_sink comp="296" pin=6"/></net>

<net id="316"><net_src comp="52" pin="0"/><net_sink comp="296" pin=7"/></net>

<net id="317"><net_src comp="92" pin="0"/><net_sink comp="296" pin=8"/></net>

<net id="318"><net_src comp="52" pin="0"/><net_sink comp="296" pin=9"/></net>

<net id="319"><net_src comp="26" pin="0"/><net_sink comp="296" pin=10"/></net>

<net id="320"><net_src comp="52" pin="0"/><net_sink comp="296" pin=1"/></net>

<net id="321"><net_src comp="52" pin="0"/><net_sink comp="296" pin=2"/></net>

<net id="322"><net_src comp="92" pin="0"/><net_sink comp="296" pin=3"/></net>

<net id="323"><net_src comp="52" pin="0"/><net_sink comp="296" pin=4"/></net>

<net id="324"><net_src comp="26" pin="0"/><net_sink comp="296" pin=5"/></net>

<net id="325"><net_src comp="24" pin="0"/><net_sink comp="296" pin=6"/></net>

<net id="326"><net_src comp="183" pin="6"/><net_sink comp="296" pin=7"/></net>

<net id="327"><net_src comp="144" pin="1"/><net_sink comp="296" pin=8"/></net>

<net id="328"><net_src comp="156" pin="1"/><net_sink comp="296" pin=9"/></net>

<net id="329"><net_src comp="168" pin="1"/><net_sink comp="296" pin=10"/></net>

<net id="334"><net_src comp="32" pin="0"/><net_sink comp="330" pin=1"/></net>

<net id="338"><net_src comp="275" pin="11"/><net_sink comp="335" pin=0"/></net>

<net id="339"><net_src comp="335" pin="1"/><net_sink comp="136" pin=2"/></net>

<net id="340"><net_src comp="335" pin="1"/><net_sink comp="136" pin=0"/></net>

<net id="344"><net_src comp="275" pin="11"/><net_sink comp="341" pin=0"/></net>

<net id="348"><net_src comp="275" pin="11"/><net_sink comp="345" pin=0"/></net>

<net id="349"><net_src comp="345" pin="1"/><net_sink comp="147" pin=2"/></net>

<net id="350"><net_src comp="345" pin="1"/><net_sink comp="147" pin=0"/></net>

<net id="354"><net_src comp="275" pin="11"/><net_sink comp="351" pin=0"/></net>

<net id="355"><net_src comp="351" pin="1"/><net_sink comp="159" pin=2"/></net>

<net id="356"><net_src comp="351" pin="1"/><net_sink comp="159" pin=0"/></net>

<net id="360"><net_src comp="275" pin="11"/><net_sink comp="357" pin=0"/></net>

<net id="361"><net_src comp="357" pin="1"/><net_sink comp="171" pin=2"/></net>

<net id="362"><net_src comp="357" pin="1"/><net_sink comp="171" pin=0"/></net>

<net id="366"><net_src comp="296" pin="11"/><net_sink comp="363" pin=0"/></net>

<net id="367"><net_src comp="363" pin="1"/><net_sink comp="195" pin=2"/></net>

<net id="368"><net_src comp="363" pin="1"/><net_sink comp="195" pin=0"/></net>

<net id="372"><net_src comp="296" pin="11"/><net_sink comp="369" pin=0"/></net>

<net id="373"><net_src comp="369" pin="1"/><net_sink comp="207" pin=2"/></net>

<net id="374"><net_src comp="369" pin="1"/><net_sink comp="207" pin=0"/></net>

<net id="378"><net_src comp="296" pin="11"/><net_sink comp="375" pin=0"/></net>

<net id="379"><net_src comp="375" pin="1"/><net_sink comp="219" pin=2"/></net>

<net id="380"><net_src comp="375" pin="1"/><net_sink comp="219" pin=0"/></net>

<net id="384"><net_src comp="296" pin="11"/><net_sink comp="381" pin=0"/></net>

<net id="385"><net_src comp="381" pin="1"/><net_sink comp="231" pin=2"/></net>

<net id="386"><net_src comp="381" pin="1"/><net_sink comp="231" pin=0"/></net>

<net id="393"><net_src comp="14" pin="0"/><net_sink comp="387" pin=0"/></net>

<net id="394"><net_src comp="112" pin="2"/><net_sink comp="387" pin=1"/></net>

<net id="395"><net_src comp="16" pin="0"/><net_sink comp="387" pin=2"/></net>

<net id="396"><net_src comp="18" pin="0"/><net_sink comp="387" pin=3"/></net>

<net id="401"><net_src comp="387" pin="4"/><net_sink comp="397" pin=0"/></net>

<net id="402"><net_src comp="20" pin="0"/><net_sink comp="397" pin=1"/></net>

<net id="407"><net_src comp="112" pin="2"/><net_sink comp="403" pin=0"/></net>

<net id="408"><net_src comp="22" pin="0"/><net_sink comp="403" pin=1"/></net>

<net id="413"><net_src comp="106" pin="2"/><net_sink comp="409" pin=0"/></net>

<net id="414"><net_src comp="24" pin="0"/><net_sink comp="409" pin=1"/></net>

<net id="419"><net_src comp="100" pin="2"/><net_sink comp="415" pin=0"/></net>

<net id="420"><net_src comp="26" pin="0"/><net_sink comp="415" pin=1"/></net>

<net id="425"><net_src comp="415" pin="2"/><net_sink comp="421" pin=0"/></net>

<net id="426"><net_src comp="409" pin="2"/><net_sink comp="421" pin=1"/></net>

<net id="431"><net_src comp="421" pin="2"/><net_sink comp="427" pin=0"/></net>

<net id="432"><net_src comp="403" pin="2"/><net_sink comp="427" pin=1"/></net>

<net id="438"><net_src comp="28" pin="0"/><net_sink comp="433" pin=0"/></net>

<net id="439"><net_src comp="100" pin="2"/><net_sink comp="433" pin=1"/></net>

<net id="440"><net_src comp="30" pin="0"/><net_sink comp="433" pin=2"/></net>

<net id="444"><net_src comp="433" pin="3"/><net_sink comp="441" pin=0"/></net>

<net id="445"><net_src comp="441" pin="1"/><net_sink comp="330" pin=0"/></net>

<net id="449"><net_src comp="330" pin="2"/><net_sink comp="446" pin=0"/></net>

<net id="455"><net_src comp="34" pin="0"/><net_sink comp="450" pin=0"/></net>

<net id="456"><net_src comp="446" pin="1"/><net_sink comp="450" pin=1"/></net>

<net id="457"><net_src comp="36" pin="0"/><net_sink comp="450" pin=2"/></net>

<net id="466"><net_src comp="38" pin="0"/><net_sink comp="461" pin=1"/></net>

<net id="467"><net_src comp="40" pin="0"/><net_sink comp="461" pin=2"/></net>

<net id="472"><net_src comp="458" pin="1"/><net_sink comp="468" pin=0"/></net>

<net id="477"><net_src comp="468" pin="2"/><net_sink comp="473" pin=0"/></net>

<net id="478"><net_src comp="461" pin="3"/><net_sink comp="473" pin=1"/></net>

<net id="483"><net_src comp="473" pin="2"/><net_sink comp="479" pin=0"/></net>

<net id="484"><net_src comp="42" pin="0"/><net_sink comp="479" pin=1"/></net>

<net id="489"><net_src comp="473" pin="2"/><net_sink comp="485" pin=0"/></net>

<net id="490"><net_src comp="22" pin="0"/><net_sink comp="485" pin=1"/></net>

<net id="496"><net_src comp="479" pin="2"/><net_sink comp="491" pin=0"/></net>

<net id="497"><net_src comp="485" pin="2"/><net_sink comp="491" pin=1"/></net>

<net id="498"><net_src comp="44" pin="0"/><net_sink comp="491" pin=2"/></net>

<net id="503"><net_src comp="491" pin="3"/><net_sink comp="499" pin=0"/></net>

<net id="504"><net_src comp="46" pin="0"/><net_sink comp="499" pin=1"/></net>

<net id="509"><net_src comp="491" pin="3"/><net_sink comp="505" pin=0"/></net>

<net id="510"><net_src comp="48" pin="0"/><net_sink comp="505" pin=1"/></net>

<net id="516"><net_src comp="505" pin="2"/><net_sink comp="511" pin=0"/></net>

<net id="517"><net_src comp="491" pin="3"/><net_sink comp="511" pin=1"/></net>

<net id="518"><net_src comp="48" pin="0"/><net_sink comp="511" pin=2"/></net>

<net id="524"><net_src comp="499" pin="2"/><net_sink comp="519" pin=0"/></net>

<net id="525"><net_src comp="42" pin="0"/><net_sink comp="519" pin=1"/></net>

<net id="526"><net_src comp="511" pin="3"/><net_sink comp="519" pin=2"/></net>

<net id="537"><net_src comp="54" pin="0"/><net_sink comp="527" pin=0"/></net>

<net id="538"><net_src comp="56" pin="0"/><net_sink comp="527" pin=2"/></net>

<net id="539"><net_src comp="58" pin="0"/><net_sink comp="527" pin=4"/></net>

<net id="540"><net_src comp="60" pin="0"/><net_sink comp="527" pin=6"/></net>

<net id="544"><net_src comp="255" pin="11"/><net_sink comp="541" pin=0"/></net>

<net id="548"><net_src comp="255" pin="11"/><net_sink comp="545" pin=0"/></net>

<net id="552"><net_src comp="255" pin="11"/><net_sink comp="549" pin=0"/></net>

<net id="556"><net_src comp="255" pin="11"/><net_sink comp="553" pin=0"/></net>

<net id="569"><net_src comp="62" pin="0"/><net_sink comp="557" pin=0"/></net>

<net id="570"><net_src comp="553" pin="1"/><net_sink comp="557" pin=1"/></net>

<net id="571"><net_src comp="56" pin="0"/><net_sink comp="557" pin=2"/></net>

<net id="572"><net_src comp="549" pin="1"/><net_sink comp="557" pin=3"/></net>

<net id="573"><net_src comp="58" pin="0"/><net_sink comp="557" pin=4"/></net>

<net id="574"><net_src comp="545" pin="1"/><net_sink comp="557" pin=5"/></net>

<net id="575"><net_src comp="64" pin="0"/><net_sink comp="557" pin=6"/></net>

<net id="576"><net_src comp="541" pin="1"/><net_sink comp="557" pin=7"/></net>

<net id="577"><net_src comp="66" pin="0"/><net_sink comp="557" pin=8"/></net>

<net id="578"><net_src comp="557" pin="10"/><net_sink comp="127" pin=0"/></net>

<net id="582"><net_src comp="127" pin="4"/><net_sink comp="579" pin=0"/></net>

<net id="588"><net_src comp="68" pin="0"/><net_sink comp="583" pin=0"/></net>

<net id="589"><net_src comp="127" pin="4"/><net_sink comp="583" pin=1"/></net>

<net id="590"><net_src comp="70" pin="0"/><net_sink comp="583" pin=2"/></net>

<net id="597"><net_src comp="72" pin="0"/><net_sink comp="591" pin=0"/></net>

<net id="598"><net_src comp="127" pin="4"/><net_sink comp="591" pin=1"/></net>

<net id="599"><net_src comp="74" pin="0"/><net_sink comp="591" pin=2"/></net>

<net id="600"><net_src comp="76" pin="0"/><net_sink comp="591" pin=3"/></net>

<net id="606"><net_src comp="68" pin="0"/><net_sink comp="601" pin=0"/></net>

<net id="607"><net_src comp="127" pin="4"/><net_sink comp="601" pin=1"/></net>

<net id="608"><net_src comp="78" pin="0"/><net_sink comp="601" pin=2"/></net>

<net id="615"><net_src comp="80" pin="0"/><net_sink comp="609" pin=0"/></net>

<net id="616"><net_src comp="127" pin="4"/><net_sink comp="609" pin=1"/></net>

<net id="617"><net_src comp="82" pin="0"/><net_sink comp="609" pin=2"/></net>

<net id="618"><net_src comp="84" pin="0"/><net_sink comp="609" pin=3"/></net>

<net id="625"><net_src comp="86" pin="0"/><net_sink comp="619" pin=0"/></net>

<net id="626"><net_src comp="127" pin="4"/><net_sink comp="619" pin=1"/></net>

<net id="627"><net_src comp="88" pin="0"/><net_sink comp="619" pin=2"/></net>

<net id="628"><net_src comp="76" pin="0"/><net_sink comp="619" pin=3"/></net>

<net id="633"><net_src comp="619" pin="4"/><net_sink comp="629" pin=0"/></net>

<net id="634"><net_src comp="90" pin="0"/><net_sink comp="629" pin=1"/></net>

<net id="639"><net_src comp="591" pin="4"/><net_sink comp="635" pin=0"/></net>

<net id="640"><net_src comp="92" pin="0"/><net_sink comp="635" pin=1"/></net>

<net id="645"><net_src comp="635" pin="2"/><net_sink comp="641" pin=0"/></net>

<net id="646"><net_src comp="601" pin="3"/><net_sink comp="641" pin=1"/></net>

<net id="651"><net_src comp="601" pin="3"/><net_sink comp="647" pin=0"/></net>

<net id="652"><net_src comp="24" pin="0"/><net_sink comp="647" pin=1"/></net>

<net id="657"><net_src comp="609" pin="4"/><net_sink comp="653" pin=0"/></net>

<net id="658"><net_src comp="26" pin="0"/><net_sink comp="653" pin=1"/></net>

<net id="663"><net_src comp="653" pin="2"/><net_sink comp="659" pin=0"/></net>

<net id="664"><net_src comp="647" pin="2"/><net_sink comp="659" pin=1"/></net>

<net id="669"><net_src comp="659" pin="2"/><net_sink comp="665" pin=0"/></net>

<net id="670"><net_src comp="635" pin="2"/><net_sink comp="665" pin=1"/></net>

<net id="675"><net_src comp="629" pin="2"/><net_sink comp="671" pin=0"/></net>

<net id="676"><net_src comp="641" pin="2"/><net_sink comp="671" pin=1"/></net>

<net id="681"><net_src comp="671" pin="2"/><net_sink comp="677" pin=0"/></net>

<net id="682"><net_src comp="665" pin="2"/><net_sink comp="677" pin=1"/></net>

<net id="687"><net_src comp="677" pin="2"/><net_sink comp="683" pin=0"/></net>

<net id="688"><net_src comp="579" pin="1"/><net_sink comp="683" pin=1"/></net>

<net id="693"><net_src comp="579" pin="1"/><net_sink comp="689" pin=0"/></net>

<net id="694"><net_src comp="24" pin="0"/><net_sink comp="689" pin=1"/></net>

<net id="699"><net_src comp="683" pin="2"/><net_sink comp="695" pin=0"/></net>

<net id="700"><net_src comp="689" pin="2"/><net_sink comp="695" pin=1"/></net>

<net id="705"><net_src comp="591" pin="4"/><net_sink comp="701" pin=0"/></net>

<net id="706"><net_src comp="92" pin="0"/><net_sink comp="701" pin=1"/></net>

<net id="711"><net_src comp="609" pin="4"/><net_sink comp="707" pin=0"/></net>

<net id="712"><net_src comp="26" pin="0"/><net_sink comp="707" pin=1"/></net>

<net id="717"><net_src comp="707" pin="2"/><net_sink comp="713" pin=0"/></net>

<net id="718"><net_src comp="647" pin="2"/><net_sink comp="713" pin=1"/></net>

<net id="723"><net_src comp="713" pin="2"/><net_sink comp="719" pin=0"/></net>

<net id="724"><net_src comp="635" pin="2"/><net_sink comp="719" pin=1"/></net>

<net id="729"><net_src comp="701" pin="2"/><net_sink comp="725" pin=0"/></net>

<net id="730"><net_src comp="719" pin="2"/><net_sink comp="725" pin=1"/></net>

<net id="735"><net_src comp="725" pin="2"/><net_sink comp="731" pin=0"/></net>

<net id="736"><net_src comp="24" pin="0"/><net_sink comp="731" pin=1"/></net>

<net id="741"><net_src comp="579" pin="1"/><net_sink comp="737" pin=0"/></net>

<net id="742"><net_src comp="731" pin="2"/><net_sink comp="737" pin=1"/></net>

<net id="747"><net_src comp="147" pin="6"/><net_sink comp="743" pin=0"/></net>

<net id="748"><net_src comp="94" pin="0"/><net_sink comp="743" pin=1"/></net>

<net id="753"><net_src comp="147" pin="6"/><net_sink comp="749" pin=0"/></net>

<net id="754"><net_src comp="94" pin="0"/><net_sink comp="749" pin=1"/></net>

<net id="759"><net_src comp="749" pin="2"/><net_sink comp="755" pin=0"/></net>

<net id="760"><net_src comp="159" pin="6"/><net_sink comp="755" pin=1"/></net>

<net id="765"><net_src comp="159" pin="6"/><net_sink comp="761" pin=0"/></net>

<net id="766"><net_src comp="24" pin="0"/><net_sink comp="761" pin=1"/></net>

<net id="771"><net_src comp="171" pin="6"/><net_sink comp="767" pin=0"/></net>

<net id="772"><net_src comp="26" pin="0"/><net_sink comp="767" pin=1"/></net>

<net id="777"><net_src comp="767" pin="2"/><net_sink comp="773" pin=0"/></net>

<net id="778"><net_src comp="761" pin="2"/><net_sink comp="773" pin=1"/></net>

<net id="783"><net_src comp="773" pin="2"/><net_sink comp="779" pin=0"/></net>

<net id="784"><net_src comp="749" pin="2"/><net_sink comp="779" pin=1"/></net>

<net id="789"><net_src comp="743" pin="2"/><net_sink comp="785" pin=0"/></net>

<net id="790"><net_src comp="755" pin="2"/><net_sink comp="785" pin=1"/></net>

<net id="795"><net_src comp="785" pin="2"/><net_sink comp="791" pin=0"/></net>

<net id="796"><net_src comp="779" pin="2"/><net_sink comp="791" pin=1"/></net>

<net id="801"><net_src comp="791" pin="2"/><net_sink comp="797" pin=0"/></net>

<net id="802"><net_src comp="136" pin="6"/><net_sink comp="797" pin=1"/></net>

<net id="807"><net_src comp="136" pin="6"/><net_sink comp="803" pin=0"/></net>

<net id="808"><net_src comp="24" pin="0"/><net_sink comp="803" pin=1"/></net>

<net id="813"><net_src comp="797" pin="2"/><net_sink comp="809" pin=0"/></net>

<net id="814"><net_src comp="803" pin="2"/><net_sink comp="809" pin=1"/></net>

<net id="820"><net_src comp="96" pin="0"/><net_sink comp="815" pin=0"/></net>

<net id="821"><net_src comp="147" pin="6"/><net_sink comp="815" pin=1"/></net>

<net id="822"><net_src comp="18" pin="0"/><net_sink comp="815" pin=2"/></net>

<net id="827"><net_src comp="171" pin="6"/><net_sink comp="823" pin=0"/></net>

<net id="828"><net_src comp="26" pin="0"/><net_sink comp="823" pin=1"/></net>

<net id="833"><net_src comp="823" pin="2"/><net_sink comp="829" pin=0"/></net>

<net id="834"><net_src comp="761" pin="2"/><net_sink comp="829" pin=1"/></net>

<net id="839"><net_src comp="829" pin="2"/><net_sink comp="835" pin=0"/></net>

<net id="840"><net_src comp="749" pin="2"/><net_sink comp="835" pin=1"/></net>

<net id="845"><net_src comp="815" pin="3"/><net_sink comp="841" pin=0"/></net>

<net id="846"><net_src comp="835" pin="2"/><net_sink comp="841" pin=1"/></net>

<net id="851"><net_src comp="841" pin="2"/><net_sink comp="847" pin=0"/></net>

<net id="852"><net_src comp="24" pin="0"/><net_sink comp="847" pin=1"/></net>

<net id="857"><net_src comp="136" pin="6"/><net_sink comp="853" pin=0"/></net>

<net id="858"><net_src comp="847" pin="2"/><net_sink comp="853" pin=1"/></net>

<net id="863"><net_src comp="98" pin="0"/><net_sink comp="859" pin=0"/></net>

<net id="864"><net_src comp="195" pin="6"/><net_sink comp="859" pin=1"/></net>

<net id="869"><net_src comp="859" pin="2"/><net_sink comp="865" pin=0"/></net>

<net id="870"><net_src comp="207" pin="6"/><net_sink comp="865" pin=1"/></net>

<net id="875"><net_src comp="865" pin="2"/><net_sink comp="871" pin=0"/></net>

<net id="876"><net_src comp="219" pin="6"/><net_sink comp="871" pin=1"/></net>

<net id="881"><net_src comp="871" pin="2"/><net_sink comp="877" pin=0"/></net>

<net id="882"><net_src comp="231" pin="6"/><net_sink comp="877" pin=1"/></net>

<net id="887"><net_src comp="877" pin="2"/><net_sink comp="883" pin=0"/></net>

<net id="888"><net_src comp="244" pin="6"/><net_sink comp="883" pin=1"/></net>

<net id="892"><net_src comp="100" pin="2"/><net_sink comp="889" pin=0"/></net>

<net id="893"><net_src comp="889" pin="1"/><net_sink comp="255" pin=5"/></net>

<net id="894"><net_src comp="889" pin="1"/><net_sink comp="527" pin=1"/></net>

<net id="898"><net_src comp="106" pin="2"/><net_sink comp="895" pin=0"/></net>

<net id="899"><net_src comp="895" pin="1"/><net_sink comp="458" pin=0"/></net>

<net id="900"><net_src comp="895" pin="1"/><net_sink comp="255" pin=4"/></net>

<net id="901"><net_src comp="895" pin="1"/><net_sink comp="527" pin=3"/></net>

<net id="905"><net_src comp="112" pin="2"/><net_sink comp="902" pin=0"/></net>

<net id="906"><net_src comp="902" pin="1"/><net_sink comp="468" pin=1"/></net>

<net id="907"><net_src comp="902" pin="1"/><net_sink comp="255" pin=3"/></net>

<net id="908"><net_src comp="902" pin="1"/><net_sink comp="527" pin=5"/></net>

<net id="912"><net_src comp="118" pin="2"/><net_sink comp="909" pin=0"/></net>

<net id="913"><net_src comp="909" pin="1"/><net_sink comp="527" pin=7"/></net>

<net id="914"><net_src comp="909" pin="1"/><net_sink comp="557" pin=9"/></net>

<net id="918"><net_src comp="397" pin="2"/><net_sink comp="915" pin=0"/></net>

<net id="922"><net_src comp="427" pin="2"/><net_sink comp="919" pin=0"/></net>

<net id="926"><net_src comp="450" pin="3"/><net_sink comp="923" pin=0"/></net>

<net id="927"><net_src comp="923" pin="1"/><net_sink comp="461" pin=0"/></net>

<net id="931"><net_src comp="519" pin="3"/><net_sink comp="928" pin=0"/></net>

<net id="932"><net_src comp="928" pin="1"/><net_sink comp="255" pin=8"/></net>

<net id="936"><net_src comp="527" pin="8"/><net_sink comp="933" pin=0"/></net>

<net id="937"><net_src comp="933" pin="1"/><net_sink comp="127" pin=2"/></net>

<net id="941"><net_src comp="579" pin="1"/><net_sink comp="938" pin=0"/></net>

<net id="942"><net_src comp="938" pin="1"/><net_sink comp="275" pin=1"/></net>

<net id="943"><net_src comp="938" pin="1"/><net_sink comp="136" pin=4"/></net>

<net id="947"><net_src comp="583" pin="3"/><net_sink comp="944" pin=0"/></net>

<net id="948"><net_src comp="944" pin="1"/><net_sink comp="275" pin=2"/></net>

<net id="949"><net_src comp="944" pin="1"/><net_sink comp="183" pin=4"/></net>

<net id="953"><net_src comp="591" pin="4"/><net_sink comp="950" pin=0"/></net>

<net id="954"><net_src comp="950" pin="1"/><net_sink comp="275" pin=3"/></net>

<net id="955"><net_src comp="950" pin="1"/><net_sink comp="147" pin=4"/></net>

<net id="959"><net_src comp="601" pin="3"/><net_sink comp="956" pin=0"/></net>

<net id="960"><net_src comp="956" pin="1"/><net_sink comp="275" pin=4"/></net>

<net id="961"><net_src comp="956" pin="1"/><net_sink comp="159" pin=4"/></net>

<net id="965"><net_src comp="609" pin="4"/><net_sink comp="962" pin=0"/></net>

<net id="966"><net_src comp="962" pin="1"/><net_sink comp="275" pin=5"/></net>

<net id="967"><net_src comp="962" pin="1"/><net_sink comp="171" pin=4"/></net>

<net id="971"><net_src comp="695" pin="2"/><net_sink comp="968" pin=0"/></net>

<net id="975"><net_src comp="737" pin="2"/><net_sink comp="972" pin=0"/></net>

<net id="979"><net_src comp="341" pin="1"/><net_sink comp="976" pin=0"/></net>

<net id="980"><net_src comp="976" pin="1"/><net_sink comp="183" pin=2"/></net>

<net id="984"><net_src comp="341" pin="1"/><net_sink comp="981" pin=0"/></net>

<net id="985"><net_src comp="981" pin="1"/><net_sink comp="183" pin=0"/></net>

<net id="989"><net_src comp="809" pin="2"/><net_sink comp="986" pin=0"/></net>

<net id="993"><net_src comp="853" pin="2"/><net_sink comp="990" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: pReduceAngle : x_sign | {1 }
	Port: pReduceAngle : x_regime | {1 }
	Port: pReduceAngle : x_exponent | {1 }
	Port: pReduceAngle : x_mantissa | {1 }
  - Chain level:
	State 1
		icmp_ln23 : 1
		br_ln23 : 2
		zext_ln675_1 : 1
		mul_ln675 : 2
		zext_ln680 : 3
		tmp_45 : 4
	State 2
		add_ln680 : 1
		sf_r : 2
		icmp_ln703 : 3
		add_ln800 : 3
		regime_14 : 4
		icmp_ln803 : 5
		icmp_ln804 : 5
		select_ln804 : 6
		regime : 7
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
		result_isZero : 1
		result_regime : 1
		result_exponent : 1
		result_mantissa : 1
		tmp_18_i : 2
		storemerge_in_i : 3
		m_angle_sign_3 : 4
		m_angle_isZero : 4
		m_angle_regime_5 : 4
		m_angle_exponent_5 : 4
		m_angle_mantissa : 4
		tmp_48 : 4
		icmp_ln23_1 : 5
		icmp_ln24_1 : 5
		and_ln24 : 6
		xor_ln25_1 : 5
		icmp_ln25_1 : 5
		and_ln25_2 : 6
		and_ln25_3 : 6
		or_ln24 : 6
		absXGreaterEqual : 6
		xor_ln27 : 6
		not_m_angle_sign : 5
		retval_1_i : 6
		br_ln999 : 6
		icmp_ln23_2 : 5
		icmp_ln25_2 : 5
		and_ln25_4 : 6
		and_ln25_5 : 6
		absXGreaterEqual_1 : 6
		xor_ln27_1 : 6
		retval_1_i9 : 6
		br_ln1001 : 6
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
		m_angle_sign_1 : 1
		m_angle_isZero_2 : 1
		m_angle_regime_1 : 1
		m_angle_exponent_1 : 1
		m_angle_mantissa_2 : 1
		m_angle_sign : 1
		m_angle_isZero_1 : 1
		m_angle_regime : 1
		m_angle_exponent : 1
		m_angle_mantissa_1 : 1
		x_sign_3 : 2
		x_regime_6 : 2
		x_exponent_4 : 2
		y_mantissa : 2
		icmp_ln23_3 : 3
		icmp_ln24_2 : 3
		and_ln24_1 : 4
		xor_ln25_2 : 3
		icmp_ln25_3 : 3
		and_ln25_6 : 4
		and_ln25_7 : 4
		or_ln24_1 : 4
		absXGreaterEqual_2 : 4
		xor_ln27_2 : 4
		not_y_sign : 3
		retval_1_i20 : 4
		br_ln1006 : 4
		tmp_49 : 3
		icmp_ln25_4 : 3
		and_ln25_8 : 4
		and_ln25_9 : 4
		absXGreaterEqual_3 : 4
		xor_ln27_3 : 4
		retval_1_i31 : 4
	State 19
		call_ret7 : 1
		call_ret6 : 1
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
		m_angle_isZero_4 : 1
		m_angle_regime_3 : 1
		m_angle_exponent_3 : 1
		m_angle_mantissa_4 : 1
		result_isZero_5 : 1
		result_regime_14 : 1
		result_exponent_1 : 1
		result_mantissa_7 : 1
		ref_tmp_1440_2 : 2
		ref_tmp_3_2 : 2
		ref_tmp_4_2 : 2
		ref_tmp_5_2 : 2
		negate_write_assign : 1
		newret1 : 3
		newret3 : 4
		newret5 : 5
		newret7 : 6
		newret9 : 7
		ret_ln852 : 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-----------------------------|---------|---------|---------|
| Operation|       Functional Unit       |   DSP   |    FF   |   LUT   |
|----------|-----------------------------|---------|---------|---------|
|          |     grp_positAdd_fu_255     |    0    |   266   |   1589  |
|   call   |     grp_positAdd_fu_275     |    0    |   266   |   1589  |
|          |     grp_positAdd_fu_296     |    0    |   266   |   1589  |
|----------|-----------------------------|---------|---------|---------|
|          |       icmp_ln23_fu_397      |    0    |    0    |    12   |
|          |       icmp_ln24_fu_403      |    0    |    0    |    13   |
|          |       icmp_ln25_fu_415      |    0    |    0    |    37   |
|          |      icmp_ln703_fu_479      |    0    |    0    |    13   |
|          |      icmp_ln803_fu_499      |    0    |    0    |    13   |
|          |      icmp_ln804_fu_505      |    0    |    0    |    13   |
|          |      icmp_ln23_1_fu_629     |    0    |    0    |    12   |
|   icmp   |      icmp_ln24_1_fu_635     |    0    |    0    |    13   |
|          |      icmp_ln25_1_fu_653     |    0    |    0    |    37   |
|          |      icmp_ln23_2_fu_701     |    0    |    0    |    13   |
|          |      icmp_ln25_2_fu_707     |    0    |    0    |    37   |
|          |      icmp_ln23_3_fu_743     |    0    |    0    |    13   |
|          |      icmp_ln24_2_fu_749     |    0    |    0    |    13   |
|          |      icmp_ln25_3_fu_767     |    0    |    0    |    37   |
|          |      icmp_ln25_4_fu_823     |    0    |    0    |    37   |
|----------|-----------------------------|---------|---------|---------|
|    mul   |       mul_ln675_fu_330      |    10   |    0    |    38   |
|----------|-----------------------------|---------|---------|---------|
|          |       add_ln680_fu_468      |    0    |    0    |    13   |
|    add   |         sf_r_fu_473         |    0    |    0    |    13   |
|          |       add_ln800_fu_485      |    0    |    0    |    13   |
|----------|-----------------------------|---------|---------|---------|
|          |       and_ln25_fu_421       |    0    |    0    |    2    |
|          |  absXGreaterEqual_5_fu_427  |    0    |    0    |    2    |
|          |       and_ln24_fu_641       |    0    |    0    |    2    |
|          |      and_ln25_2_fu_659      |    0    |    0    |    2    |
|          |      and_ln25_3_fu_665      |    0    |    0    |    2    |
|          |      retval_1_i_fu_695      |    0    |    0    |    2    |
|          |      and_ln25_4_fu_713      |    0    |    0    |    2    |
|    and   |      and_ln25_5_fu_719      |    0    |    0    |    2    |
|          |      retval_1_i9_fu_737     |    0    |    0    |    2    |
|          |      and_ln24_1_fu_755      |    0    |    0    |    2    |
|          |      and_ln25_6_fu_773      |    0    |    0    |    2    |
|          |      and_ln25_7_fu_779      |    0    |    0    |    2    |
|          |     retval_1_i20_fu_809     |    0    |    0    |    2    |
|          |      and_ln25_8_fu_829      |    0    |    0    |    2    |
|          |      and_ln25_9_fu_835      |    0    |    0    |    2    |
|          |     retval_1_i31_fu_853     |    0    |    0    |    2    |
|----------|-----------------------------|---------|---------|---------|
|          |     select_ln680_fu_461     |    0    |    0    |    3    |
|  select  |       regime_14_fu_491      |    0    |    0    |    6    |
|          |     select_ln804_fu_511     |    0    |    0    |    6    |
|          |        regime_fu_519        |    0    |    0    |    6    |
|----------|-----------------------------|---------|---------|---------|
|          |       xor_ln25_fu_409       |    0    |    0    |    2    |
|          |      xor_ln25_1_fu_647      |    0    |    0    |    2    |
|          |       xor_ln27_fu_683       |    0    |    0    |    2    |
|          |   not_m_angle_sign_fu_689   |    0    |    0    |    2    |
|    xor   |      xor_ln27_1_fu_731      |    0    |    0    |    2    |
|          |      xor_ln25_2_fu_761      |    0    |    0    |    2    |
|          |      xor_ln27_2_fu_797      |    0    |    0    |    2    |
|          |      not_y_sign_fu_803      |    0    |    0    |    2    |
|          |      xor_ln27_3_fu_847      |    0    |    0    |    2    |
|----------|-----------------------------|---------|---------|---------|
|          |        or_ln24_fu_671       |    0    |    0    |    2    |
|          |   absXGreaterEqual_fu_677   |    0    |    0    |    2    |
|    or    |  absXGreaterEqual_1_fu_725  |    0    |    0    |    2    |
|          |       or_ln24_1_fu_785      |    0    |    0    |    2    |
|          |  absXGreaterEqual_2_fu_791  |    0    |    0    |    2    |
|          |  absXGreaterEqual_3_fu_841  |    0    |    0    |    2    |
|----------|-----------------------------|---------|---------|---------|
|          | x_mantissa_read_read_fu_100 |    0    |    0    |    0    |
|   read   | x_exponent_read_read_fu_106 |    0    |    0    |    0    |
|          |  x_regime_read_read_fu_112  |    0    |    0    |    0    |
|          |   x_sign_read_read_fu_118   |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |          grp_fu_335         |    0    |    0    |    0    |
|          |          grp_fu_341         |    0    |    0    |    0    |
|          |          grp_fu_345         |    0    |    0    |    0    |
|          |          grp_fu_351         |    0    |    0    |    0    |
|          |          grp_fu_357         |    0    |    0    |    0    |
|          |          grp_fu_363         |    0    |    0    |    0    |
|extractvalue|          grp_fu_369         |    0    |    0    |    0    |
|          |          grp_fu_375         |    0    |    0    |    0    |
|          |          grp_fu_381         |    0    |    0    |    0    |
|          |     result_isZero_fu_541    |    0    |    0    |    0    |
|          |     result_regime_fu_545    |    0    |    0    |    0    |
|          |    result_exponent_fu_549   |    0    |    0    |    0    |
|          |    result_mantissa_fu_553   |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |          tmp_fu_387         |    0    |    0    |    0    |
|partselect|   m_angle_regime_5_fu_591   |    0    |    0    |    0    |
|          |   m_angle_mantissa_fu_609   |    0    |    0    |    0    |
|          |        tmp_48_fu_619        |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |        shl_ln_fu_433        |    0    |    0    |    0    |
|bitconcatenate|         tmp_i_fu_527        |    0    |    0    |    0    |
|          |       tmp_18_i_fu_557       |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |     zext_ln675_1_fu_441     |    0    |    0    |    0    |
|   zext   |      zext_ln680_fu_446      |    0    |    0    |    0    |
|          |      zext_ln675_fu_458      |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |        tmp_45_fu_450        |    0    |    0    |    0    |
| bitselect|    m_angle_isZero_fu_583    |    0    |    0    |    0    |
|          |  m_angle_exponent_5_fu_601  |    0    |    0    |    0    |
|          |        tmp_49_fu_815        |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|   trunc  |    m_angle_sign_3_fu_579    |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |        newret1_fu_859       |    0    |    0    |    0    |
|          |        newret3_fu_865       |    0    |    0    |    0    |
|insertvalue|        newret5_fu_871       |    0    |    0    |    0    |
|          |        newret7_fu_877       |    0    |    0    |    0    |
|          |        newret9_fu_883       |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|   Total  |                             |    10   |   798   |   5240  |
|----------|-----------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+---------------------------+--------+
|                           |   FF   |
+---------------------------+--------+
| absXGreaterEqual_5_reg_919|    1   |
|     icmp_ln23_reg_915     |    1   |
| m_angle_exponent_5_reg_956|    1   |
|  m_angle_isZero_1_reg_981 |    1   |
|  m_angle_isZero_2_reg_976 |    1   |
|   m_angle_isZero_reg_944  |    1   |
|  m_angle_mantissa_reg_962 |   30   |
|  m_angle_regime_5_reg_950 |    6   |
|   m_angle_sign_3_reg_938  |    1   |
|negate_write_assign_reg_240|    1   |
|   ref_tmp_1440_2_reg_192  |    1   |
|    ref_tmp_3_2_reg_204    |    6   |
|    ref_tmp_4_2_reg_216    |    1   |
|    ref_tmp_5_2_reg_228    |   30   |
|       regime_reg_928      |    6   |
|    retval_1_i20_reg_986   |    1   |
|    retval_1_i31_reg_990   |    1   |
|    retval_1_i9_reg_972    |    1   |
|     retval_1_i_reg_968    |    1   |
|  storemerge_in_i_reg_124  |   94   |
|       tmp_45_reg_923      |    1   |
|       tmp_i_reg_933       |   94   |
|    x_exponent_4_reg_156   |    1   |
|  x_exponent_read_reg_895  |    1   |
|  x_mantissa_read_reg_889  |   30   |
|     x_regime_6_reg_144    |    6   |
|   x_regime_read_reg_902   |    6   |
|      x_sign_3_reg_133     |    1   |
|    x_sign_read_reg_909    |    1   |
|      y_isZero_reg_180     |    1   |
|     y_mantissa_reg_168    |   30   |
+---------------------------+--------+
|           Total           |   358  |
+---------------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||    FF   ||   LUT   |
|---------------------|------|------|------|--------||---------||---------||---------|
| grp_positAdd_fu_275 |  p1  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_275 |  p6  |   2  |   1  |    2   |
| grp_positAdd_fu_296 |  p1  |   2  |   1  |    2   |
| grp_positAdd_fu_296 |  p2  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_296 |  p3  |   2  |   6  |   12   ||    0    ||    9    |
| grp_positAdd_fu_296 |  p4  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_296 |  p5  |   2  |  30  |   60   ||    0    ||    9    |
| grp_positAdd_fu_296 |  p6  |   2  |   1  |    2   |
| grp_positAdd_fu_296 |  p7  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_296 |  p8  |   2  |   6  |   12   ||    0    ||    9    |
| grp_positAdd_fu_296 |  p9  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_296 |  p10 |   2  |  30  |   60   ||    0    ||    9    |
|---------------------|------|------|------|--------||---------||---------||---------|
|        Total        |      |      |      |   160  ||  5.868  ||    0    ||    81   |
|---------------------|------|------|------|--------||---------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |   DSP  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |   10   |    -   |   798  |  5240  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    5   |    0   |   81   |
|  Register |    -   |    -   |   358  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |   10   |    5   |  1156  |  5321  |
+-----------+--------+--------+--------+--------+
