

================================================================
== Vitis HLS Report for 'pAccumulateFC_Pipeline_VITIS_LOOP_1345_1'
================================================================
* Date:           Tue Apr  8 14:32:54 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        PositFFT
* Solution:       hls (Vivado IP Flow Target)
* Product family: azynquplus
* Target device:  xazu7ev-fbvb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.290 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |      569|      569|  5.690 us|  5.690 us|  520|  520|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_1345_1  |      567|      567|        64|          8|          1|    64|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 64


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 64
* Pipeline : 1
  Pipeline-0 : II = 8, D = 64, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.87>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%x_regime = alloca i32 1" [posit_lib.cpp:1232->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 67 'alloca' 'x_regime' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%x_mantissa = alloca i32 1" [posit_lib.cpp:1232->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 68 'alloca' 'x_mantissa' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%realSum_regime_write_assign = alloca i32 1"   --->   Operation 69 'alloca' 'realSum_regime_write_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%realSum_mantissa_write_assign = alloca i32 1"   --->   Operation 70 'alloca' 'realSum_mantissa_write_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%imagSum_regime_write_assign = alloca i32 1"   --->   Operation 71 'alloca' 'imagSum_regime_write_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%imagSum_mantissa_write_assign = alloca i32 1"   --->   Operation 72 'alloca' 'imagSum_mantissa_write_assign' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%n = alloca i32 1" [posit_lib.cpp:1345]   --->   Operation 73 'alloca' 'n' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%deltaTheta_mantissa_read = read i30 @_ssdm_op_Read.ap_auto.i30, i30 %deltaTheta_mantissa"   --->   Operation 74 'read' 'deltaTheta_mantissa_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%deltaTheta_regime_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %deltaTheta_regime"   --->   Operation 75 'read' 'deltaTheta_regime_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%deltaTheta_isZero_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %deltaTheta_isZero"   --->   Operation 76 'read' 'deltaTheta_isZero_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%deltaTheta_sign_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %deltaTheta_sign"   --->   Operation 77 'read' 'deltaTheta_sign_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%conv3_i_i351_i_read = read i30 @_ssdm_op_Read.ap_auto.i30, i30 %conv3_i_i351_i"   --->   Operation 78 'read' 'conv3_i_i351_i_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%add_i321_i_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %add_i321_i"   --->   Operation 79 'read' 'add_i321_i_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_55 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %empty"   --->   Operation 80 'read' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_56 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %empty_5"   --->   Operation 81 'read' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%conv3_i_i351_i_cast = zext i30 %conv3_i_i351_i_read"   --->   Operation 82 'zext' 'conv3_i_i351_i_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.48ns)   --->   "%store_ln1345 = store i7 0, i7 %n" [posit_lib.cpp:1345]   --->   Operation 83 'store' 'store_ln1345' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 84 [1/1] (0.48ns)   --->   "%store_ln0 = store i30 536870912, i30 %imagSum_mantissa_write_assign"   --->   Operation 84 'store' 'store_ln0' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 85 [1/1] (0.48ns)   --->   "%store_ln0 = store i6 0, i6 %imagSum_regime_write_assign"   --->   Operation 85 'store' 'store_ln0' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 86 [1/1] (0.48ns)   --->   "%store_ln0 = store i30 536870912, i30 %realSum_mantissa_write_assign"   --->   Operation 86 'store' 'store_ln0' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 87 [1/1] (0.48ns)   --->   "%store_ln0 = store i6 0, i6 %realSum_regime_write_assign"   --->   Operation 87 'store' 'store_ln0' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 88 [1/1] (0.48ns)   --->   "%store_ln1232 = store i30 0, i30 %x_mantissa" [posit_lib.cpp:1232->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 88 'store' 'store_ln1232' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 89 [1/1] (0.48ns)   --->   "%store_ln1232 = store i6 0, i6 %x_regime" [posit_lib.cpp:1232->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 89 'store' 'store_ln1232' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 90 [1/1] (0.48ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 90 'br' 'br_ln0' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%n_1 = load i7 %n" [posit_lib.cpp:1345]   --->   Operation 91 'load' 'n_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.89ns)   --->   "%icmp_ln1345 = icmp_eq  i7 %n_1, i7 64" [posit_lib.cpp:1345]   --->   Operation 92 'icmp' 'icmp_ln1345' <Predicate = true> <Delay = 0.89> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 93 [1/1] (0.89ns)   --->   "%add_ln1345 = add i7 %n_1, i7 1" [posit_lib.cpp:1345]   --->   Operation 93 'add' 'add_ln1345' <Predicate = true> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 94 [1/1] (0.48ns)   --->   "%store_ln1345 = store i7 %add_ln1345, i7 %n" [posit_lib.cpp:1345]   --->   Operation 94 'store' 'store_ln1345' <Predicate = (!icmp_ln1345)> <Delay = 0.48>

State 2 <SV = 1> <Delay = 6.84>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%angle_exponent = phi i1 0, void %newFuncRoot, i1 %newret14, void %for.inc.split_ifconv" [posit_lib.cpp:1357]   --->   Operation 95 'phi' 'angle_exponent' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%angle_isZero = phi i1 1, void %newFuncRoot, i1 %newret12, void %for.inc.split_ifconv" [posit_lib.cpp:1357]   --->   Operation 96 'phi' 'angle_isZero' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 97 [1/1] (0.00ns)   --->   "%angle_sign = phi i1 0, void %newFuncRoot, i1 %newret11, void %for.inc.split_ifconv" [posit_lib.cpp:1357]   --->   Operation 97 'phi' 'angle_sign' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%x_regime_load = load i6 %x_regime" [posit_lib.cpp:1357]   --->   Operation 98 'load' 'x_regime_load' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%x_mantissa_load = load i30 %x_mantissa" [posit_lib.cpp:1357]   --->   Operation 99 'load' 'x_mantissa_load' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_2 : Operation 100 [52/52] (0.54ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 100 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_2 : Operation 101 [26/26] (5.04ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 101 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 5.04> <CoreType = "Generic">   --->   Generic Core
ST_2 : Operation 102 [8/8] (6.84ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 102 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 3 <SV = 2> <Delay = 7.28>
ST_3 : Operation 103 [51/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 103 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_3 : Operation 104 [25/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 104 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core
ST_3 : Operation 105 [7/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 105 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 4 <SV = 3> <Delay = 7.28>
ST_4 : Operation 106 [50/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 106 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_4 : Operation 107 [24/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 107 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core
ST_4 : Operation 108 [6/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 108 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 5 <SV = 4> <Delay = 7.28>
ST_5 : Operation 109 [49/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 109 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_5 : Operation 110 [23/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 110 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core
ST_5 : Operation 111 [5/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 111 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 6 <SV = 5> <Delay = 7.28>
ST_6 : Operation 112 [48/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 112 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_6 : Operation 113 [22/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 113 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core
ST_6 : Operation 114 [4/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 114 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 7 <SV = 6> <Delay = 7.28>
ST_7 : Operation 115 [47/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 115 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_7 : Operation 116 [21/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 116 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core
ST_7 : Operation 117 [3/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 117 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 8 <SV = 7> <Delay = 7.28>
ST_8 : Operation 118 [46/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 118 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_8 : Operation 119 [20/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 119 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core
ST_8 : Operation 120 [2/8] (7.14ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 120 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 9 <SV = 8> <Delay = 7.28>
ST_9 : Operation 121 [45/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 121 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_9 : Operation 122 [19/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 122 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core
ST_9 : Operation 123 [1/8] (0.54ns)   --->   "%call_ret5 = call i39 @positAdd, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load, i1 %deltaTheta_sign_read, i1 %deltaTheta_isZero_read, i6 %deltaTheta_regime_read, i1 0, i30 %deltaTheta_mantissa_read" [posit_lib.cpp:1357]   --->   Operation 123 'call' 'call_ret5' <Predicate = (!icmp_ln1345)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_9 : Operation 124 [1/1] (0.00ns)   --->   "%newret11 = extractvalue i39 %call_ret5" [posit_lib.cpp:1357]   --->   Operation 124 'extractvalue' 'newret11' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "%newret12 = extractvalue i39 %call_ret5" [posit_lib.cpp:1357]   --->   Operation 125 'extractvalue' 'newret12' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (0.00ns)   --->   "%newret13 = extractvalue i39 %call_ret5" [posit_lib.cpp:1357]   --->   Operation 126 'extractvalue' 'newret13' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_9 : Operation 127 [1/1] (0.00ns)   --->   "%newret14 = extractvalue i39 %call_ret5" [posit_lib.cpp:1357]   --->   Operation 127 'extractvalue' 'newret14' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_9 : Operation 128 [1/1] (0.00ns)   --->   "%newret = extractvalue i39 %call_ret5" [posit_lib.cpp:1357]   --->   Operation 128 'extractvalue' 'newret' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_9 : Operation 129 [1/1] (0.48ns)   --->   "%store_ln1232 = store i30 %newret, i30 %x_mantissa" [posit_lib.cpp:1232->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 129 'store' 'store_ln1232' <Predicate = (!icmp_ln1345)> <Delay = 0.48>
ST_9 : Operation 130 [1/1] (0.48ns)   --->   "%store_ln1232 = store i6 %newret13, i6 %x_regime" [posit_lib.cpp:1232->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 130 'store' 'store_ln1232' <Predicate = (!icmp_ln1345)> <Delay = 0.48>

State 10 <SV = 9> <Delay = 7.28>
ST_10 : Operation 131 [44/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 131 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_10 : Operation 132 [18/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 132 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 11 <SV = 10> <Delay = 7.28>
ST_11 : Operation 133 [43/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 133 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_11 : Operation 134 [17/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 134 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 12 <SV = 11> <Delay = 7.28>
ST_12 : Operation 135 [42/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 135 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_12 : Operation 136 [16/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 136 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 13 <SV = 12> <Delay = 7.28>
ST_13 : Operation 137 [41/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 137 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_13 : Operation 138 [15/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 138 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 14 <SV = 13> <Delay = 7.28>
ST_14 : Operation 139 [40/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 139 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_14 : Operation 140 [14/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 140 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 15 <SV = 14> <Delay = 7.28>
ST_15 : Operation 141 [39/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 141 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_15 : Operation 142 [13/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 142 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 16 <SV = 15> <Delay = 7.28>
ST_16 : Operation 143 [38/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 143 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_16 : Operation 144 [12/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 144 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 17 <SV = 16> <Delay = 7.28>
ST_17 : Operation 145 [37/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 145 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_17 : Operation 146 [11/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 146 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 18 <SV = 17> <Delay = 7.28>
ST_18 : Operation 147 [36/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 147 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_18 : Operation 148 [10/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 148 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 19 <SV = 18> <Delay = 7.28>
ST_19 : Operation 149 [35/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 149 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_19 : Operation 150 [9/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 150 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 20 <SV = 19> <Delay = 7.28>
ST_20 : Operation 151 [34/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 151 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_20 : Operation 152 [8/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 152 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 21 <SV = 20> <Delay = 7.28>
ST_21 : Operation 153 [33/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 153 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_21 : Operation 154 [7/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 154 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 22 <SV = 21> <Delay = 7.28>
ST_22 : Operation 155 [32/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 155 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_22 : Operation 156 [6/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 156 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 23 <SV = 22> <Delay = 7.28>
ST_23 : Operation 157 [31/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 157 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_23 : Operation 158 [5/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 158 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 24 <SV = 23> <Delay = 7.28>
ST_24 : Operation 159 [30/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 159 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_24 : Operation 160 [4/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 160 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 25 <SV = 24> <Delay = 7.28>
ST_25 : Operation 161 [29/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 161 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_25 : Operation 162 [3/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 162 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 26 <SV = 25> <Delay = 7.28>
ST_26 : Operation 163 [28/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 163 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_26 : Operation 164 [2/26] (7.28ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 164 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 7.28> <CoreType = "Generic">   --->   Generic Core

State 27 <SV = 26> <Delay = 7.14>
ST_27 : Operation 165 [27/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 165 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_27 : Operation 166 [1/26] (1.42ns)   --->   "%call_ret1_i = call i39 @pNAngle, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 166 'call' 'call_ret1_i' <Predicate = (!icmp_ln1345)> <Delay = 1.42> <CoreType = "Generic">   --->   Generic Core
ST_27 : Operation 167 [1/1] (0.00ns)   --->   "%x_sign_1 = extractvalue i39 %call_ret1_i" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 167 'extractvalue' 'x_sign_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 168 [1/1] (0.00ns)   --->   "%x_isZero_4 = extractvalue i39 %call_ret1_i" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 168 'extractvalue' 'x_isZero_4' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 169 [1/1] (0.00ns)   --->   "%x_regime_4 = extractvalue i39 %call_ret1_i" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 169 'extractvalue' 'x_regime_4' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 170 [1/1] (0.00ns)   --->   "%x_exponent_2 = extractvalue i39 %call_ret1_i" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 170 'extractvalue' 'x_exponent_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 171 [1/1] (0.00ns)   --->   "%x_mantissa_4 = extractvalue i39 %call_ret1_i" [posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 171 'extractvalue' 'x_mantissa_4' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 172 [1/1] (5.52ns)   --->   "%call_ret2_i = call i38 @positMul, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4" [posit_lib.cpp:1237->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 172 'call' 'call_ret2_i' <Predicate = (!icmp_ln1345)> <Delay = 5.52> <CoreType = "Generic">   --->   Generic Core
ST_27 : Operation 173 [1/1] (0.00ns)   --->   "%newret2_i = extractvalue i38 %call_ret2_i" [posit_lib.cpp:1237->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 173 'extractvalue' 'newret2_i' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 174 [1/1] (0.00ns)   --->   "%newret4_i = extractvalue i38 %call_ret2_i" [posit_lib.cpp:1237->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 174 'extractvalue' 'newret4_i' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 175 [1/1] (0.00ns)   --->   "%newret6_i = extractvalue i38 %call_ret2_i" [posit_lib.cpp:1237->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 175 'extractvalue' 'newret6_i' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_27 : Operation 176 [1/1] (0.00ns)   --->   "%newret8_i = extractvalue i38 %call_ret2_i" [posit_lib.cpp:1237->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 176 'extractvalue' 'newret8_i' <Predicate = (!icmp_ln1345)> <Delay = 0.00>

State 28 <SV = 27> <Delay = 7.14>
ST_28 : Operation 177 [26/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 177 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_28 : Operation 178 [1/1] (5.52ns)   --->   "%call_ret3_i = call i38 @positMul, i1 %newret2_i, i1 %newret4_i, i6 %newret6_i, i1 0, i30 %newret8_i, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4" [posit_lib.cpp:1238->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 178 'call' 'call_ret3_i' <Predicate = (!icmp_ln1345)> <Delay = 5.52> <CoreType = "Generic">   --->   Generic Core
ST_28 : Operation 179 [1/1] (0.00ns)   --->   "%in_sign = extractvalue i38 %call_ret3_i" [posit_lib.cpp:1238->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 179 'extractvalue' 'in_sign' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_28 : Operation 180 [1/1] (0.00ns)   --->   "%in_isZero = extractvalue i38 %call_ret3_i" [posit_lib.cpp:1238->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 180 'extractvalue' 'in_isZero' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_28 : Operation 181 [1/1] (0.00ns)   --->   "%in_regime = extractvalue i38 %call_ret3_i" [posit_lib.cpp:1238->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 181 'extractvalue' 'in_regime' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_28 : Operation 182 [1/1] (0.00ns)   --->   "%in_mantissa = extractvalue i38 %call_ret3_i" [posit_lib.cpp:1238->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 182 'extractvalue' 'in_mantissa' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_28 : Operation 183 [1/1] (0.00ns)   --->   "%sext_ln629 = sext i6 %in_regime" [posit_lib.cpp:629->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 183 'sext' 'sext_ln629' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_28 : Operation 184 [1/1] (0.88ns)   --->   "%add_ln629 = add i7 %sext_ln629, i7 125" [posit_lib.cpp:629->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 184 'add' 'add_ln629' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 185 [1/1] (0.00ns)   --->   "%tmp_i = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %add_ln629, i32 5" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 185 'partselect' 'tmp_i' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_28 : Operation 186 [1/1] (0.62ns)   --->   "%icmp_ln631 = icmp_eq  i2 %tmp_i, i2 2" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 186 'icmp' 'icmp_ln631' <Predicate = (!icmp_ln1345)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 187 [1/1] (0.00ns)   --->   "%result_regime_19 = trunc i7 %add_ln629" [posit_lib.cpp:635->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 187 'trunc' 'result_regime_19' <Predicate = (!icmp_ln1345)> <Delay = 0.00>

State 29 <SV = 28> <Delay = 7.28>
ST_29 : Operation 188 [25/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 188 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_29 : Operation 189 [1/1] (5.52ns)   --->   "%call_ret4_i = call i38 @positMul, i1 %newret2_i, i1 %newret4_i, i6 %newret6_i, i1 0, i30 %newret8_i, i1 %in_sign, i1 %in_isZero, i6 %in_regime, i1 0, i30 %in_mantissa" [posit_lib.cpp:1240->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 189 'call' 'call_ret4_i' <Predicate = (!icmp_ln1345)> <Delay = 5.52> <CoreType = "Generic">   --->   Generic Core
ST_29 : Operation 190 [1/1] (0.00ns)   --->   "%in_sign_1 = extractvalue i38 %call_ret4_i" [posit_lib.cpp:1240->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 190 'extractvalue' 'in_sign_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_29 : Operation 191 [1/1] (0.00ns)   --->   "%in_isZero_1 = extractvalue i38 %call_ret4_i" [posit_lib.cpp:1240->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 191 'extractvalue' 'in_isZero_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_29 : Operation 192 [1/1] (0.00ns)   --->   "%in_regime_1 = extractvalue i38 %call_ret4_i" [posit_lib.cpp:1240->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 192 'extractvalue' 'in_regime_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_29 : Operation 193 [1/1] (0.00ns)   --->   "%in_mantissa_1 = extractvalue i38 %call_ret4_i" [posit_lib.cpp:1240->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 193 'extractvalue' 'in_mantissa_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_29 : Operation 194 [1/1] (0.44ns)   --->   "%result_regime_27 = select i1 %icmp_ln631, i6 34, i6 %result_regime_19" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 194 'select' 'result_regime_27' <Predicate = (!icmp_ln1345)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 195 [1/1] (0.33ns)   --->   "%y_sign_1 = xor i1 %in_sign, i1 1" [posit_lib.cpp:851->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 195 'xor' 'y_sign_1' <Predicate = (!icmp_ln1345)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 196 [8/8] (6.84ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 196 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 30 <SV = 29> <Delay = 7.14>
ST_30 : Operation 197 [24/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 197 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_30 : Operation 198 [1/1] (5.52ns)   --->   "%call_ret_i = call i38 @positMul, i1 %newret2_i, i1 %newret4_i, i6 %newret6_i, i1 0, i30 %newret8_i, i1 %in_sign_1, i1 %in_isZero_1, i6 %in_regime_1, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1243->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 198 'call' 'call_ret_i' <Predicate = (!icmp_ln1345)> <Delay = 5.52> <CoreType = "Generic">   --->   Generic Core
ST_30 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node y_sign_3)   --->   "%in_sign_2 = extractvalue i38 %call_ret_i" [posit_lib.cpp:1243->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 199 'extractvalue' 'in_sign_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_30 : Operation 200 [1/1] (0.00ns)   --->   "%in_isZero_2 = extractvalue i38 %call_ret_i" [posit_lib.cpp:1243->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 200 'extractvalue' 'in_isZero_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_30 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node add_ln629_2)   --->   "%in_regime_2 = extractvalue i38 %call_ret_i" [posit_lib.cpp:1243->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 201 'extractvalue' 'in_regime_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_30 : Operation 202 [1/1] (0.00ns)   --->   "%in_mantissa_2 = extractvalue i38 %call_ret_i" [posit_lib.cpp:1243->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 202 'extractvalue' 'in_mantissa_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_30 : Operation 203 [7/8] (7.14ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 203 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_30 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node add_ln629_2)   --->   "%sext_ln629_3 = sext i6 %in_regime_2" [posit_lib.cpp:629->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 204 'sext' 'sext_ln629_3' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_30 : Operation 205 [1/1] (0.88ns) (out node of the LUT)   --->   "%add_ln629_2 = add i7 %sext_ln629_3, i7 116" [posit_lib.cpp:629->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 205 'add' 'add_ln629_2' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_5_i = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %add_ln629_2, i32 5" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 206 'partselect' 'tmp_5_i' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_30 : Operation 207 [1/1] (0.62ns)   --->   "%icmp_ln631_3 = icmp_eq  i2 %tmp_5_i, i2 2" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 207 'icmp' 'icmp_ln631_3' <Predicate = (!icmp_ln1345)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 208 [1/1] (0.00ns)   --->   "%result_regime_25 = trunc i7 %add_ln629_2" [posit_lib.cpp:635->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 208 'trunc' 'result_regime_25' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_30 : Operation 209 [1/1] (0.33ns) (out node of the LUT)   --->   "%y_sign_3 = xor i1 %in_sign_2, i1 1" [posit_lib.cpp:851->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 209 'xor' 'y_sign_3' <Predicate = (!icmp_ln1345)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 7.14>
ST_31 : Operation 210 [23/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 210 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_31 : Operation 211 [6/8] (7.14ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 211 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_31 : Operation 212 [1/1] (0.44ns)   --->   "%result_regime_28 = select i1 %icmp_ln631_3, i6 34, i6 %result_regime_25" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 212 'select' 'result_regime_28' <Predicate = (!icmp_ln1345)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 32 <SV = 31> <Delay = 7.14>
ST_32 : Operation 213 [22/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 213 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_32 : Operation 214 [5/8] (7.14ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 214 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 33 <SV = 32> <Delay = 7.14>
ST_33 : Operation 215 [21/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 215 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_33 : Operation 216 [4/8] (7.14ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 216 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 34 <SV = 33> <Delay = 7.14>
ST_34 : Operation 217 [20/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 217 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_34 : Operation 218 [3/8] (7.14ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 218 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 35 <SV = 34> <Delay = 7.14>
ST_35 : Operation 219 [19/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 219 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_35 : Operation 220 [2/8] (7.14ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 220 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 36 <SV = 35> <Delay = 7.14>
ST_36 : Operation 221 [18/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 221 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_36 : Operation 222 [1/8] (0.54ns)   --->   "%call_ret5_i = call i39 @positAdd, i1 %x_sign_1, i1 %x_isZero_4, i6 %x_regime_4, i1 %x_exponent_2, i30 %x_mantissa_4, i1 %y_sign_1, i1 %in_isZero, i6 %result_regime_27, i1 0, i30 %in_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 222 'call' 'call_ret5_i' <Predicate = (!icmp_ln1345)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_36 : Operation 223 [1/1] (0.00ns)   --->   "%result_sign = extractvalue i39 %call_ret5_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 223 'extractvalue' 'result_sign' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_36 : Operation 224 [1/1] (0.00ns)   --->   "%result_isZero = extractvalue i39 %call_ret5_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 224 'extractvalue' 'result_isZero' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_36 : Operation 225 [1/1] (0.00ns)   --->   "%result_regime = extractvalue i39 %call_ret5_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 225 'extractvalue' 'result_regime' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_36 : Operation 226 [1/1] (0.00ns)   --->   "%result_exponent = extractvalue i39 %call_ret5_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 226 'extractvalue' 'result_exponent' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_36 : Operation 227 [1/1] (0.00ns)   --->   "%result_mantissa = extractvalue i39 %call_ret5_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 227 'extractvalue' 'result_mantissa' <Predicate = (!icmp_ln1345)> <Delay = 0.00>

State 37 <SV = 36> <Delay = 7.14>
ST_37 : Operation 228 [17/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 228 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_37 : Operation 229 [1/1] (0.00ns)   --->   "%sext_ln629_2 = sext i6 %in_regime_1" [posit_lib.cpp:629->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 229 'sext' 'sext_ln629_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_37 : Operation 230 [1/1] (0.88ns)   --->   "%add_ln629_1 = add i7 %sext_ln629_2, i7 121" [posit_lib.cpp:629->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 230 'add' 'add_ln629_1' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 231 [1/1] (0.00ns)   --->   "%tmp_i_77 = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %add_ln629_1, i32 5" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 231 'partselect' 'tmp_i_77' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_37 : Operation 232 [1/1] (0.62ns)   --->   "%icmp_ln631_2 = icmp_eq  i2 %tmp_i_77, i2 2" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 232 'icmp' 'icmp_ln631_2' <Predicate = (!icmp_ln1345)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 233 [1/1] (0.00ns)   --->   "%result_regime_22 = trunc i7 %add_ln629_1" [posit_lib.cpp:635->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 233 'trunc' 'result_regime_22' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_37 : Operation 234 [1/1] (0.44ns)   --->   "%result_regime_23 = select i1 %icmp_ln631_2, i6 34, i6 %result_regime_22" [posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 234 'select' 'result_regime_23' <Predicate = (!icmp_ln1345)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 38 <SV = 37> <Delay = 7.14>
ST_38 : Operation 235 [16/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 235 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_38 : Operation 236 [8/8] (6.84ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 236 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 39 <SV = 38> <Delay = 7.14>
ST_39 : Operation 237 [15/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 237 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_39 : Operation 238 [7/8] (7.14ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 238 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 40 <SV = 39> <Delay = 7.14>
ST_40 : Operation 239 [14/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 239 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_40 : Operation 240 [6/8] (7.14ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 240 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 41 <SV = 40> <Delay = 7.14>
ST_41 : Operation 241 [13/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 241 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_41 : Operation 242 [5/8] (7.14ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 242 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 42 <SV = 41> <Delay = 7.14>
ST_42 : Operation 243 [12/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 243 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_42 : Operation 244 [4/8] (7.14ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 244 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 43 <SV = 42> <Delay = 7.14>
ST_43 : Operation 245 [11/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 245 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_43 : Operation 246 [3/8] (7.14ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 246 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 44 <SV = 43> <Delay = 7.14>
ST_44 : Operation 247 [10/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 247 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_44 : Operation 248 [2/8] (7.14ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 248 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 45 <SV = 44> <Delay = 7.14>
ST_45 : Operation 249 [9/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 249 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_45 : Operation 250 [1/8] (0.54ns)   --->   "%call_ret6_i = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime, i1 %result_exponent, i30 %result_mantissa, i1 %in_sign_1, i1 %in_isZero_1, i6 %result_regime_23, i1 0, i30 %in_mantissa_1" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 250 'call' 'call_ret6_i' <Predicate = (!icmp_ln1345)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_45 : Operation 251 [1/1] (0.00ns)   --->   "%x_sign_2 = extractvalue i39 %call_ret6_i" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 251 'extractvalue' 'x_sign_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_45 : Operation 252 [1/1] (0.00ns)   --->   "%x_isZero_5 = extractvalue i39 %call_ret6_i" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 252 'extractvalue' 'x_isZero_5' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_45 : Operation 253 [1/1] (0.00ns)   --->   "%x_regime_5 = extractvalue i39 %call_ret6_i" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 253 'extractvalue' 'x_regime_5' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_45 : Operation 254 [1/1] (0.00ns)   --->   "%x_exponent_3 = extractvalue i39 %call_ret6_i" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 254 'extractvalue' 'x_exponent_3' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_45 : Operation 255 [1/1] (0.00ns)   --->   "%x_mantissa_5 = extractvalue i39 %call_ret6_i" [posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 255 'extractvalue' 'x_mantissa_5' <Predicate = (!icmp_ln1345)> <Delay = 0.00>

State 46 <SV = 45> <Delay = 7.14>
ST_46 : Operation 256 [8/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 256 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 47 <SV = 46> <Delay = 7.14>
ST_47 : Operation 257 [7/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 257 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_47 : Operation 258 [8/8] (6.84ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 258 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 48 <SV = 47> <Delay = 7.14>
ST_48 : Operation 259 [6/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 259 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_48 : Operation 260 [7/8] (7.14ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 260 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 49 <SV = 48> <Delay = 7.14>
ST_49 : Operation 261 [5/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 261 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_49 : Operation 262 [6/8] (7.14ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 262 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 50 <SV = 49> <Delay = 7.14>
ST_50 : Operation 263 [4/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 263 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_50 : Operation 264 [5/8] (7.14ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 264 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 51 <SV = 50> <Delay = 7.14>
ST_51 : Operation 265 [3/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 265 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_51 : Operation 266 [4/8] (7.14ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 266 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 52 <SV = 51> <Delay = 7.14>
ST_52 : Operation 267 [2/52] (7.14ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 267 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_52 : Operation 268 [3/8] (7.14ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 268 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 53 <SV = 52> <Delay = 7.14>
ST_53 : Operation 269 [1/52] (1.42ns)   --->   "%call_ret2 = call i39 @positCos, i1 %angle_sign, i1 %angle_isZero, i6 %x_regime_load, i1 %angle_exponent, i30 %x_mantissa_load" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 269 'call' 'call_ret2' <Predicate = (!icmp_ln1345)> <Delay = 1.42> <CoreType = "Generic">   --->   Generic Core
ST_53 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node sign_3)   --->   "%realPart_sign = extractvalue i39 %call_ret2" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 270 'extractvalue' 'realPart_sign' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node isZero)   --->   "%realPart_isZero = extractvalue i39 %call_ret2" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 271 'extractvalue' 'realPart_isZero' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 272 [1/1] (0.00ns)   --->   "%realPart_regime = extractvalue i39 %call_ret2" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 272 'extractvalue' 'realPart_regime' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 273 [1/1] (0.00ns)   --->   "%realPart_exponent = extractvalue i39 %call_ret2" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 273 'extractvalue' 'realPart_exponent' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 274 [1/1] (0.00ns)   --->   "%realPart_mantissa = extractvalue i39 %call_ret2" [posit_lib.cpp:1271->posit_lib.cpp:1351]   --->   Operation 274 'extractvalue' 'realPart_mantissa' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 275 [2/8] (7.14ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 275 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_53 : Operation 276 [1/1] (0.00ns)   --->   "%zext_ln748 = zext i30 %realPart_mantissa" [posit_lib.cpp:748->posit_lib.cpp:1354]   --->   Operation 276 'zext' 'zext_ln748' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node sign_3)   --->   "%sign = xor i1 %tmp_56, i1 %realPart_sign" [posit_lib.cpp:751->posit_lib.cpp:1354]   --->   Operation 277 'xor' 'sign' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 278 [1/1] (0.33ns) (out node of the LUT)   --->   "%isZero = or i1 %realPart_isZero, i1 %tmp_55" [posit_lib.cpp:753->posit_lib.cpp:1354]   --->   Operation 278 'or' 'isZero' <Predicate = (!icmp_ln1345)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 279 [1/1] (0.00ns)   --->   "%sext_ln756 = sext i6 %realPart_regime" [posit_lib.cpp:756->posit_lib.cpp:1354]   --->   Operation 279 'sext' 'sext_ln756' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln756 = zext i1 %realPart_exponent" [posit_lib.cpp:756->posit_lib.cpp:1354]   --->   Operation 280 'zext' 'zext_ln756' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 281 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln757 = add i7 %sext_ln756, i7 %zext_ln756" [posit_lib.cpp:757->posit_lib.cpp:1354]   --->   Operation 281 'add' 'add_ln757' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_53 : Operation 282 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%sf_r = add i7 %add_ln757, i7 %add_i321_i_read" [posit_lib.cpp:757->posit_lib.cpp:1354]   --->   Operation 282 'add' 'sf_r' <Predicate = (!icmp_ln1345)> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_53 : Operation 283 [1/1] (0.00ns)   --->   "%trunc_ln734 = trunc i7 %sf_r" [posit_lib.cpp:734->posit_lib.cpp:1354]   --->   Operation 283 'trunc' 'trunc_ln734' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 284 [1/1] (0.00ns)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %sf_r, i32 5" [posit_lib.cpp:771->posit_lib.cpp:1354]   --->   Operation 284 'partselect' 'tmp' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 285 [1/1] (0.62ns)   --->   "%icmp_ln771 = icmp_eq  i2 %tmp, i2 2" [posit_lib.cpp:771->posit_lib.cpp:1354]   --->   Operation 285 'icmp' 'icmp_ln771' <Predicate = (!icmp_ln1345)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 286 [1/1] (3.76ns)   --->   "%mant = mul i60 %zext_ln748, i60 %conv3_i_i351_i_cast" [posit_lib.cpp:778->posit_lib.cpp:1354]   --->   Operation 286 'mul' 'mant' <Predicate = (!icmp_ln1345)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.76> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 287 [1/1] (0.00ns)   --->   "%ovf = bitselect i1 @_ssdm_op_BitSelect.i1.i60.i32, i60 %mant, i32 59" [posit_lib.cpp:779->posit_lib.cpp:1354]   --->   Operation 287 'bitselect' 'ovf' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 288 [1/1] (0.88ns)   --->   "%sf_r_14 = add i6 %trunc_ln734, i6 1" [posit_lib.cpp:781->posit_lib.cpp:1354]   --->   Operation 288 'add' 'sf_r_14' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node mantissa_26)   --->   "%mantissa = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant, i32 30" [posit_lib.cpp:782->posit_lib.cpp:1354]   --->   Operation 289 'partselect' 'mantissa' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 290 [1/1] (0.00ns) (grouped into LUT with out node mantissa_26)   --->   "%mantissa_25 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant, i32 29" [posit_lib.cpp:785->posit_lib.cpp:1354]   --->   Operation 290 'partselect' 'mantissa_25' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_53 : Operation 291 [1/1] (0.00ns) (grouped into LUT with out node regime_13)   --->   "%sf_r_19 = select i1 %ovf, i6 %sf_r_14, i6 %trunc_ln734" [posit_lib.cpp:800->posit_lib.cpp:1354]   --->   Operation 291 'select' 'sf_r_19' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_53 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node mantissa_26)   --->   "%mantissa_13 = select i1 %ovf, i30 %mantissa, i30 %mantissa_25" [posit_lib.cpp:779->posit_lib.cpp:1354]   --->   Operation 292 'select' 'mantissa_13' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_53 : Operation 293 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_13 = select i1 %icmp_ln771, i6 34, i6 %sf_r_19" [posit_lib.cpp:771->posit_lib.cpp:1354]   --->   Operation 293 'select' 'regime_13' <Predicate = (!icmp_ln1345)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_53 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node mantissa_26)   --->   "%select_ln820_12 = select i1 %isZero, i30 0, i30 536870912" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 294 'select' 'select_ln820_12' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_53 : Operation 295 [1/1] (0.00ns) (grouped into LUT with out node mantissa_26)   --->   "%or_ln820_7 = or i1 %isZero, i1 %icmp_ln771" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 295 'or' 'or_ln820_7' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 296 [1/1] (0.46ns) (out node of the LUT)   --->   "%mantissa_26 = select i1 %or_ln820_7, i30 %select_ln820_12, i30 %mantissa_13" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 296 'select' 'mantissa_26' <Predicate = (!icmp_ln1345)> <Delay = 0.46> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_53 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node sign_3)   --->   "%xor_ln820 = xor i1 %isZero, i1 1" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 297 'xor' 'xor_ln820' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 298 [1/1] (0.33ns) (out node of the LUT)   --->   "%sign_3 = and i1 %sign, i1 %xor_ln820" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 298 'and' 'sign_3' <Predicate = (!icmp_ln1345)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 53> <Delay = 4.77>
ST_54 : Operation 299 [1/8] (0.54ns)   --->   "%call_ret7_i = call i39 @positAdd, i1 %x_sign_2, i1 %x_isZero_5, i6 %x_regime_5, i1 %x_exponent_3, i30 %x_mantissa_5, i1 %y_sign_3, i1 %in_isZero_2, i6 %result_regime_28, i1 0, i30 %in_mantissa_2" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 299 'call' 'call_ret7_i' <Predicate = (!icmp_ln1345)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_54 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node sign_5)   --->   "%imagPart_sign = extractvalue i39 %call_ret7_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 300 'extractvalue' 'imagPart_sign' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 301 [1/1] (0.00ns) (grouped into LUT with out node isZero_1)   --->   "%imagPart_isZero = extractvalue i39 %call_ret7_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 301 'extractvalue' 'imagPart_isZero' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 302 [1/1] (0.00ns)   --->   "%imagPart_regime = extractvalue i39 %call_ret7_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 302 'extractvalue' 'imagPart_regime' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 303 [1/1] (0.00ns)   --->   "%imagPart_exponent = extractvalue i39 %call_ret7_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 303 'extractvalue' 'imagPart_exponent' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 304 [1/1] (0.00ns)   --->   "%imagPart_mantissa = extractvalue i39 %call_ret7_i" [posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351]   --->   Operation 304 'extractvalue' 'imagPart_mantissa' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 305 [1/1] (0.00ns)   --->   "%zext_ln748_4 = zext i30 %imagPart_mantissa" [posit_lib.cpp:748->posit_lib.cpp:1355]   --->   Operation 305 'zext' 'zext_ln748_4' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 306 [1/1] (0.00ns) (grouped into LUT with out node sign_5)   --->   "%sign_4 = xor i1 %tmp_56, i1 %imagPart_sign" [posit_lib.cpp:751->posit_lib.cpp:1355]   --->   Operation 306 'xor' 'sign_4' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 307 [1/1] (0.33ns) (out node of the LUT)   --->   "%isZero_1 = or i1 %imagPart_isZero, i1 %tmp_55" [posit_lib.cpp:753->posit_lib.cpp:1355]   --->   Operation 307 'or' 'isZero_1' <Predicate = (!icmp_ln1345)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 308 [1/1] (0.00ns)   --->   "%sext_ln756_1 = sext i6 %imagPart_regime" [posit_lib.cpp:756->posit_lib.cpp:1355]   --->   Operation 308 'sext' 'sext_ln756_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 309 [1/1] (0.00ns)   --->   "%zext_ln756_1 = zext i1 %imagPart_exponent" [posit_lib.cpp:756->posit_lib.cpp:1355]   --->   Operation 309 'zext' 'zext_ln756_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 310 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln757_4 = add i7 %sext_ln756_1, i7 %add_i321_i_read" [posit_lib.cpp:757->posit_lib.cpp:1355]   --->   Operation 310 'add' 'add_ln757_4' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_54 : Operation 311 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%sf_r_16 = add i7 %add_ln757_4, i7 %zext_ln756_1" [posit_lib.cpp:757->posit_lib.cpp:1355]   --->   Operation 311 'add' 'sf_r_16' <Predicate = (!icmp_ln1345)> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_54 : Operation 312 [1/1] (0.00ns)   --->   "%trunc_ln734_2 = trunc i7 %sf_r_16" [posit_lib.cpp:734->posit_lib.cpp:1355]   --->   Operation 312 'trunc' 'trunc_ln734_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 313 [1/1] (0.00ns)   --->   "%tmp_s = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %sf_r_16, i32 5" [posit_lib.cpp:771->posit_lib.cpp:1355]   --->   Operation 313 'partselect' 'tmp_s' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 314 [1/1] (0.62ns)   --->   "%icmp_ln771_1 = icmp_eq  i2 %tmp_s, i2 2" [posit_lib.cpp:771->posit_lib.cpp:1355]   --->   Operation 314 'icmp' 'icmp_ln771_1' <Predicate = (!icmp_ln1345)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 315 [1/1] (3.76ns)   --->   "%mant_3 = mul i60 %zext_ln748_4, i60 %conv3_i_i351_i_cast" [posit_lib.cpp:778->posit_lib.cpp:1355]   --->   Operation 315 'mul' 'mant_3' <Predicate = (!icmp_ln1345)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.76> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 316 [1/1] (0.00ns)   --->   "%ovf_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i60.i32, i60 %mant_3, i32 59" [posit_lib.cpp:779->posit_lib.cpp:1355]   --->   Operation 316 'bitselect' 'ovf_3' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 317 [1/1] (0.88ns)   --->   "%sf_r_17 = add i6 %trunc_ln734_2, i6 1" [posit_lib.cpp:781->posit_lib.cpp:1355]   --->   Operation 317 'add' 'sf_r_17' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node mantissa_29)   --->   "%mantissa_27 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant_3, i32 30" [posit_lib.cpp:782->posit_lib.cpp:1355]   --->   Operation 318 'partselect' 'mantissa_27' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 319 [1/1] (0.00ns) (grouped into LUT with out node mantissa_29)   --->   "%mantissa_28 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant_3, i32 29" [posit_lib.cpp:785->posit_lib.cpp:1355]   --->   Operation 319 'partselect' 'mantissa_28' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_54 : Operation 320 [1/1] (0.00ns) (grouped into LUT with out node regime_16)   --->   "%sf_r_20 = select i1 %ovf_3, i6 %sf_r_17, i6 %trunc_ln734_2" [posit_lib.cpp:800->posit_lib.cpp:1355]   --->   Operation 320 'select' 'sf_r_20' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_54 : Operation 321 [1/1] (0.00ns) (grouped into LUT with out node mantissa_29)   --->   "%mantissa_18 = select i1 %ovf_3, i30 %mantissa_27, i30 %mantissa_28" [posit_lib.cpp:779->posit_lib.cpp:1355]   --->   Operation 321 'select' 'mantissa_18' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_54 : Operation 322 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_16 = select i1 %icmp_ln771_1, i6 34, i6 %sf_r_20" [posit_lib.cpp:771->posit_lib.cpp:1355]   --->   Operation 322 'select' 'regime_16' <Predicate = (!icmp_ln1345)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_54 : Operation 323 [1/1] (0.00ns) (grouped into LUT with out node mantissa_29)   --->   "%select_ln820_16 = select i1 %isZero_1, i30 0, i30 536870912" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 323 'select' 'select_ln820_16' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_54 : Operation 324 [1/1] (0.00ns) (grouped into LUT with out node mantissa_29)   --->   "%or_ln820_8 = or i1 %isZero_1, i1 %icmp_ln771_1" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 324 'or' 'or_ln820_8' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 325 [1/1] (0.46ns) (out node of the LUT)   --->   "%mantissa_29 = select i1 %or_ln820_8, i30 %select_ln820_16, i30 %mantissa_18" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 325 'select' 'mantissa_29' <Predicate = (!icmp_ln1345)> <Delay = 0.46> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_54 : Operation 326 [1/1] (0.00ns) (grouped into LUT with out node sign_5)   --->   "%xor_ln820_1 = xor i1 %isZero_1, i1 1" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 326 'xor' 'xor_ln820_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 327 [1/1] (0.33ns) (out node of the LUT)   --->   "%sign_5 = and i1 %sign_4, i1 %xor_ln820_1" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 327 'and' 'sign_5' <Predicate = (!icmp_ln1345)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 54> <Delay = 1.32>
ST_55 : Operation 328 [1/1] (0.88ns)   --->   "%icmp_ln803_1 = icmp_sgt  i6 %regime_16, i6 29" [posit_lib.cpp:803->posit_lib.cpp:1355]   --->   Operation 328 'icmp' 'icmp_ln803_1' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 329 [1/1] (0.88ns)   --->   "%icmp_ln804_1 = icmp_sgt  i6 %regime_16, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1355]   --->   Operation 329 'icmp' 'icmp_ln804_1' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node regime_22)   --->   "%select_ln804_1 = select i1 %icmp_ln804_1, i6 %regime_16, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1355]   --->   Operation 330 'select' 'select_ln804_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_55 : Operation 331 [1/1] (0.00ns) (grouped into LUT with out node regime_22)   --->   "%select_ln820_14 = select i1 %isZero_1, i6 0, i6 30" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 331 'select' 'select_ln820_14' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_55 : Operation 332 [1/1] (0.00ns) (grouped into LUT with out node regime_22)   --->   "%or_ln820_2 = or i1 %isZero_1, i1 %icmp_ln803_1" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 332 'or' 'or_ln820_2' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 333 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_22 = select i1 %or_ln820_2, i6 %select_ln820_14, i6 %select_ln804_1" [posit_lib.cpp:820->posit_lib.cpp:1355]   --->   Operation 333 'select' 'regime_22' <Predicate = (!icmp_ln1345)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 56 <SV = 55> <Delay = 6.84>
ST_56 : Operation 334 [1/1] (0.00ns)   --->   "%imagSum_exponent_write_assign = phi i1 0, void %newFuncRoot, i1 %newret9, void %for.inc.split_ifconv" [posit_lib.cpp:1355]   --->   Operation 334 'phi' 'imagSum_exponent_write_assign' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 335 [1/1] (0.00ns)   --->   "%imagSum_isZero_write_assign = phi i1 1, void %newFuncRoot, i1 %newret7, void %for.inc.split_ifconv" [posit_lib.cpp:1355]   --->   Operation 335 'phi' 'imagSum_isZero_write_assign' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 336 [1/1] (0.00ns)   --->   "%imagSum_sign_write_assign = phi i1 0, void %newFuncRoot, i1 %newret6, void %for.inc.split_ifconv" [posit_lib.cpp:1355]   --->   Operation 336 'phi' 'imagSum_sign_write_assign' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 337 [1/1] (0.00ns)   --->   "%realSum_exponent_write_assign = phi i1 0, void %newFuncRoot, i1 %newret4, void %for.inc.split_ifconv" [posit_lib.cpp:1354]   --->   Operation 337 'phi' 'realSum_exponent_write_assign' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 338 [1/1] (0.00ns)   --->   "%realSum_isZero_write_assign = phi i1 1, void %newFuncRoot, i1 %newret2, void %for.inc.split_ifconv" [posit_lib.cpp:1354]   --->   Operation 338 'phi' 'realSum_isZero_write_assign' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 339 [1/1] (0.00ns)   --->   "%realSum_sign_write_assign = phi i1 0, void %newFuncRoot, i1 %newret1, void %for.inc.split_ifconv" [posit_lib.cpp:1354]   --->   Operation 339 'phi' 'realSum_sign_write_assign' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 340 [1/1] (0.00ns)   --->   "%br_ln1345 = br i1 %icmp_ln1345, void %for.inc.split_ifconv, void %for.cond.cleanup.exitStub" [posit_lib.cpp:1345]   --->   Operation 340 'br' 'br_ln1345' <Predicate = true> <Delay = 0.00>
ST_56 : Operation 341 [1/1] (0.00ns)   --->   "%imagSum_regime_write_assign_load_1 = load i6 %imagSum_regime_write_assign" [posit_lib.cpp:1355]   --->   Operation 341 'load' 'imagSum_regime_write_assign_load_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 342 [1/1] (0.00ns)   --->   "%imagSum_mantissa_write_assign_load_1 = load i30 %imagSum_mantissa_write_assign" [posit_lib.cpp:1355]   --->   Operation 342 'load' 'imagSum_mantissa_write_assign_load_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 343 [1/1] (0.88ns)   --->   "%icmp_ln803 = icmp_sgt  i6 %regime_13, i6 29" [posit_lib.cpp:803->posit_lib.cpp:1354]   --->   Operation 343 'icmp' 'icmp_ln803' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 344 [1/1] (0.88ns)   --->   "%icmp_ln804 = icmp_sgt  i6 %regime_13, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1354]   --->   Operation 344 'icmp' 'icmp_ln804' <Predicate = (!icmp_ln1345)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node regime_20)   --->   "%select_ln804 = select i1 %icmp_ln804, i6 %regime_13, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1354]   --->   Operation 345 'select' 'select_ln804' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 346 [1/1] (0.00ns) (grouped into LUT with out node regime_20)   --->   "%select_ln820 = select i1 %isZero, i6 0, i6 30" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 346 'select' 'select_ln820' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node regime_20)   --->   "%or_ln820 = or i1 %isZero, i1 %icmp_ln803" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 347 'or' 'or_ln820' <Predicate = (!icmp_ln1345)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 348 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_20 = select i1 %or_ln820, i6 %select_ln820, i6 %select_ln804" [posit_lib.cpp:820->posit_lib.cpp:1354]   --->   Operation 348 'select' 'regime_20' <Predicate = (!icmp_ln1345)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 349 [8/8] (6.84ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 349 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core
ST_56 : Operation 385 [1/1] (0.00ns)   --->   "%realSum_regime_write_assign_load = load i6 %realSum_regime_write_assign"   --->   Operation 385 'load' 'realSum_regime_write_assign_load' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 386 [1/1] (0.00ns)   --->   "%realSum_mantissa_write_assign_load = load i30 %realSum_mantissa_write_assign"   --->   Operation 386 'load' 'realSum_mantissa_write_assign_load' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 387 [1/1] (0.00ns)   --->   "%imagSum_regime_write_assign_load = load i6 %imagSum_regime_write_assign"   --->   Operation 387 'load' 'imagSum_regime_write_assign_load' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 388 [1/1] (0.00ns)   --->   "%imagSum_mantissa_write_assign_load = load i30 %imagSum_mantissa_write_assign"   --->   Operation 388 'load' 'imagSum_mantissa_write_assign_load' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 389 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i30P0A, i30 %imagSum_mantissa_write_assign_out, i30 %imagSum_mantissa_write_assign_load"   --->   Operation 389 'write' 'write_ln0' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 390 [1/1] (0.00ns)   --->   "%write_ln1355 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %imagSum_exponent_write_assign_out, i1 %imagSum_exponent_write_assign" [posit_lib.cpp:1355]   --->   Operation 390 'write' 'write_ln1355' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 391 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i6P0A, i6 %imagSum_regime_write_assign_out, i6 %imagSum_regime_write_assign_load"   --->   Operation 391 'write' 'write_ln0' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 392 [1/1] (0.00ns)   --->   "%write_ln1355 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %imagSum_isZero_write_assign_out, i1 %imagSum_isZero_write_assign" [posit_lib.cpp:1355]   --->   Operation 392 'write' 'write_ln1355' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 393 [1/1] (0.00ns)   --->   "%write_ln1355 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %imagSum_sign_write_assign_out, i1 %imagSum_sign_write_assign" [posit_lib.cpp:1355]   --->   Operation 393 'write' 'write_ln1355' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 394 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i30P0A, i30 %realSum_mantissa_write_assign_out, i30 %realSum_mantissa_write_assign_load"   --->   Operation 394 'write' 'write_ln0' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 395 [1/1] (0.00ns)   --->   "%write_ln1354 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %realSum_exponent_write_assign_out, i1 %realSum_exponent_write_assign" [posit_lib.cpp:1354]   --->   Operation 395 'write' 'write_ln1354' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 396 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i6P0A, i6 %realSum_regime_write_assign_out, i6 %realSum_regime_write_assign_load"   --->   Operation 396 'write' 'write_ln0' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 397 [1/1] (0.00ns)   --->   "%write_ln1354 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %realSum_isZero_write_assign_out, i1 %realSum_isZero_write_assign" [posit_lib.cpp:1354]   --->   Operation 397 'write' 'write_ln1354' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 398 [1/1] (0.00ns)   --->   "%write_ln1354 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %realSum_sign_write_assign_out, i1 %realSum_sign_write_assign" [posit_lib.cpp:1354]   --->   Operation 398 'write' 'write_ln1354' <Predicate = (icmp_ln1345)> <Delay = 0.00>
ST_56 : Operation 399 [1/1] (0.48ns)   --->   "%ret_ln0 = ret"   --->   Operation 399 'ret' 'ret_ln0' <Predicate = (icmp_ln1345)> <Delay = 0.48>

State 57 <SV = 56> <Delay = 7.14>
ST_57 : Operation 350 [1/1] (0.00ns)   --->   "%realSum_regime_write_assign_load_1 = load i6 %realSum_regime_write_assign" [posit_lib.cpp:1354]   --->   Operation 350 'load' 'realSum_regime_write_assign_load_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_57 : Operation 351 [1/1] (0.00ns)   --->   "%realSum_mantissa_write_assign_load_1 = load i30 %realSum_mantissa_write_assign" [posit_lib.cpp:1354]   --->   Operation 351 'load' 'realSum_mantissa_write_assign_load_1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_57 : Operation 352 [8/8] (6.84ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 352 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core
ST_57 : Operation 353 [7/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 353 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 58 <SV = 57> <Delay = 7.14>
ST_58 : Operation 354 [7/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 354 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_58 : Operation 355 [6/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 355 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 59 <SV = 58> <Delay = 7.14>
ST_59 : Operation 356 [6/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 356 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_59 : Operation 357 [5/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 357 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 60 <SV = 59> <Delay = 7.14>
ST_60 : Operation 358 [5/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 358 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_60 : Operation 359 [4/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 359 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 61 <SV = 60> <Delay = 7.14>
ST_61 : Operation 360 [4/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 360 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_61 : Operation 361 [3/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 361 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 62 <SV = 61> <Delay = 7.14>
ST_62 : Operation 362 [3/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 362 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_62 : Operation 363 [2/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 363 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 63 <SV = 62> <Delay = 7.14>
ST_63 : Operation 364 [2/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 364 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_63 : Operation 365 [1/8] (0.54ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %imagSum_sign_write_assign, i1 %imagSum_isZero_write_assign, i6 %imagSum_regime_write_assign_load_1, i1 %imagSum_exponent_write_assign, i30 %imagSum_mantissa_write_assign_load_1, i1 %sign_5, i1 %isZero_1, i6 %regime_22, i1 0, i30 %mantissa_29" [posit_lib.cpp:1355]   --->   Operation 365 'call' 'call_ret4' <Predicate = (!icmp_ln1345)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_63 : Operation 366 [1/1] (0.00ns)   --->   "%newret6 = extractvalue i39 %call_ret4" [posit_lib.cpp:1355]   --->   Operation 366 'extractvalue' 'newret6' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_63 : Operation 367 [1/1] (0.00ns)   --->   "%newret7 = extractvalue i39 %call_ret4" [posit_lib.cpp:1355]   --->   Operation 367 'extractvalue' 'newret7' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_63 : Operation 368 [1/1] (0.00ns)   --->   "%newret8 = extractvalue i39 %call_ret4" [posit_lib.cpp:1355]   --->   Operation 368 'extractvalue' 'newret8' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_63 : Operation 369 [1/1] (0.00ns)   --->   "%newret9 = extractvalue i39 %call_ret4" [posit_lib.cpp:1355]   --->   Operation 369 'extractvalue' 'newret9' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_63 : Operation 370 [1/1] (0.00ns)   --->   "%newret10 = extractvalue i39 %call_ret4" [posit_lib.cpp:1355]   --->   Operation 370 'extractvalue' 'newret10' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_63 : Operation 371 [1/1] (0.48ns)   --->   "%store_ln1355 = store i30 %newret10, i30 %imagSum_mantissa_write_assign" [posit_lib.cpp:1355]   --->   Operation 371 'store' 'store_ln1355' <Predicate = (!icmp_ln1345)> <Delay = 0.48>
ST_63 : Operation 372 [1/1] (0.48ns)   --->   "%store_ln1355 = store i6 %newret8, i6 %imagSum_regime_write_assign" [posit_lib.cpp:1355]   --->   Operation 372 'store' 'store_ln1355' <Predicate = (!icmp_ln1345)> <Delay = 0.48>

State 64 <SV = 63> <Delay = 1.03>
ST_64 : Operation 373 [1/1] (0.00ns)   --->   "%specpipeline_ln1345 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [posit_lib.cpp:1345]   --->   Operation 373 'specpipeline' 'specpipeline_ln1345' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 374 [1/1] (0.00ns)   --->   "%speclooptripcount_ln1345 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64" [posit_lib.cpp:1345]   --->   Operation 374 'speclooptripcount' 'speclooptripcount_ln1345' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 375 [1/1] (0.00ns)   --->   "%specloopname_ln1345 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [posit_lib.cpp:1345]   --->   Operation 375 'specloopname' 'specloopname_ln1345' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 376 [1/8] (0.54ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %realSum_sign_write_assign, i1 %realSum_isZero_write_assign, i6 %realSum_regime_write_assign_load_1, i1 %realSum_exponent_write_assign, i30 %realSum_mantissa_write_assign_load_1, i1 %sign_3, i1 %isZero, i6 %regime_20, i1 0, i30 %mantissa_26" [posit_lib.cpp:1354]   --->   Operation 376 'call' 'call_ret3' <Predicate = (!icmp_ln1345)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_64 : Operation 377 [1/1] (0.00ns)   --->   "%newret1 = extractvalue i39 %call_ret3" [posit_lib.cpp:1354]   --->   Operation 377 'extractvalue' 'newret1' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 378 [1/1] (0.00ns)   --->   "%newret2 = extractvalue i39 %call_ret3" [posit_lib.cpp:1354]   --->   Operation 378 'extractvalue' 'newret2' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 379 [1/1] (0.00ns)   --->   "%newret3 = extractvalue i39 %call_ret3" [posit_lib.cpp:1354]   --->   Operation 379 'extractvalue' 'newret3' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 380 [1/1] (0.00ns)   --->   "%newret4 = extractvalue i39 %call_ret3" [posit_lib.cpp:1354]   --->   Operation 380 'extractvalue' 'newret4' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 381 [1/1] (0.00ns)   --->   "%newret5 = extractvalue i39 %call_ret3" [posit_lib.cpp:1354]   --->   Operation 381 'extractvalue' 'newret5' <Predicate = (!icmp_ln1345)> <Delay = 0.00>
ST_64 : Operation 382 [1/1] (0.48ns)   --->   "%store_ln1354 = store i30 %newret5, i30 %realSum_mantissa_write_assign" [posit_lib.cpp:1354]   --->   Operation 382 'store' 'store_ln1354' <Predicate = (!icmp_ln1345)> <Delay = 0.48>
ST_64 : Operation 383 [1/1] (0.48ns)   --->   "%store_ln1354 = store i6 %newret3, i6 %realSum_regime_write_assign" [posit_lib.cpp:1354]   --->   Operation 383 'store' 'store_ln1354' <Predicate = (!icmp_ln1345)> <Delay = 0.48>
ST_64 : Operation 384 [1/1] (0.00ns)   --->   "%br_ln1345 = br void %for.inc" [posit_lib.cpp:1345]   --->   Operation 384 'br' 'br_ln1345' <Predicate = (!icmp_ln1345)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.875ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln1345', posit_lib.cpp:1345) of constant 0 on local variable 'n', posit_lib.cpp:1345 [35]  (0.489 ns)
	'load' operation 7 bit ('n', posit_lib.cpp:1345) on local variable 'n', posit_lib.cpp:1345 [53]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln1345', posit_lib.cpp:1345) [54]  (0.897 ns)
	'store' operation 0 bit ('store_ln1345', posit_lib.cpp:1345) of variable 'add_ln1345', posit_lib.cpp:1345 on local variable 'n', posit_lib.cpp:1345 [213]  (0.489 ns)

 <State 2>: 6.850ns
The critical path consists of the following:
	'phi' operation 1 bit ('angle.exponent', posit_lib.cpp:1357) with incoming values : ('newret14', posit_lib.cpp:1357) [50]  (0.000 ns)
	'call' operation 39 bit ('call_ret5', posit_lib.cpp:1357) to 'positAdd' [207]  (6.850 ns)

 <State 3>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 4>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 5>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 6>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 7>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 8>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 9>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 10>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 11>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 12>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 13>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 14>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 15>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 16>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 17>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 18>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 19>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 20>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 21>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 22>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 23>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 24>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 25>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 26>: 7.285ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret1_i', posit_lib.cpp:1235->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'pNAngle' [73]  (7.285 ns)

 <State 27>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 28>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 29>: 7.290ns
The critical path consists of the following:
	'select' operation 6 bit ('result.regime', posit_lib.cpp:631->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351) [104]  (0.440 ns)
	'call' operation 39 bit ('call_ret5_i', posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'positAdd' [106]  (6.850 ns)

 <State 30>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 31>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 32>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 33>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 34>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 35>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 36>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 37>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 38>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 39>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 40>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 41>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 42>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 43>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 44>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 45>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 46>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 47>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 48>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 49>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 50>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 51>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 52>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:1271->posit_lib.cpp:1351) to 'positCos' [67]  (7.140 ns)

 <State 53>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret7_i', posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'positAdd' [131]  (7.140 ns)

 <State 54>: 4.772ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret7_i', posit_lib.cpp:852->posit_lib.cpp:1265->posit_lib.cpp:1272->posit_lib.cpp:1351) to 'positAdd' [131]  (0.547 ns)
	'mul' operation 60 bit ('mant', posit_lib.cpp:778->posit_lib.cpp:1355) [182]  (3.760 ns)
	'select' operation 30 bit ('mantissa', posit_lib.cpp:779->posit_lib.cpp:1355) [188]  (0.000 ns)
	'select' operation 30 bit ('mantissa', posit_lib.cpp:820->posit_lib.cpp:1355) [198]  (0.465 ns)

 <State 55>: 1.327ns
The critical path consists of the following:
	'icmp' operation 1 bit ('icmp_ln803_1', posit_lib.cpp:803->posit_lib.cpp:1355) [190]  (0.887 ns)
	'or' operation 1 bit ('or_ln820_2', posit_lib.cpp:820->posit_lib.cpp:1355) [194]  (0.000 ns)
	'select' operation 6 bit ('regime', posit_lib.cpp:820->posit_lib.cpp:1355) [195]  (0.440 ns)

 <State 56>: 6.850ns
The critical path consists of the following:
	'phi' operation 1 bit ('imagSum_exponent_write_assign', posit_lib.cpp:1355) with incoming values : ('newret9', posit_lib.cpp:1355) [44]  (0.000 ns)
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:1355) to 'positAdd' [201]  (6.850 ns)

 <State 57>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:1355) to 'positAdd' [201]  (7.140 ns)

 <State 58>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1354) to 'positAdd' [166]  (7.140 ns)

 <State 59>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1354) to 'positAdd' [166]  (7.140 ns)

 <State 60>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1354) to 'positAdd' [166]  (7.140 ns)

 <State 61>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1354) to 'positAdd' [166]  (7.140 ns)

 <State 62>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1354) to 'positAdd' [166]  (7.140 ns)

 <State 63>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1354) to 'positAdd' [166]  (7.140 ns)

 <State 64>: 1.036ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1354) to 'positAdd' [166]  (0.547 ns)
	multiplexor before 'phi' operation 1 bit ('realSum_exponent_write_assign', posit_lib.cpp:1354) with incoming values : ('newret4', posit_lib.cpp:1354) [47]  (0.489 ns)
	'phi' operation 1 bit ('realSum_exponent_write_assign', posit_lib.cpp:1354) with incoming values : ('newret4', posit_lib.cpp:1354) [47]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
