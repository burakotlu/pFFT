

================================================================
== Vitis HLS Report for 'pNAngle'
================================================================
* Date:           Tue Apr  8 14:33:13 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        PositFFT
* Solution:       hls (Vivado IP Flow Target)
* Product family: azynquplus
* Target device:  xazu7ev-fbvb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.285 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       25|       25|  0.250 us|  0.250 us|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        +---------------------+----------+---------+---------+-----------+-----------+-----+-----+---------+
        |                     |          |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
        |       Instance      |  Module  |   min   |   max   |    min    |    max    | min | max |   Type  |
        +---------------------+----------+---------+---------+-----------+-----------+-----+-----+---------+
        |grp_positAdd_fu_257  |positAdd  |        7|        7|  70.000 ns|  70.000 ns|    1|    1|      yes|
        |grp_positAdd_fu_274  |positAdd  |        7|        7|  70.000 ns|  70.000 ns|    1|    1|      yes|
        |grp_positAdd_fu_295  |positAdd  |        7|        7|  70.000 ns|  70.000 ns|    1|    1|      yes|
        +---------------------+----------+---------+---------+-----------+-----------+-----+-----+---------+

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+------+--------+--------+-----+
|       Name      | BRAM_18K|  DSP |   FF   |   LUT  | URAM|
+-----------------+---------+------+--------+--------+-----+
|DSP              |        -|     -|       -|       -|    -|
|Expression       |        -|     -|       0|     486|    -|
|FIFO             |        -|     -|       -|       -|    -|
|Instance         |        -|    10|    5250|    7115|    -|
|Memory           |        -|     -|       -|       -|    -|
|Multiplexer      |        -|     -|       0|     407|    -|
|Register         |        -|     -|    3347|     352|    -|
+-----------------+---------+------+--------+--------+-----+
|Total            |        0|    10|    8597|    8360|    0|
+-----------------+---------+------+--------+--------+-----+
|Available        |      624|  1728|  460800|  230400|   96|
+-----------------+---------+------+--------+--------+-----+
|Utilization (%)  |        0|    ~0|       1|       3|    0|
+-----------------+---------+------+--------+--------+-----+

+ Detail: 
    * Instance: 
    +---------------------------+-----------------------+---------+----+------+------+-----+
    |          Instance         |         Module        | BRAM_18K| DSP|  FF  |  LUT | URAM|
    +---------------------------+-----------------------+---------+----+------+------+-----+
    |mul_59ns_61ns_119_1_1_U99  |mul_59ns_61ns_119_1_1  |        0|  10|     0|    38|    0|
    |grp_positAdd_fu_257        |positAdd               |        0|   0|  1750|  2359|    0|
    |grp_positAdd_fu_274        |positAdd               |        0|   0|  1750|  2359|    0|
    |grp_positAdd_fu_295        |positAdd               |        0|   0|  1750|  2359|    0|
    +---------------------------+-----------------------+---------+----+------+------+-----+
    |Total                      |                       |        0|  10|  5250|  7115|    0|
    +---------------------------+-----------------------+---------+----+------+------+-----+

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------------------------+----------+----+---+----+------------+------------+
    |              Variable Name              | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------------------------+----------+----+---+----+------------+------------+
    |add_ln680_fu_467_p2                      |         +|   0|  0|  13|           6|           6|
    |regime_17_fu_504_p2                      |         +|   0|  0|  13|           6|           2|
    |sf_r_fu_472_p2                           |         +|   0|  0|  13|           6|           6|
    |absXGreaterEqual_9_fu_426_p2             |       and|   0|  0|   2|           1|           1|
    |and_ln24_2_fu_782_p2                     |       and|   0|  0|   2|           1|           1|
    |and_ln24_fu_668_p2                       |       and|   0|  0|   2|           1|           1|
    |and_ln25_11_fu_686_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_12_fu_692_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_13_fu_740_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_14_fu_746_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_15_fu_800_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_16_fu_806_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_17_fu_856_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_18_fu_862_p2                    |       and|   0|  0|   2|           1|           1|
    |and_ln25_fu_420_p2                       |       and|   0|  0|   2|           1|           1|
    |ap_condition_1351                        |       and|   0|  0|   2|           1|           1|
    |ap_condition_1355                        |       and|   0|  0|   2|           1|           1|
    |ap_predicate_op105_call_state11_state10  |       and|   0|  0|   2|           1|           1|
    |ap_predicate_op159_call_state19_state18  |       and|   0|  0|   2|           1|           1|
    |ap_predicate_op61_call_state3_state2     |       and|   0|  0|   2|           1|           1|
    |retval_1_i20_fu_836_p2                   |       and|   0|  0|   2|           1|           1|
    |retval_1_i31_fu_880_p2                   |       and|   0|  0|   2|           1|           1|
    |retval_1_i9_fu_764_p2                    |       and|   0|  0|   2|           1|           1|
    |retval_1_i_fu_722_p2                     |       and|   0|  0|   2|           1|           1|
    |icmp_ln23_4_fu_656_p2                    |      icmp|   0|  0|  12|           5|           1|
    |icmp_ln23_5_fu_728_p2                    |      icmp|   0|  0|  13|           6|           1|
    |icmp_ln23_6_fu_770_p2                    |      icmp|   0|  0|  13|           6|           1|
    |icmp_ln23_fu_396_p2                      |      icmp|   0|  0|  12|           5|           1|
    |icmp_ln24_3_fu_662_p2                    |      icmp|   0|  0|  13|           6|           1|
    |icmp_ln24_4_fu_776_p2                    |      icmp|   0|  0|  13|           6|           1|
    |icmp_ln24_fu_402_p2                      |      icmp|   0|  0|  13|           6|           2|
    |icmp_ln25_5_fu_680_p2                    |      icmp|   0|  0|  37|          30|          29|
    |icmp_ln25_6_fu_734_p2                    |      icmp|   0|  0|  37|          30|          29|
    |icmp_ln25_7_fu_794_p2                    |      icmp|   0|  0|  37|          30|          29|
    |icmp_ln25_8_fu_850_p2                    |      icmp|   0|  0|  37|          30|          29|
    |icmp_ln25_fu_414_p2                      |      icmp|   0|  0|  37|          30|          29|
    |icmp_ln703_fu_478_p2                     |      icmp|   0|  0|  13|           6|           5|
    |icmp_ln803_fu_510_p2                     |      icmp|   0|  0|  13|           6|           5|
    |icmp_ln804_fu_516_p2                     |      icmp|   0|  0|  13|           6|           6|
    |absXGreaterEqual_5_fu_752_p2             |        or|   0|  0|   2|           1|           1|
    |absXGreaterEqual_6_fu_818_p2             |        or|   0|  0|   2|           1|           1|
    |absXGreaterEqual_7_fu_868_p2             |        or|   0|  0|   2|           1|           1|
    |absXGreaterEqual_fu_704_p2               |        or|   0|  0|   2|           1|           1|
    |or_ln24_2_fu_812_p2                      |        or|   0|  0|   2|           1|           1|
    |or_ln24_fu_698_p2                        |        or|   0|  0|   2|           1|           1|
    |or_ln720_fu_491_p2                       |        or|   0|  0|   2|           1|           1|
    |or_ln820_fu_530_p2                       |        or|   0|  0|   2|           1|           1|
    |grp_positAdd_fu_257_y_mantissa3_val      |    select|   0|  0|  28|           1|           1|
    |regime_19_fu_535_p3                      |    select|   0|  0|   6|           1|           6|
    |regime_fu_496_p3                         |    select|   0|  0|   6|           1|           6|
    |select_ln680_fu_460_p3                   |    select|   0|  0|   3|           1|           3|
    |select_ln720_fu_484_p3                   |    select|   0|  0|   5|           1|           1|
    |select_ln804_fu_522_p3                   |    select|   0|  0|   6|           1|           6|
    |ap_enable_pp0                            |       xor|   0|  0|   2|           1|           2|
    |m_angle_sign_7_fu_890_p2                 |       xor|   0|  0|   2|           1|           2|
    |not_m_angle_sign_fu_716_p2               |       xor|   0|  0|   2|           1|           2|
    |not_y_sign_fu_830_p2                     |       xor|   0|  0|   2|           1|           2|
    |xor_ln25_3_fu_674_p2                     |       xor|   0|  0|   2|           1|           2|
    |xor_ln25_4_fu_788_p2                     |       xor|   0|  0|   2|           1|           2|
    |xor_ln25_fu_408_p2                       |       xor|   0|  0|   2|           1|           2|
    |xor_ln27_4_fu_758_p2                     |       xor|   0|  0|   2|           2|           1|
    |xor_ln27_5_fu_824_p2                     |       xor|   0|  0|   2|           1|           1|
    |xor_ln27_6_fu_874_p2                     |       xor|   0|  0|   2|           2|           1|
    |xor_ln27_fu_710_p2                       |       xor|   0|  0|   2|           1|           1|
    +-----------------------------------------+----------+----+---+----+------------+------------+
    |Total                                    |          |   0|  0| 486|         274|         253|
    +-----------------------------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +----------------------------------------------+----+-----------+-----+-----------+
    |                     Name                     | LUT| Input Size| Bits| Total Bits|
    +----------------------------------------------+----+-----------+-----+-----------+
    |ap_phi_mux_ref_tmp_0292_2_phi_fu_200_p6       |  14|          3|    1|          3|
    |ap_phi_mux_ref_tmp_1293_2_phi_fu_212_p6       |   9|          2|    1|          2|
    |ap_phi_mux_ref_tmp_3_2_phi_fu_224_p6          |   9|          2|    6|         12|
    |ap_phi_mux_ref_tmp_4_2_phi_fu_236_p6          |   9|          2|    1|          2|
    |ap_phi_mux_ref_tmp_5_2_phi_fu_248_p6          |   9|          2|   30|         60|
    |ap_phi_mux_storemerge_in_i_phi_fu_131_p4      |   9|          2|   94|        188|
    |ap_phi_mux_x_exponent_7_phi_fu_164_p6         |   9|          2|    1|          2|
    |ap_phi_mux_x_regime_10_phi_fu_152_p6          |   9|          2|    6|         12|
    |ap_phi_mux_x_sign_6_phi_fu_140_p6             |   9|          2|    1|          2|
    |ap_phi_mux_y_mantissa_phi_fu_176_p6           |   9|          2|   30|         60|
    |ap_phi_reg_pp0_iter10_x_exponent_7_reg_161    |   9|          2|    1|          2|
    |ap_phi_reg_pp0_iter10_x_regime_10_reg_149     |   9|          2|    6|         12|
    |ap_phi_reg_pp0_iter10_x_sign_6_reg_137        |   9|          2|    1|          2|
    |ap_phi_reg_pp0_iter10_y_isZero_reg_185        |   9|          2|    1|          2|
    |ap_phi_reg_pp0_iter10_y_mantissa_reg_173      |   9|          2|   30|         60|
    |ap_phi_reg_pp0_iter18_y_isZero_reg_185        |   9|          2|    1|          2|
    |ap_phi_reg_pp0_iter19_ref_tmp_0292_2_reg_197  |   9|          2|    1|          2|
    |ap_phi_reg_pp0_iter19_ref_tmp_1293_2_reg_209  |   9|          2|    1|          2|
    |ap_phi_reg_pp0_iter19_ref_tmp_3_2_reg_221     |   9|          2|    6|         12|
    |ap_phi_reg_pp0_iter19_ref_tmp_4_2_reg_233     |   9|          2|    1|          2|
    |ap_phi_reg_pp0_iter19_ref_tmp_5_2_reg_245     |   9|          2|   30|         60|
    |ap_phi_reg_pp0_iter9_storemerge_in_i_reg_128  |   9|          2|   94|        188|
    |grp_positAdd_fu_274_x_sign                    |  14|          3|    1|          3|
    |grp_positAdd_fu_274_y_sign_val                |  14|          3|    1|          3|
    |grp_positAdd_fu_295_x_exponent2               |  14|          3|    1|          3|
    |grp_positAdd_fu_295_x_isZero                  |  14|          3|    1|          3|
    |grp_positAdd_fu_295_x_mantissa3               |  14|          3|   30|         90|
    |grp_positAdd_fu_295_x_regime1                 |  14|          3|    6|         18|
    |grp_positAdd_fu_295_x_sign                    |  14|          3|    1|          3|
    |grp_positAdd_fu_295_y_exponent2_val           |  14|          3|    1|          3|
    |grp_positAdd_fu_295_y_isZero_val              |  14|          3|    1|          3|
    |grp_positAdd_fu_295_y_mantissa3_val           |  14|          3|   30|         90|
    |grp_positAdd_fu_295_y_regime1_val             |  14|          3|    6|         18|
    |grp_positAdd_fu_295_y_sign_val                |  14|          3|    1|          3|
    |x_exponent_7_reg_161                          |   9|          2|    1|          2|
    |x_regime_10_reg_149                           |   9|          2|    6|         12|
    |x_sign_6_reg_137                              |   9|          2|    1|          2|
    |y_mantissa_reg_173                            |   9|          2|   30|         60|
    +----------------------------------------------+----+-----------+-----+-----------+
    |Total                                         | 407|         89|  462|       1005|
    +----------------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +----------------------------------------------+----+----+-----+-----------+
    |                     Name                     | FF | LUT| Bits| Const Bits|
    +----------------------------------------------+----+----+-----+-----------+
    |absXGreaterEqual_9_reg_973                    |   1|   0|    1|          0|
    |ap_CS_fsm                                     |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter10                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter11                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter12                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter13                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter14                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter15                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter16                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter17                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter18                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter19                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter2                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter20                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter21                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter22                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter23                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter24                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter25                      |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter3                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter4                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter5                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter6                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter7                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter8                       |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter9                       |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter10_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter10_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter10_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter10_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter10_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter10_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter10_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter10_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter10_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter10_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter11_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter11_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter11_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter11_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter11_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter11_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter11_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter11_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter11_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter11_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter12_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter12_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter12_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter12_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter12_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter12_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter12_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter12_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter12_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter12_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter13_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter13_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter13_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter13_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter13_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter13_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter13_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter13_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter13_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter13_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter14_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter14_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter14_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter14_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter14_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter14_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter14_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter14_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter14_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter14_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter15_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter15_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter15_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter15_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter15_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter15_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter15_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter15_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter15_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter15_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter16_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter16_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter16_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter16_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter16_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter16_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter16_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter16_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter16_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter16_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter17_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter17_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter17_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter17_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter17_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter17_x_exponent_7_reg_161    |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter17_x_regime_10_reg_149     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter17_x_sign_6_reg_137        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter17_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter17_y_mantissa_reg_173      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter18_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter18_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter18_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter18_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter18_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter18_y_isZero_reg_185        |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter19_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter19_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter19_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter19_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter19_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter1_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter1_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter1_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter1_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter1_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter1_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter1_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter1_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter1_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter1_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter1_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter20_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter20_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter20_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter20_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter20_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter21_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter21_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter21_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter21_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter21_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter22_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter22_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter22_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter22_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter22_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter23_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter23_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter23_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter23_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter23_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter24_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter24_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter24_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter24_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter24_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter25_ref_tmp_0292_2_reg_197  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter25_ref_tmp_1293_2_reg_209  |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter25_ref_tmp_3_2_reg_221     |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter25_ref_tmp_4_2_reg_233     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter25_ref_tmp_5_2_reg_245     |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter2_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter2_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter2_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter2_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter2_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter2_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter2_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter2_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter2_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter2_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter2_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter3_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter3_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter3_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter3_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter3_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter3_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter3_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter3_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter3_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter3_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter3_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter4_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter4_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter4_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter4_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter4_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter4_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter4_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter4_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter4_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter4_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter4_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter5_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter5_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter5_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter5_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter5_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter5_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter5_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter5_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter5_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter5_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter5_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter6_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter6_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter6_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter6_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter6_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter6_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter6_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter6_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter6_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter6_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter6_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter7_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter7_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter7_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter7_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter7_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter7_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter7_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter7_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter7_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter7_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter7_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter8_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter8_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter8_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter8_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter8_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter8_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter8_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter8_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter8_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter8_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter8_y_mantissa_reg_173       |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter9_ref_tmp_0292_2_reg_197   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter9_ref_tmp_1293_2_reg_209   |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter9_ref_tmp_3_2_reg_221      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter9_ref_tmp_4_2_reg_233      |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter9_ref_tmp_5_2_reg_245      |  30|   0|   30|          0|
    |ap_phi_reg_pp0_iter9_storemerge_in_i_reg_128  |  94|   0|   94|          0|
    |ap_phi_reg_pp0_iter9_x_exponent_7_reg_161     |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter9_x_regime_10_reg_149      |   6|   0|    6|          0|
    |ap_phi_reg_pp0_iter9_x_sign_6_reg_137         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter9_y_isZero_reg_185         |   1|   0|    1|          0|
    |ap_phi_reg_pp0_iter9_y_mantissa_reg_173       |  30|   0|   30|          0|
    |grp_positAdd_fu_257_ap_start_reg              |   1|   0|    1|          0|
    |grp_positAdd_fu_274_ap_start_reg              |   1|   0|    1|          0|
    |grp_positAdd_fu_295_ap_start_reg              |   1|   0|    1|          0|
    |icmp_ln23_reg_969                             |   1|   0|    1|          0|
    |m_angle_exponent_9_reg_1010                   |   1|   0|    1|          0|
    |m_angle_isZero_reg_998                        |   1|   0|    1|          0|
    |m_angle_mantissa_reg_1016                     |  30|   0|   30|          0|
    |m_angle_regime_9_reg_1004                     |   6|   0|    6|          0|
    |m_angle_sign_8_reg_992                        |   1|   0|    1|          0|
    |regime_19_reg_982                             |   6|   0|    6|          0|
    |retval_1_i20_reg_1040                         |   1|   0|    1|          0|
    |retval_1_i31_reg_1044                         |   1|   0|    1|          0|
    |retval_1_i9_reg_1026                          |   1|   0|    1|          0|
    |retval_1_i_reg_1022                           |   1|   0|    1|          0|
    |tmp_50_reg_977                                |   1|   0|    1|          0|
    |x_exponent_7_reg_161                          |   1|   0|    1|          0|
    |x_exponent_read_reg_938                       |   1|   0|    1|          0|
    |x_isZero_read_reg_952                         |   1|   0|    1|          0|
    |x_mantissa_read_reg_932                       |  30|   0|   30|          0|
    |x_regime_10_reg_149                           |   6|   0|    6|          0|
    |x_regime_read_reg_945                         |   6|   0|    6|          0|
    |x_sign_6_reg_137                              |   1|   0|    1|          0|
    |x_sign_read_reg_963                           |   1|   0|    1|          0|
    |y_mantissa_reg_173                            |  30|   0|   30|          0|
    |absXGreaterEqual_9_reg_973                    |  64|  32|    1|          0|
    |icmp_ln23_reg_969                             |  64|  32|    1|          0|
    |retval_1_i20_reg_1040                         |  64|  32|    1|          0|
    |retval_1_i31_reg_1044                         |  64|  32|    1|          0|
    |retval_1_i9_reg_1026                          |  64|  32|    1|          0|
    |retval_1_i_reg_1022                           |  64|  32|    1|          0|
    |x_exponent_read_reg_938                       |  64|  32|    1|          0|
    |x_isZero_read_reg_952                         |  64|  32|    1|          0|
    |x_mantissa_read_reg_932                       |  64|  32|   30|          0|
    |x_regime_read_reg_945                         |  64|  32|    6|          0|
    |x_sign_read_reg_963                           |  64|  32|    1|          0|
    +----------------------------------------------+----+----+-----+-----------+
    |Total                                         |3347| 352| 2688|          0|
    +----------------------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-------------+-----+-----+------------+--------------+--------------+
|  RTL Ports  | Dir | Bits|  Protocol  | Source Object|    C Type    |
+-------------+-----+-----+------------+--------------+--------------+
|ap_clk       |   in|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_rst       |   in|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_start     |   in|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_done      |  out|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_idle      |  out|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_ready     |  out|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_return_0  |  out|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_return_1  |  out|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_return_2  |  out|    6|  ap_ctrl_hs|       pNAngle|  return value|
|ap_return_3  |  out|    1|  ap_ctrl_hs|       pNAngle|  return value|
|ap_return_4  |  out|   30|  ap_ctrl_hs|       pNAngle|  return value|
|x_sign       |   in|    1|     ap_none|        x_sign|        scalar|
|x_isZero     |   in|    1|     ap_none|      x_isZero|        scalar|
|x_regime     |   in|    6|     ap_none|      x_regime|        scalar|
|x_exponent   |   in|    1|     ap_none|    x_exponent|        scalar|
|x_mantissa   |   in|   30|     ap_none|    x_mantissa|        scalar|
+-------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 1, D = 26, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.04>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%x_mantissa_read = read i30 @_ssdm_op_Read.ap_auto.i30, i30 %x_mantissa" [posit_lib.cpp:1192->posit_lib.cpp:1235]   --->   Operation 27 'read' 'x_mantissa_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%x_exponent_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_exponent" [posit_lib.cpp:1192->posit_lib.cpp:1235]   --->   Operation 28 'read' 'x_exponent_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%x_regime_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %x_regime" [posit_lib.cpp:1192->posit_lib.cpp:1235]   --->   Operation 29 'read' 'x_regime_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%x_isZero_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_isZero" [posit_lib.cpp:1192->posit_lib.cpp:1235]   --->   Operation 30 'read' 'x_isZero_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%x_sign_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_sign" [posit_lib.cpp:1192->posit_lib.cpp:1235]   --->   Operation 31 'read' 'x_sign_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp = partselect i5 @_ssdm_op_PartSelect.i5.i6.i32.i32, i6 %x_regime_read, i32 1, i32 5" [posit_lib.cpp:23->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 32 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.87ns)   --->   "%icmp_ln23 = icmp_slt  i5 %tmp, i5 1" [posit_lib.cpp:23->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 33 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln23 = br i1 %icmp_ln23, void %lor.lhs.false.i.i, void %if.then.i40" [posit_lib.cpp:23->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 34 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.88ns)   --->   "%icmp_ln24 = icmp_eq  i6 %x_regime_read, i6 2" [posit_lib.cpp:24->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 35 'icmp' 'icmp_ln24' <Predicate = (!icmp_ln23)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_9)   --->   "%xor_ln25 = xor i1 %x_exponent_read, i1 1" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 36 'xor' 'xor_ln25' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.17ns)   --->   "%icmp_ln25 = icmp_ult  i30 %x_mantissa_read, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 37 'icmp' 'icmp_ln25' <Predicate = (!icmp_ln23)> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_9)   --->   "%and_ln25 = and i1 %icmp_ln25, i1 %xor_ln25" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 38 'and' 'and_ln25' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.33ns) (out node of the LUT)   --->   "%absXGreaterEqual_9 = and i1 %and_ln25, i1 %icmp_ln24" [posit_lib.cpp:25->posit_lib.cpp:41->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 39 'and' 'absXGreaterEqual_9' <Predicate = (!icmp_ln23)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %absXGreaterEqual_9, void %if.else.i41, void %if.then.i40" [posit_lib.cpp:42->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 40 'br' 'br_ln42' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i59 @_ssdm_op_BitConcatenate.i59.i30.i29, i30 %x_mantissa_read, i29 0" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 41 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln675_2 = zext i59 %shl_ln" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 42 'zext' 'zext_ln675_2' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (5.04ns)   --->   "%mul_ln675 = mul i119 %zext_ln675_2, i119 734344906382274626" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 43 'mul' 'mul_ln675' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 5.04> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.04> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln680 = zext i119 %mul_ln675" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 44 'zext' 'zext_ln680' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_50 = bitselect i1 @_ssdm_op_BitSelect.i1.i149.i32, i149 %zext_ln680, i32 118" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 45 'bitselect' 'tmp_50' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.26>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln675 = zext i1 %x_exponent_read" [posit_lib.cpp:675->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 46 'zext' 'zext_ln675' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.27ns)   --->   "%select_ln680 = select i1 %tmp_50, i6 62, i6 61" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 47 'select' 'select_ln680' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln680 = add i6 %zext_ln675, i6 %x_regime_read" [posit_lib.cpp:680->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 48 'add' 'add_ln680' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%sf_r = add i6 %add_ln680, i6 %select_ln680" [posit_lib.cpp:697->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 49 'add' 'sf_r' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.88> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 50 [1/1] (0.88ns)   --->   "%icmp_ln703 = icmp_sgt  i6 %sf_r, i6 29" [posit_lib.cpp:703->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 50 'icmp' 'icmp_ln703' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.44ns)   --->   "%select_ln720 = select i1 %x_isZero_read, i6 0, i6 30" [posit_lib.cpp:720->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 51 'select' 'select_ln720' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node regime_17)   --->   "%or_ln720 = or i1 %icmp_ln703, i1 %x_isZero_read" [posit_lib.cpp:720->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 52 'or' 'or_ln720' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node regime_17)   --->   "%regime = select i1 %or_ln720, i6 %select_ln720, i6 %sf_r" [posit_lib.cpp:720->posit_lib.cpp:44->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 53 'select' 'regime' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.88ns) (out node of the LUT)   --->   "%regime_17 = add i6 %regime, i6 2" [posit_lib.cpp:800->posit_lib.cpp:47->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 54 'add' 'regime_17' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.88ns)   --->   "%icmp_ln803 = icmp_sgt  i6 %regime_17, i6 29" [posit_lib.cpp:803->posit_lib.cpp:47->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 55 'icmp' 'icmp_ln803' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.88ns)   --->   "%icmp_ln804 = icmp_sgt  i6 %regime_17, i6 34" [posit_lib.cpp:804->posit_lib.cpp:47->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 56 'icmp' 'icmp_ln804' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node regime_19)   --->   "%select_ln804 = select i1 %icmp_ln804, i6 %regime_17, i6 34" [posit_lib.cpp:804->posit_lib.cpp:47->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 57 'select' 'select_ln804' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node regime_19)   --->   "%or_ln820 = or i1 %icmp_ln803, i1 %x_isZero_read" [posit_lib.cpp:820->posit_lib.cpp:47->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 58 'or' 'or_ln820' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_19 = select i1 %or_ln820, i6 %select_ln720, i6 %select_ln804" [posit_lib.cpp:820->posit_lib.cpp:47->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 59 'select' 'regime_19' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 7.28>
ST_3 : Operation 60 [1/1] (0.43ns)   --->   "%select_ln739 = select i1 %x_isZero_read, i30 0, i30 842887333" [posit_lib.cpp:739->posit_lib.cpp:47->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 60 'select' 'select_ln739' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 61 [8/8] (6.84ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 61 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 4 <SV = 3> <Delay = 7.14>
ST_4 : Operation 62 [7/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 62 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 5 <SV = 4> <Delay = 7.14>
ST_5 : Operation 63 [6/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 63 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 6 <SV = 5> <Delay = 7.14>
ST_6 : Operation 64 [5/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 64 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 7 <SV = 6> <Delay = 7.14>
ST_7 : Operation 65 [4/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 65 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 8 <SV = 7> <Delay = 7.14>
ST_8 : Operation 66 [3/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 66 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 9 <SV = 8> <Delay = 7.14>
ST_9 : Operation 67 [2/8] (7.14ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 67 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_9 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_i = bitconcatenate i94 @_ssdm_op_BitConcatenate.i94.i30.i31.i1.i2.i6.i15.i1.i7.i1, i30 %x_mantissa_read, i31 0, i1 %x_exponent_read, i2 0, i6 %x_regime_read, i15 0, i1 %x_isZero_read, i7 0, i1 %x_sign_read" [posit_lib.cpp:1192->posit_lib.cpp:1235]   --->   Operation 68 'bitconcatenate' 'tmp_i' <Predicate = (absXGreaterEqual_9) | (icmp_ln23)> <Delay = 0.00>
ST_9 : Operation 69 [1/1] (0.48ns)   --->   "%br_ln42 = br void %positMod.exit" [posit_lib.cpp:42->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 69 'br' 'br_ln42' <Predicate = (absXGreaterEqual_9) | (icmp_ln23)> <Delay = 0.48>

State 10 <SV = 9> <Delay = 3.42>
ST_10 : Operation 70 [1/8] (0.54ns)   --->   "%call_ret_i = call i39 @positAdd, i1 0, i1 %x_isZero_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read, i1 1, i1 %x_isZero_read, i6 %regime_19, i1 0, i30 %select_ln739" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 70 'call' 'call_ret_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%result_isZero = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 71 'extractvalue' 'result_isZero' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%result_regime = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 72 'extractvalue' 'result_regime' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_10 : Operation 73 [1/1] (0.00ns)   --->   "%result_exponent = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 73 'extractvalue' 'result_exponent' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%result_mantissa = extractvalue i39 %call_ret_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 74 'extractvalue' 'result_mantissa' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_18_i = bitconcatenate i94 @_ssdm_op_BitConcatenate.i94.i30.i31.i1.i2.i6.i15.i1.i7.i1, i30 %result_mantissa, i31 0, i1 %result_exponent, i2 0, i6 %result_regime, i15 0, i1 %result_isZero, i7 0, i1 %x_sign_read" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 75 'bitconcatenate' 'tmp_18_i' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.48ns)   --->   "%br_ln50 = br void %positMod.exit" [posit_lib.cpp:50->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 76 'br' 'br_ln50' <Predicate = (!icmp_ln23 & !absXGreaterEqual_9)> <Delay = 0.48>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%storemerge_in_i = phi i94 %tmp_18_i, void %if.else.i41, i94 %tmp_i, void %if.then.i40" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 77 'phi' 'storemerge_in_i' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%m_angle_sign_8 = trunc i94 %storemerge_in_i" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 78 'trunc' 'm_angle_sign_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.00ns)   --->   "%m_angle_isZero = bitselect i1 @_ssdm_op_BitSelect.i1.i94.i32, i94 %storemerge_in_i, i32 8" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 79 'bitselect' 'm_angle_isZero' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%m_angle_regime_9 = partselect i6 @_ssdm_op_PartSelect.i6.i94.i32.i32, i94 %storemerge_in_i, i32 24, i32 29" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 80 'partselect' 'm_angle_regime_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 81 [1/1] (0.00ns)   --->   "%m_angle_exponent_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i94.i32, i94 %storemerge_in_i, i32 32" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 81 'bitselect' 'm_angle_exponent_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%m_angle_mantissa = partselect i30 @_ssdm_op_PartSelect.i30.i94.i32.i32, i94 %storemerge_in_i, i32 64, i32 93" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 82 'partselect' 'm_angle_mantissa' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_53 = partselect i5 @_ssdm_op_PartSelect.i5.i94.i32.i32, i94 %storemerge_in_i, i32 25, i32 29" [posit_lib.cpp:23->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 83 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.87ns)   --->   "%icmp_ln23_4 = icmp_sgt  i5 %tmp_53, i5 0" [posit_lib.cpp:23->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 84 'icmp' 'icmp_ln23_4' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 85 [1/1] (0.88ns)   --->   "%icmp_ln24_3 = icmp_eq  i6 %m_angle_regime_9, i6 1" [posit_lib.cpp:24->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 85 'icmp' 'icmp_ln24_3' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%and_ln24 = and i1 %icmp_ln24_3, i1 %m_angle_exponent_9" [posit_lib.cpp:24->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 86 'and' 'and_ln24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 87 [1/1] (0.33ns)   --->   "%xor_ln25_3 = xor i1 %m_angle_exponent_9, i1 1" [posit_lib.cpp:25->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 87 'xor' 'xor_ln25_3' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 88 [1/1] (1.17ns)   --->   "%icmp_ln25_5 = icmp_ugt  i30 %m_angle_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 88 'icmp' 'icmp_ln25_5' <Predicate = true> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%and_ln25_11 = and i1 %icmp_ln25_5, i1 %xor_ln25_3" [posit_lib.cpp:25->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 89 'and' 'and_ln25_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%and_ln25_12 = and i1 %and_ln25_11, i1 %icmp_ln24_3" [posit_lib.cpp:25->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 90 'and' 'and_ln25_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual)   --->   "%or_ln24 = or i1 %icmp_ln23_4, i1 %and_ln24" [posit_lib.cpp:24->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 91 'or' 'or_ln24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 92 [1/1] (0.33ns) (out node of the LUT)   --->   "%absXGreaterEqual = or i1 %or_ln24, i1 %and_ln25_12" [posit_lib.cpp:24->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 92 'or' 'absXGreaterEqual' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i)   --->   "%xor_ln27 = xor i1 %absXGreaterEqual, i1 %m_angle_sign_8" [posit_lib.cpp:27->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 93 'xor' 'xor_ln27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i)   --->   "%not_m_angle_sign = xor i1 %m_angle_sign_8, i1 1" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 94 'xor' 'not_m_angle_sign' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 95 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i = and i1 %xor_ln27, i1 %not_m_angle_sign" [posit_lib.cpp:27->posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 95 'and' 'retval_1_i' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%br_ln1196 = br i1 %retval_1_i, void %if.else.i, void %if.then.i" [posit_lib.cpp:1196->posit_lib.cpp:1235]   --->   Operation 96 'br' 'br_ln1196' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 97 [1/1] (0.88ns)   --->   "%icmp_ln23_5 = icmp_slt  i6 %m_angle_regime_9, i6 1" [posit_lib.cpp:23->posit_lib.cpp:1198->posit_lib.cpp:1235]   --->   Operation 97 'icmp' 'icmp_ln23_5' <Predicate = (!retval_1_i)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 98 [1/1] (1.17ns)   --->   "%icmp_ln25_6 = icmp_ult  i30 %m_angle_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:1198->posit_lib.cpp:1235]   --->   Operation 98 'icmp' 'icmp_ln25_6' <Predicate = (!retval_1_i)> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%and_ln25_13 = and i1 %icmp_ln25_6, i1 %xor_ln25_3" [posit_lib.cpp:25->posit_lib.cpp:1198->posit_lib.cpp:1235]   --->   Operation 99 'and' 'and_ln25_13' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%and_ln25_14 = and i1 %and_ln25_13, i1 %icmp_ln24_3" [posit_lib.cpp:25->posit_lib.cpp:1198->posit_lib.cpp:1235]   --->   Operation 100 'and' 'and_ln25_14' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%absXGreaterEqual_5 = or i1 %icmp_ln23_5, i1 %and_ln25_14" [posit_lib.cpp:23->posit_lib.cpp:1198->posit_lib.cpp:1235]   --->   Operation 101 'or' 'absXGreaterEqual_5' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i9)   --->   "%xor_ln27_4 = xor i1 %absXGreaterEqual_5, i1 1" [posit_lib.cpp:27->posit_lib.cpp:1198->posit_lib.cpp:1235]   --->   Operation 102 'xor' 'xor_ln27_4' <Predicate = (!retval_1_i)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 103 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i9 = and i1 %m_angle_sign_8, i1 %xor_ln27_4" [posit_lib.cpp:852->posit_lib.cpp:48->posit_lib.cpp:1194->posit_lib.cpp:1235]   --->   Operation 103 'and' 'retval_1_i9' <Predicate = (!retval_1_i)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 104 [1/1] (0.54ns)   --->   "%br_ln1198 = br i1 %retval_1_i9, void %if.end14.i, void %if.then10.i" [posit_lib.cpp:1198->posit_lib.cpp:1235]   --->   Operation 104 'br' 'br_ln1198' <Predicate = (!retval_1_i)> <Delay = 0.54>

State 11 <SV = 10> <Delay = 6.84>
ST_11 : Operation 105 [8/8] (6.84ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 105 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core
ST_11 : Operation 106 [8/8] (6.84ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 106 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 12 <SV = 11> <Delay = 7.14>
ST_12 : Operation 107 [7/8] (7.14ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 107 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_12 : Operation 108 [7/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 108 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 13 <SV = 12> <Delay = 7.14>
ST_13 : Operation 109 [6/8] (7.14ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 109 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_13 : Operation 110 [6/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 110 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 14 <SV = 13> <Delay = 7.14>
ST_14 : Operation 111 [5/8] (7.14ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 111 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_14 : Operation 112 [5/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 112 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 15 <SV = 14> <Delay = 7.14>
ST_15 : Operation 113 [4/8] (7.14ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 113 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_15 : Operation 114 [4/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 114 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 16 <SV = 15> <Delay = 7.14>
ST_16 : Operation 115 [3/8] (7.14ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 115 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_16 : Operation 116 [3/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 116 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 17 <SV = 16> <Delay = 7.14>
ST_17 : Operation 117 [2/8] (7.14ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 117 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_17 : Operation 118 [2/8] (7.14ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 118 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 18 <SV = 17> <Delay = 2.93>
ST_18 : Operation 119 [1/8] (0.54ns)   --->   "%call_ret8 = call i39 @positAdd, i1 1, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 0, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 119 'call' 'call_ret8' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_18 : Operation 120 [1/1] (0.00ns)   --->   "%m_angle_sign_5 = extractvalue i39 %call_ret8" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 120 'extractvalue' 'm_angle_sign_5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 121 [1/1] (0.00ns)   --->   "%m_angle_isZero_6 = extractvalue i39 %call_ret8" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 121 'extractvalue' 'm_angle_isZero_6' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 122 [1/1] (0.00ns)   --->   "%m_angle_regime_5 = extractvalue i39 %call_ret8" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 122 'extractvalue' 'm_angle_regime_5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 123 [1/1] (0.00ns)   --->   "%m_angle_exponent_5 = extractvalue i39 %call_ret8" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 123 'extractvalue' 'm_angle_exponent_5' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 124 [1/1] (0.00ns)   --->   "%m_angle_mantissa_6 = extractvalue i39 %call_ret8" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 124 'extractvalue' 'm_angle_mantissa_6' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.00>
ST_18 : Operation 125 [1/1] (0.54ns)   --->   "%br_ln1199 = br void %if.end14.i" [posit_lib.cpp:1199->posit_lib.cpp:1235]   --->   Operation 125 'br' 'br_ln1199' <Predicate = (!retval_1_i & retval_1_i9)> <Delay = 0.54>
ST_18 : Operation 126 [1/8] (0.54ns)   --->   "%call_ret = call i39 @positAdd, i1 %m_angle_sign_8, i1 %m_angle_isZero, i6 %m_angle_regime_9, i1 %m_angle_exponent_9, i30 %m_angle_mantissa, i1 1, i1 0, i6 2, i1 0, i30 842887333" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 126 'call' 'call_ret' <Predicate = (retval_1_i)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_18 : Operation 127 [1/1] (0.00ns)   --->   "%m_angle_sign = extractvalue i39 %call_ret" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 127 'extractvalue' 'm_angle_sign' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 128 [1/1] (0.00ns)   --->   "%m_angle_isZero_5 = extractvalue i39 %call_ret" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 128 'extractvalue' 'm_angle_isZero_5' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 129 [1/1] (0.00ns)   --->   "%m_angle_regime = extractvalue i39 %call_ret" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 129 'extractvalue' 'm_angle_regime' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 130 [1/1] (0.00ns)   --->   "%m_angle_exponent = extractvalue i39 %call_ret" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 130 'extractvalue' 'm_angle_exponent' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 131 [1/1] (0.00ns)   --->   "%m_angle_mantissa_5 = extractvalue i39 %call_ret" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 131 'extractvalue' 'm_angle_mantissa_5' <Predicate = (retval_1_i)> <Delay = 0.00>
ST_18 : Operation 132 [1/1] (0.54ns)   --->   "%br_ln1197 = br void %if.end14.i" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 132 'br' 'br_ln1197' <Predicate = (retval_1_i)> <Delay = 0.54>
ST_18 : Operation 133 [1/1] (0.00ns)   --->   "%x_sign_6 = phi i1 %m_angle_sign, void %if.then.i, i1 %m_angle_sign_5, void %if.then10.i, i1 %m_angle_sign_8, void %if.else.i"   --->   Operation 133 'phi' 'x_sign_6' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 134 [1/1] (0.00ns)   --->   "%x_regime_10 = phi i6 %m_angle_regime, void %if.then.i, i6 %m_angle_regime_5, void %if.then10.i, i6 %m_angle_regime_9, void %if.else.i"   --->   Operation 134 'phi' 'x_regime_10' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 135 [1/1] (0.00ns)   --->   "%x_exponent_7 = phi i1 %m_angle_exponent, void %if.then.i, i1 %m_angle_exponent_5, void %if.then10.i, i1 %m_angle_exponent_9, void %if.else.i"   --->   Operation 135 'phi' 'x_exponent_7' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 136 [1/1] (0.00ns)   --->   "%y_mantissa = phi i30 %m_angle_mantissa_5, void %if.then.i, i30 %m_angle_mantissa_6, void %if.then10.i, i30 %m_angle_mantissa, void %if.else.i"   --->   Operation 136 'phi' 'y_mantissa' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 137 [1/1] (0.88ns)   --->   "%icmp_ln23_6 = icmp_sgt  i6 %x_regime_10, i6 0" [posit_lib.cpp:23->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 137 'icmp' 'icmp_ln23_6' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 138 [1/1] (0.88ns)   --->   "%icmp_ln24_4 = icmp_eq  i6 %x_regime_10, i6 0" [posit_lib.cpp:24->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 138 'icmp' 'icmp_ln24_4' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_6)   --->   "%and_ln24_2 = and i1 %icmp_ln24_4, i1 %x_exponent_7" [posit_lib.cpp:24->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 139 'and' 'and_ln24_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 140 [1/1] (0.33ns)   --->   "%xor_ln25_4 = xor i1 %x_exponent_7, i1 1" [posit_lib.cpp:25->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 140 'xor' 'xor_ln25_4' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 141 [1/1] (1.17ns)   --->   "%icmp_ln25_7 = icmp_ugt  i30 %y_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 141 'icmp' 'icmp_ln25_7' <Predicate = true> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_6)   --->   "%and_ln25_15 = and i1 %icmp_ln25_7, i1 %xor_ln25_4" [posit_lib.cpp:25->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 142 'and' 'and_ln25_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_6)   --->   "%and_ln25_16 = and i1 %and_ln25_15, i1 %icmp_ln24_4" [posit_lib.cpp:25->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 143 'and' 'and_ln25_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node absXGreaterEqual_6)   --->   "%or_ln24_2 = or i1 %icmp_ln23_6, i1 %and_ln24_2" [posit_lib.cpp:24->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 144 'or' 'or_ln24_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 145 [1/1] (0.33ns) (out node of the LUT)   --->   "%absXGreaterEqual_6 = or i1 %or_ln24_2, i1 %and_ln25_16" [posit_lib.cpp:24->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 145 'or' 'absXGreaterEqual_6' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i20)   --->   "%xor_ln27_5 = xor i1 %absXGreaterEqual_6, i1 %x_sign_6" [posit_lib.cpp:27->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 146 'xor' 'xor_ln27_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i20)   --->   "%not_y_sign = xor i1 %x_sign_6, i1 1" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 147 'xor' 'not_y_sign' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 148 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i20 = and i1 %xor_ln27_5, i1 %not_y_sign" [posit_lib.cpp:27->posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 148 'and' 'retval_1_i20' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 149 [1/1] (0.00ns)   --->   "%br_ln1200 = br i1 %retval_1_i20, void %if.else22.i, void %if.then18.i" [posit_lib.cpp:1200->posit_lib.cpp:1235]   --->   Operation 149 'br' 'br_ln1200' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%tmp_54 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %x_regime_10, i32 5" [posit_lib.cpp:23->posit_lib.cpp:1202->posit_lib.cpp:1235]   --->   Operation 150 'bitselect' 'tmp_54' <Predicate = (!retval_1_i20)> <Delay = 0.00>
ST_18 : Operation 151 [1/1] (1.17ns)   --->   "%icmp_ln25_8 = icmp_ult  i30 %y_mantissa, i30 842887333" [posit_lib.cpp:25->posit_lib.cpp:1202->posit_lib.cpp:1235]   --->   Operation 151 'icmp' 'icmp_ln25_8' <Predicate = (!retval_1_i20)> <Delay = 1.17> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.17> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%and_ln25_17 = and i1 %icmp_ln25_8, i1 %xor_ln25_4" [posit_lib.cpp:25->posit_lib.cpp:1202->posit_lib.cpp:1235]   --->   Operation 152 'and' 'and_ln25_17' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%and_ln25_18 = and i1 %and_ln25_17, i1 %icmp_ln24_4" [posit_lib.cpp:25->posit_lib.cpp:1202->posit_lib.cpp:1235]   --->   Operation 153 'and' 'and_ln25_18' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%absXGreaterEqual_7 = or i1 %tmp_54, i1 %and_ln25_18" [posit_lib.cpp:23->posit_lib.cpp:1202->posit_lib.cpp:1235]   --->   Operation 154 'or' 'absXGreaterEqual_7' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node retval_1_i31)   --->   "%xor_ln27_6 = xor i1 %absXGreaterEqual_7, i1 1" [posit_lib.cpp:27->posit_lib.cpp:1202->posit_lib.cpp:1235]   --->   Operation 155 'xor' 'xor_ln27_6' <Predicate = (!retval_1_i20)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 156 [1/1] (0.33ns) (out node of the LUT)   --->   "%retval_1_i31 = and i1 %x_sign_6, i1 %xor_ln27_6" [posit_lib.cpp:1197->posit_lib.cpp:1235]   --->   Operation 156 'and' 'retval_1_i31' <Predicate = (!retval_1_i20)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.84>
ST_19 : Operation 157 [1/1] (0.00ns)   --->   "%y_isZero = phi i1 %m_angle_isZero_5, void %if.then.i, i1 %m_angle_isZero_6, void %if.then10.i, i1 %m_angle_isZero, void %if.else.i"   --->   Operation 157 'phi' 'y_isZero' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 158 [1/1] (0.54ns)   --->   "%br_ln1202 = br i1 %retval_1_i31, void %_Z7pNAngle5POSIT.1259.exit, void %if.then26.i" [posit_lib.cpp:1202->posit_lib.cpp:1235]   --->   Operation 158 'br' 'br_ln1202' <Predicate = (!retval_1_i20)> <Delay = 0.54>
ST_19 : Operation 159 [8/8] (6.84ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 159 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core
ST_19 : Operation 160 [8/8] (6.84ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 160 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 20 <SV = 19> <Delay = 7.14>
ST_20 : Operation 161 [7/8] (7.14ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 161 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_20 : Operation 162 [7/8] (7.14ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 162 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 21 <SV = 20> <Delay = 7.14>
ST_21 : Operation 163 [6/8] (7.14ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 163 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_21 : Operation 164 [6/8] (7.14ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 164 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 22 <SV = 21> <Delay = 7.14>
ST_22 : Operation 165 [5/8] (7.14ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 165 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_22 : Operation 166 [5/8] (7.14ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 166 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 23 <SV = 22> <Delay = 7.14>
ST_23 : Operation 167 [4/8] (7.14ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 167 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_23 : Operation 168 [4/8] (7.14ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 168 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 24 <SV = 23> <Delay = 7.14>
ST_24 : Operation 169 [3/8] (7.14ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 169 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_24 : Operation 170 [3/8] (7.14ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 170 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 25 <SV = 24> <Delay = 7.14>
ST_25 : Operation 171 [2/8] (7.14ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 171 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core
ST_25 : Operation 172 [2/8] (7.14ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 172 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 26 <SV = 25> <Delay = 1.42>
ST_26 : Operation 173 [1/8] (0.54ns)   --->   "%call_ret1 = call i39 @positAdd, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa, i1 0, i1 0, i6 1, i1 0, i30 842887333" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 173 'call' 'call_ret1' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_26 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node m_angle_sign_7)   --->   "%newret = extractvalue i39 %call_ret1" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 174 'extractvalue' 'newret' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 175 [1/1] (0.00ns)   --->   "%m_angle_isZero_8 = extractvalue i39 %call_ret1" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 175 'extractvalue' 'm_angle_isZero_8' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 176 [1/1] (0.00ns)   --->   "%m_angle_regime_7 = extractvalue i39 %call_ret1" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 176 'extractvalue' 'm_angle_regime_7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 177 [1/1] (0.00ns)   --->   "%m_angle_exponent_7 = extractvalue i39 %call_ret1" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 177 'extractvalue' 'm_angle_exponent_7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 178 [1/1] (0.00ns)   --->   "%m_angle_mantissa_8 = extractvalue i39 %call_ret1" [posit_lib.cpp:1203->posit_lib.cpp:1235]   --->   Operation 178 'extractvalue' 'm_angle_mantissa_8' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.00>
ST_26 : Operation 179 [1/1] (0.33ns) (out node of the LUT)   --->   "%m_angle_sign_7 = xor i1 %newret, i1 1" [posit_lib.cpp:1204->posit_lib.cpp:1235]   --->   Operation 179 'xor' 'm_angle_sign_7' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 180 [1/1] (0.54ns)   --->   "%br_ln1205 = br void %_Z7pNAngle5POSIT.1259.exit" [posit_lib.cpp:1205->posit_lib.cpp:1235]   --->   Operation 180 'br' 'br_ln1205' <Predicate = (!retval_1_i20 & retval_1_i31)> <Delay = 0.54>
ST_26 : Operation 181 [1/8] (0.54ns)   --->   "%call_ret9 = call i39 @positAdd, i1 0, i1 0, i6 1, i1 0, i30 842887333, i1 1, i1 %y_isZero, i6 %x_regime_10, i1 %x_exponent_7, i30 %y_mantissa" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 181 'call' 'call_ret9' <Predicate = (retval_1_i20)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_26 : Operation 182 [1/1] (0.00ns)   --->   "%result_sign = extractvalue i39 %call_ret9" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 182 'extractvalue' 'result_sign' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 183 [1/1] (0.00ns)   --->   "%result_isZero_6 = extractvalue i39 %call_ret9" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 183 'extractvalue' 'result_isZero_6' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 184 [1/1] (0.00ns)   --->   "%result_regime_17 = extractvalue i39 %call_ret9" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 184 'extractvalue' 'result_regime_17' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 185 [1/1] (0.00ns)   --->   "%result_exponent_2 = extractvalue i39 %call_ret9" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 185 'extractvalue' 'result_exponent_2' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 186 [1/1] (0.00ns)   --->   "%result_mantissa_8 = extractvalue i39 %call_ret9" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 186 'extractvalue' 'result_mantissa_8' <Predicate = (retval_1_i20)> <Delay = 0.00>
ST_26 : Operation 187 [1/1] (0.54ns)   --->   "%br_ln1201 = br void %_Z7pNAngle5POSIT.1259.exit" [posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 187 'br' 'br_ln1201' <Predicate = (retval_1_i20)> <Delay = 0.54>
ST_26 : Operation 188 [1/1] (0.00ns)   --->   "%ref_tmp_0292_2 = phi i1 %result_sign, void %if.then18.i, i1 %m_angle_sign_7, void %if.then26.i, i1 %x_sign_6, void %if.else22.i"   --->   Operation 188 'phi' 'ref_tmp_0292_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 189 [1/1] (0.00ns)   --->   "%ref_tmp_1293_2 = phi i1 %result_isZero_6, void %if.then18.i, i1 %m_angle_isZero_8, void %if.then26.i, i1 %y_isZero, void %if.else22.i"   --->   Operation 189 'phi' 'ref_tmp_1293_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 190 [1/1] (0.00ns)   --->   "%ref_tmp_3_2 = phi i6 %result_regime_17, void %if.then18.i, i6 %m_angle_regime_7, void %if.then26.i, i6 %x_regime_10, void %if.else22.i"   --->   Operation 190 'phi' 'ref_tmp_3_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 191 [1/1] (0.00ns)   --->   "%ref_tmp_4_2 = phi i1 %result_exponent_2, void %if.then18.i, i1 %m_angle_exponent_7, void %if.then26.i, i1 %x_exponent_7, void %if.else22.i"   --->   Operation 191 'phi' 'ref_tmp_4_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 192 [1/1] (0.00ns)   --->   "%ref_tmp_5_2 = phi i30 %result_mantissa_8, void %if.then18.i, i30 %m_angle_mantissa_8, void %if.then26.i, i30 %y_mantissa, void %if.else22.i"   --->   Operation 192 'phi' 'ref_tmp_5_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 193 [1/1] (0.00ns)   --->   "%mrv = insertvalue i39 <undef>, i1 %ref_tmp_0292_2" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 193 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 194 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i39 %mrv, i1 %ref_tmp_1293_2" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 194 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 195 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i39 %mrv_1, i6 %ref_tmp_3_2" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 195 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 196 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i39 %mrv_2, i1 %ref_tmp_4_2" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 196 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 197 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i39 %mrv_3, i30 %ref_tmp_5_2" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 197 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 198 [1/1] (0.00ns)   --->   "%ret_ln852 = ret i39 %mrv_4" [posit_lib.cpp:852->posit_lib.cpp:1201->posit_lib.cpp:1235]   --->   Operation 198 'ret' 'ret_ln852' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ x_sign]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ x_isZero]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ x_regime]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ x_exponent]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ x_mantissa]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
x_mantissa_read    (read          ) [ 011111111100000000000000000]
x_exponent_read    (read          ) [ 011111111100000000000000000]
x_regime_read      (read          ) [ 011111111100000000000000000]
x_isZero_read      (read          ) [ 011111111100000000000000000]
x_sign_read        (read          ) [ 011111111110000000000000000]
tmp                (partselect    ) [ 000000000000000000000000000]
icmp_ln23          (icmp          ) [ 011111111110000000000000000]
br_ln23            (br            ) [ 000000000000000000000000000]
icmp_ln24          (icmp          ) [ 000000000000000000000000000]
xor_ln25           (xor           ) [ 000000000000000000000000000]
icmp_ln25          (icmp          ) [ 000000000000000000000000000]
and_ln25           (and           ) [ 000000000000000000000000000]
absXGreaterEqual_9 (and           ) [ 011111111110000000000000000]
br_ln42            (br            ) [ 000000000000000000000000000]
shl_ln             (bitconcatenate) [ 000000000000000000000000000]
zext_ln675_2       (zext          ) [ 000000000000000000000000000]
mul_ln675          (mul           ) [ 000000000000000000000000000]
zext_ln680         (zext          ) [ 000000000000000000000000000]
tmp_50             (bitselect     ) [ 011000000000000000000000000]
zext_ln675         (zext          ) [ 000000000000000000000000000]
select_ln680       (select        ) [ 000000000000000000000000000]
add_ln680          (add           ) [ 000000000000000000000000000]
sf_r               (add           ) [ 000000000000000000000000000]
icmp_ln703         (icmp          ) [ 000000000000000000000000000]
select_ln720       (select        ) [ 000000000000000000000000000]
or_ln720           (or            ) [ 000000000000000000000000000]
regime             (select        ) [ 000000000000000000000000000]
regime_17          (add           ) [ 000000000000000000000000000]
icmp_ln803         (icmp          ) [ 000000000000000000000000000]
icmp_ln804         (icmp          ) [ 000000000000000000000000000]
select_ln804       (select        ) [ 000000000000000000000000000]
or_ln820           (or            ) [ 000000000000000000000000000]
regime_19          (select        ) [ 010100000000000000000000000]
select_ln739       (select        ) [ 000000000000000000000000000]
tmp_i              (bitconcatenate) [ 010000000110000000000000000]
br_ln42            (br            ) [ 010000000110000000000000000]
call_ret_i         (call          ) [ 000000000000000000000000000]
result_isZero      (extractvalue  ) [ 000000000000000000000000000]
result_regime      (extractvalue  ) [ 000000000000000000000000000]
result_exponent    (extractvalue  ) [ 000000000000000000000000000]
result_mantissa    (extractvalue  ) [ 000000000000000000000000000]
tmp_18_i           (bitconcatenate) [ 000000000000000000000000000]
br_ln50            (br            ) [ 000000000000000000000000000]
storemerge_in_i    (phi           ) [ 010000000010000000000000000]
m_angle_sign_8     (trunc         ) [ 010000000011111111100000000]
m_angle_isZero     (bitselect     ) [ 010000000011111111110000000]
m_angle_regime_9   (partselect    ) [ 010000000011111111100000000]
m_angle_exponent_9 (bitselect     ) [ 010000000011111111100000000]
m_angle_mantissa   (partselect    ) [ 010000000011111111100000000]
tmp_53             (partselect    ) [ 000000000000000000000000000]
icmp_ln23_4        (icmp          ) [ 000000000000000000000000000]
icmp_ln24_3        (icmp          ) [ 000000000000000000000000000]
and_ln24           (and           ) [ 000000000000000000000000000]
xor_ln25_3         (xor           ) [ 000000000000000000000000000]
icmp_ln25_5        (icmp          ) [ 000000000000000000000000000]
and_ln25_11        (and           ) [ 000000000000000000000000000]
and_ln25_12        (and           ) [ 000000000000000000000000000]
or_ln24            (or            ) [ 000000000000000000000000000]
absXGreaterEqual   (or            ) [ 000000000000000000000000000]
xor_ln27           (xor           ) [ 000000000000000000000000000]
not_m_angle_sign   (xor           ) [ 000000000000000000000000000]
retval_1_i         (and           ) [ 010000000011111111100000000]
br_ln1196          (br            ) [ 000000000000000000000000000]
icmp_ln23_5        (icmp          ) [ 000000000000000000000000000]
icmp_ln25_6        (icmp          ) [ 000000000000000000000000000]
and_ln25_13        (and           ) [ 000000000000000000000000000]
and_ln25_14        (and           ) [ 000000000000000000000000000]
absXGreaterEqual_5 (or            ) [ 000000000000000000000000000]
xor_ln27_4         (xor           ) [ 000000000000000000000000000]
retval_1_i9        (and           ) [ 010000000001111111100000000]
br_ln1198          (br            ) [ 010000000011111111110000000]
call_ret8          (call          ) [ 000000000000000000000000000]
m_angle_sign_5     (extractvalue  ) [ 000000000000000000000000000]
m_angle_isZero_6   (extractvalue  ) [ 010000000010000000110000000]
m_angle_regime_5   (extractvalue  ) [ 000000000000000000000000000]
m_angle_exponent_5 (extractvalue  ) [ 000000000000000000000000000]
m_angle_mantissa_6 (extractvalue  ) [ 000000000000000000000000000]
br_ln1199          (br            ) [ 010000000010000000110000000]
call_ret           (call          ) [ 000000000000000000000000000]
m_angle_sign       (extractvalue  ) [ 000000000000000000000000000]
m_angle_isZero_5   (extractvalue  ) [ 010000000010000000110000000]
m_angle_regime     (extractvalue  ) [ 000000000000000000000000000]
m_angle_exponent   (extractvalue  ) [ 000000000000000000000000000]
m_angle_mantissa_5 (extractvalue  ) [ 000000000000000000000000000]
br_ln1197          (br            ) [ 010000000010000000110000000]
x_sign_6           (phi           ) [ 010000000001111111111111111]
x_regime_10        (phi           ) [ 010000000001111111111111111]
x_exponent_7       (phi           ) [ 010000000001111111111111111]
y_mantissa         (phi           ) [ 010000000001111111111111111]
icmp_ln23_6        (icmp          ) [ 000000000000000000000000000]
icmp_ln24_4        (icmp          ) [ 000000000000000000000000000]
and_ln24_2         (and           ) [ 000000000000000000000000000]
xor_ln25_4         (xor           ) [ 000000000000000000000000000]
icmp_ln25_7        (icmp          ) [ 000000000000000000000000000]
and_ln25_15        (and           ) [ 000000000000000000000000000]
and_ln25_16        (and           ) [ 000000000000000000000000000]
or_ln24_2          (or            ) [ 000000000000000000000000000]
absXGreaterEqual_6 (or            ) [ 000000000000000000000000000]
xor_ln27_5         (xor           ) [ 000000000000000000000000000]
not_y_sign         (xor           ) [ 000000000000000000000000000]
retval_1_i20       (and           ) [ 010000000000000000111111111]
br_ln1200          (br            ) [ 000000000000000000000000000]
tmp_54             (bitselect     ) [ 000000000000000000000000000]
icmp_ln25_8        (icmp          ) [ 000000000000000000000000000]
and_ln25_17        (and           ) [ 000000000000000000000000000]
and_ln25_18        (and           ) [ 000000000000000000000000000]
absXGreaterEqual_7 (or            ) [ 000000000000000000000000000]
xor_ln27_6         (xor           ) [ 000000000000000000000000000]
retval_1_i31       (and           ) [ 010000000000000000011111111]
y_isZero           (phi           ) [ 010000000000000000011111111]
br_ln1202          (br            ) [ 010000000000000000011111111]
call_ret1          (call          ) [ 000000000000000000000000000]
newret             (extractvalue  ) [ 000000000000000000000000000]
m_angle_isZero_8   (extractvalue  ) [ 000000000000000000000000000]
m_angle_regime_7   (extractvalue  ) [ 000000000000000000000000000]
m_angle_exponent_7 (extractvalue  ) [ 000000000000000000000000000]
m_angle_mantissa_8 (extractvalue  ) [ 000000000000000000000000000]
m_angle_sign_7     (xor           ) [ 000000000000000000000000000]
br_ln1205          (br            ) [ 000000000000000000000000000]
call_ret9          (call          ) [ 000000000000000000000000000]
result_sign        (extractvalue  ) [ 000000000000000000000000000]
result_isZero_6    (extractvalue  ) [ 000000000000000000000000000]
result_regime_17   (extractvalue  ) [ 000000000000000000000000000]
result_exponent_2  (extractvalue  ) [ 000000000000000000000000000]
result_mantissa_8  (extractvalue  ) [ 000000000000000000000000000]
br_ln1201          (br            ) [ 000000000000000000000000000]
ref_tmp_0292_2     (phi           ) [ 010000000000000000001111111]
ref_tmp_1293_2     (phi           ) [ 010000000000000000001111111]
ref_tmp_3_2        (phi           ) [ 010000000000000000001111111]
ref_tmp_4_2        (phi           ) [ 010000000000000000001111111]
ref_tmp_5_2        (phi           ) [ 010000000000000000001111111]
mrv                (insertvalue   ) [ 000000000000000000000000000]
mrv_1              (insertvalue   ) [ 000000000000000000000000000]
mrv_2              (insertvalue   ) [ 000000000000000000000000000]
mrv_3              (insertvalue   ) [ 000000000000000000000000000]
mrv_4              (insertvalue   ) [ 000000000000000000000000000]
ret_ln852          (ret           ) [ 000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="x_sign">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_sign"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="x_isZero">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_isZero"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="x_regime">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_regime"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="x_exponent">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_exponent"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="x_mantissa">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="x_mantissa"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i30"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i6"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i5.i6.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i59.i30.i29"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i149.i32"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="positAdd"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitConcatenate.i94.i30.i31.i1.i2.i6.i15.i1.i7.i1"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i94.i32"/></StgValue>
</bind>
</comp>

<comp id="70" class="1001" name="const_70">
<pin_list>
<pin id="71" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="72" class="1001" name="const_72">
<pin_list>
<pin id="73" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i6.i94.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="74" class="1001" name="const_74">
<pin_list>
<pin id="75" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="76" class="1001" name="const_76">
<pin_list>
<pin id="77" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="78" class="1001" name="const_78">
<pin_list>
<pin id="79" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="80" class="1001" name="const_80">
<pin_list>
<pin id="81" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i30.i94.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="82" class="1001" name="const_82">
<pin_list>
<pin id="83" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="84" class="1001" name="const_84">
<pin_list>
<pin id="85" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="86" class="1001" name="const_86">
<pin_list>
<pin id="87" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i5.i94.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="88" class="1001" name="const_88">
<pin_list>
<pin id="89" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="90" class="1001" name="const_90">
<pin_list>
<pin id="91" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="92" class="1001" name="const_92">
<pin_list>
<pin id="93" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="94" class="1001" name="const_94">
<pin_list>
<pin id="95" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i6.i32"/></StgValue>
</bind>
</comp>

<comp id="96" class="1001" name="const_96">
<pin_list>
<pin id="97" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="98" class="1004" name="x_mantissa_read_read_fu_98">
<pin_list>
<pin id="99" dir="0" index="0" bw="30" slack="0"/>
<pin id="100" dir="0" index="1" bw="30" slack="0"/>
<pin id="101" dir="1" index="2" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_mantissa_read/1 "/>
</bind>
</comp>

<comp id="104" class="1004" name="x_exponent_read_read_fu_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="1" slack="0"/>
<pin id="106" dir="0" index="1" bw="1" slack="0"/>
<pin id="107" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_exponent_read/1 "/>
</bind>
</comp>

<comp id="110" class="1004" name="x_regime_read_read_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="6" slack="0"/>
<pin id="112" dir="0" index="1" bw="6" slack="0"/>
<pin id="113" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_regime_read/1 "/>
</bind>
</comp>

<comp id="116" class="1004" name="x_isZero_read_read_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="1" slack="0"/>
<pin id="118" dir="0" index="1" bw="1" slack="0"/>
<pin id="119" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_isZero_read/1 "/>
</bind>
</comp>

<comp id="122" class="1004" name="x_sign_read_read_fu_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="1" slack="0"/>
<pin id="124" dir="0" index="1" bw="1" slack="0"/>
<pin id="125" dir="1" index="2" bw="1" slack="8"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="x_sign_read/1 "/>
</bind>
</comp>

<comp id="128" class="1005" name="storemerge_in_i_reg_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="94" slack="2147483647"/>
<pin id="130" dir="1" index="1" bw="94" slack="2147483647"/>
</pin_list>
<bind>
<opset="storemerge_in_i (phireg) "/>
</bind>
</comp>

<comp id="131" class="1004" name="storemerge_in_i_phi_fu_131">
<pin_list>
<pin id="132" dir="0" index="0" bw="94" slack="0"/>
<pin id="133" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="134" dir="0" index="2" bw="94" slack="1"/>
<pin id="135" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="136" dir="1" index="4" bw="94" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="storemerge_in_i/10 "/>
</bind>
</comp>

<comp id="137" class="1005" name="x_sign_6_reg_137">
<pin_list>
<pin id="138" dir="0" index="0" bw="1" slack="8"/>
<pin id="139" dir="1" index="1" bw="1" slack="8"/>
</pin_list>
<bind>
<opset="x_sign_6 (phireg) "/>
</bind>
</comp>

<comp id="140" class="1004" name="x_sign_6_phi_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="1" slack="0"/>
<pin id="142" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="143" dir="0" index="2" bw="1" slack="0"/>
<pin id="144" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="145" dir="0" index="4" bw="1" slack="8"/>
<pin id="146" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="147" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="x_sign_6/18 "/>
</bind>
</comp>

<comp id="149" class="1005" name="x_regime_10_reg_149">
<pin_list>
<pin id="150" dir="0" index="0" bw="6" slack="1"/>
<pin id="151" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="x_regime_10 (phireg) "/>
</bind>
</comp>

<comp id="152" class="1004" name="x_regime_10_phi_fu_152">
<pin_list>
<pin id="153" dir="0" index="0" bw="6" slack="0"/>
<pin id="154" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="155" dir="0" index="2" bw="6" slack="0"/>
<pin id="156" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="157" dir="0" index="4" bw="6" slack="8"/>
<pin id="158" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="159" dir="1" index="6" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="x_regime_10/18 "/>
</bind>
</comp>

<comp id="161" class="1005" name="x_exponent_7_reg_161">
<pin_list>
<pin id="162" dir="0" index="0" bw="1" slack="1"/>
<pin id="163" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="x_exponent_7 (phireg) "/>
</bind>
</comp>

<comp id="164" class="1004" name="x_exponent_7_phi_fu_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="1" slack="0"/>
<pin id="166" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="167" dir="0" index="2" bw="1" slack="0"/>
<pin id="168" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="169" dir="0" index="4" bw="1" slack="8"/>
<pin id="170" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="171" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="x_exponent_7/18 "/>
</bind>
</comp>

<comp id="173" class="1005" name="y_mantissa_reg_173">
<pin_list>
<pin id="174" dir="0" index="0" bw="30" slack="1"/>
<pin id="175" dir="1" index="1" bw="30" slack="1"/>
</pin_list>
<bind>
<opset="y_mantissa (phireg) "/>
</bind>
</comp>

<comp id="176" class="1004" name="y_mantissa_phi_fu_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="30" slack="0"/>
<pin id="178" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="179" dir="0" index="2" bw="30" slack="0"/>
<pin id="180" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="181" dir="0" index="4" bw="30" slack="8"/>
<pin id="182" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="183" dir="1" index="6" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="y_mantissa/18 "/>
</bind>
</comp>

<comp id="185" class="1005" name="y_isZero_reg_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="1" slack="1"/>
<pin id="187" dir="1" index="1" bw="1" slack="7"/>
</pin_list>
<bind>
<opset="y_isZero (phireg) "/>
</bind>
</comp>

<comp id="188" class="1004" name="y_isZero_phi_fu_188">
<pin_list>
<pin id="189" dir="0" index="0" bw="1" slack="1"/>
<pin id="190" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="191" dir="0" index="2" bw="1" slack="1"/>
<pin id="192" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="193" dir="0" index="4" bw="1" slack="9"/>
<pin id="194" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="195" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="y_isZero/19 "/>
</bind>
</comp>

<comp id="197" class="1005" name="ref_tmp_0292_2_reg_197">
<pin_list>
<pin id="198" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="199" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_0292_2 (phireg) "/>
</bind>
</comp>

<comp id="200" class="1004" name="ref_tmp_0292_2_phi_fu_200">
<pin_list>
<pin id="201" dir="0" index="0" bw="1" slack="0"/>
<pin id="202" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="203" dir="0" index="2" bw="1" slack="0"/>
<pin id="204" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="205" dir="0" index="4" bw="1" slack="8"/>
<pin id="206" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="207" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_0292_2/26 "/>
</bind>
</comp>

<comp id="209" class="1005" name="ref_tmp_1293_2_reg_209">
<pin_list>
<pin id="210" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="211" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_1293_2 (phireg) "/>
</bind>
</comp>

<comp id="212" class="1004" name="ref_tmp_1293_2_phi_fu_212">
<pin_list>
<pin id="213" dir="0" index="0" bw="1" slack="0"/>
<pin id="214" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="215" dir="0" index="2" bw="1" slack="0"/>
<pin id="216" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="217" dir="0" index="4" bw="1" slack="7"/>
<pin id="218" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="219" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_1293_2/26 "/>
</bind>
</comp>

<comp id="221" class="1005" name="ref_tmp_3_2_reg_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="6" slack="2147483647"/>
<pin id="223" dir="1" index="1" bw="6" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_3_2 (phireg) "/>
</bind>
</comp>

<comp id="224" class="1004" name="ref_tmp_3_2_phi_fu_224">
<pin_list>
<pin id="225" dir="0" index="0" bw="6" slack="0"/>
<pin id="226" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="227" dir="0" index="2" bw="6" slack="0"/>
<pin id="228" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="229" dir="0" index="4" bw="6" slack="8"/>
<pin id="230" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="231" dir="1" index="6" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_3_2/26 "/>
</bind>
</comp>

<comp id="233" class="1005" name="ref_tmp_4_2_reg_233">
<pin_list>
<pin id="234" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="235" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_4_2 (phireg) "/>
</bind>
</comp>

<comp id="236" class="1004" name="ref_tmp_4_2_phi_fu_236">
<pin_list>
<pin id="237" dir="0" index="0" bw="1" slack="0"/>
<pin id="238" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="239" dir="0" index="2" bw="1" slack="0"/>
<pin id="240" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="241" dir="0" index="4" bw="1" slack="8"/>
<pin id="242" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="243" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_4_2/26 "/>
</bind>
</comp>

<comp id="245" class="1005" name="ref_tmp_5_2_reg_245">
<pin_list>
<pin id="246" dir="0" index="0" bw="30" slack="2147483647"/>
<pin id="247" dir="1" index="1" bw="30" slack="2147483647"/>
</pin_list>
<bind>
<opset="ref_tmp_5_2 (phireg) "/>
</bind>
</comp>

<comp id="248" class="1004" name="ref_tmp_5_2_phi_fu_248">
<pin_list>
<pin id="249" dir="0" index="0" bw="30" slack="0"/>
<pin id="250" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="251" dir="0" index="2" bw="30" slack="0"/>
<pin id="252" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="253" dir="0" index="4" bw="30" slack="8"/>
<pin id="254" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="255" dir="1" index="6" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="ref_tmp_5_2/26 "/>
</bind>
</comp>

<comp id="257" class="1004" name="grp_positAdd_fu_257">
<pin_list>
<pin id="258" dir="0" index="0" bw="39" slack="0"/>
<pin id="259" dir="0" index="1" bw="1" slack="0"/>
<pin id="260" dir="0" index="2" bw="1" slack="2"/>
<pin id="261" dir="0" index="3" bw="6" slack="2"/>
<pin id="262" dir="0" index="4" bw="1" slack="2"/>
<pin id="263" dir="0" index="5" bw="30" slack="2"/>
<pin id="264" dir="0" index="6" bw="1" slack="0"/>
<pin id="265" dir="0" index="7" bw="1" slack="2"/>
<pin id="266" dir="0" index="8" bw="6" slack="1"/>
<pin id="267" dir="0" index="9" bw="1" slack="0"/>
<pin id="268" dir="0" index="10" bw="29" slack="0"/>
<pin id="269" dir="1" index="11" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret_i/3 "/>
</bind>
</comp>

<comp id="274" class="1004" name="grp_positAdd_fu_274">
<pin_list>
<pin id="275" dir="0" index="0" bw="39" slack="0"/>
<pin id="276" dir="0" index="1" bw="1" slack="0"/>
<pin id="277" dir="0" index="2" bw="1" slack="1"/>
<pin id="278" dir="0" index="3" bw="6" slack="1"/>
<pin id="279" dir="0" index="4" bw="1" slack="1"/>
<pin id="280" dir="0" index="5" bw="30" slack="1"/>
<pin id="281" dir="0" index="6" bw="1" slack="0"/>
<pin id="282" dir="0" index="7" bw="1" slack="0"/>
<pin id="283" dir="0" index="8" bw="3" slack="0"/>
<pin id="284" dir="0" index="9" bw="1" slack="0"/>
<pin id="285" dir="0" index="10" bw="29" slack="0"/>
<pin id="286" dir="1" index="11" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret8/11 call_ret/11 "/>
</bind>
</comp>

<comp id="295" class="1004" name="grp_positAdd_fu_295">
<pin_list>
<pin id="296" dir="0" index="0" bw="39" slack="0"/>
<pin id="297" dir="0" index="1" bw="1" slack="0"/>
<pin id="298" dir="0" index="2" bw="1" slack="0"/>
<pin id="299" dir="0" index="3" bw="6" slack="0"/>
<pin id="300" dir="0" index="4" bw="1" slack="0"/>
<pin id="301" dir="0" index="5" bw="30" slack="0"/>
<pin id="302" dir="0" index="6" bw="1" slack="0"/>
<pin id="303" dir="0" index="7" bw="1" slack="0"/>
<pin id="304" dir="0" index="8" bw="6" slack="0"/>
<pin id="305" dir="0" index="9" bw="1" slack="0"/>
<pin id="306" dir="0" index="10" bw="30" slack="0"/>
<pin id="307" dir="1" index="11" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="call_ret1/19 call_ret9/19 "/>
</bind>
</comp>

<comp id="329" class="1004" name="mul_ln675_fu_329">
<pin_list>
<pin id="330" dir="0" index="0" bw="59" slack="0"/>
<pin id="331" dir="0" index="1" bw="61" slack="0"/>
<pin id="332" dir="1" index="2" bw="119" slack="0"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="mul_ln675/1 "/>
</bind>
</comp>

<comp id="334" class="1004" name="grp_fu_334">
<pin_list>
<pin id="335" dir="0" index="0" bw="39" slack="0"/>
<pin id="336" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_sign_5/18 m_angle_sign/18 "/>
</bind>
</comp>

<comp id="340" class="1004" name="grp_fu_340">
<pin_list>
<pin id="341" dir="0" index="0" bw="39" slack="0"/>
<pin id="342" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_isZero_6/18 m_angle_isZero_5/18 "/>
</bind>
</comp>

<comp id="344" class="1004" name="grp_fu_344">
<pin_list>
<pin id="345" dir="0" index="0" bw="39" slack="0"/>
<pin id="346" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_regime_5/18 m_angle_regime/18 "/>
</bind>
</comp>

<comp id="350" class="1004" name="grp_fu_350">
<pin_list>
<pin id="351" dir="0" index="0" bw="39" slack="0"/>
<pin id="352" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_exponent_5/18 m_angle_exponent/18 "/>
</bind>
</comp>

<comp id="356" class="1004" name="grp_fu_356">
<pin_list>
<pin id="357" dir="0" index="0" bw="39" slack="0"/>
<pin id="358" dir="1" index="1" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_mantissa_6/18 m_angle_mantissa_5/18 "/>
</bind>
</comp>

<comp id="362" class="1004" name="grp_fu_362">
<pin_list>
<pin id="363" dir="0" index="0" bw="39" slack="0"/>
<pin id="364" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_isZero_8/26 result_isZero_6/26 "/>
</bind>
</comp>

<comp id="368" class="1004" name="grp_fu_368">
<pin_list>
<pin id="369" dir="0" index="0" bw="39" slack="0"/>
<pin id="370" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_regime_7/26 result_regime_17/26 "/>
</bind>
</comp>

<comp id="374" class="1004" name="grp_fu_374">
<pin_list>
<pin id="375" dir="0" index="0" bw="39" slack="0"/>
<pin id="376" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_exponent_7/26 result_exponent_2/26 "/>
</bind>
</comp>

<comp id="380" class="1004" name="grp_fu_380">
<pin_list>
<pin id="381" dir="0" index="0" bw="39" slack="0"/>
<pin id="382" dir="1" index="1" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="m_angle_mantissa_8/26 result_mantissa_8/26 "/>
</bind>
</comp>

<comp id="386" class="1004" name="tmp_fu_386">
<pin_list>
<pin id="387" dir="0" index="0" bw="5" slack="0"/>
<pin id="388" dir="0" index="1" bw="6" slack="0"/>
<pin id="389" dir="0" index="2" bw="1" slack="0"/>
<pin id="390" dir="0" index="3" bw="4" slack="0"/>
<pin id="391" dir="1" index="4" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="396" class="1004" name="icmp_ln23_fu_396">
<pin_list>
<pin id="397" dir="0" index="0" bw="5" slack="0"/>
<pin id="398" dir="0" index="1" bw="5" slack="0"/>
<pin id="399" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23/1 "/>
</bind>
</comp>

<comp id="402" class="1004" name="icmp_ln24_fu_402">
<pin_list>
<pin id="403" dir="0" index="0" bw="6" slack="0"/>
<pin id="404" dir="0" index="1" bw="6" slack="0"/>
<pin id="405" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln24/1 "/>
</bind>
</comp>

<comp id="408" class="1004" name="xor_ln25_fu_408">
<pin_list>
<pin id="409" dir="0" index="0" bw="1" slack="0"/>
<pin id="410" dir="0" index="1" bw="1" slack="0"/>
<pin id="411" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln25/1 "/>
</bind>
</comp>

<comp id="414" class="1004" name="icmp_ln25_fu_414">
<pin_list>
<pin id="415" dir="0" index="0" bw="30" slack="0"/>
<pin id="416" dir="0" index="1" bw="30" slack="0"/>
<pin id="417" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25/1 "/>
</bind>
</comp>

<comp id="420" class="1004" name="and_ln25_fu_420">
<pin_list>
<pin id="421" dir="0" index="0" bw="1" slack="0"/>
<pin id="422" dir="0" index="1" bw="1" slack="0"/>
<pin id="423" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25/1 "/>
</bind>
</comp>

<comp id="426" class="1004" name="absXGreaterEqual_9_fu_426">
<pin_list>
<pin id="427" dir="0" index="0" bw="1" slack="0"/>
<pin id="428" dir="0" index="1" bw="1" slack="0"/>
<pin id="429" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="absXGreaterEqual_9/1 "/>
</bind>
</comp>

<comp id="432" class="1004" name="shl_ln_fu_432">
<pin_list>
<pin id="433" dir="0" index="0" bw="59" slack="0"/>
<pin id="434" dir="0" index="1" bw="30" slack="0"/>
<pin id="435" dir="0" index="2" bw="1" slack="0"/>
<pin id="436" dir="1" index="3" bw="59" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="shl_ln/1 "/>
</bind>
</comp>

<comp id="440" class="1004" name="zext_ln675_2_fu_440">
<pin_list>
<pin id="441" dir="0" index="0" bw="59" slack="0"/>
<pin id="442" dir="1" index="1" bw="119" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln675_2/1 "/>
</bind>
</comp>

<comp id="445" class="1004" name="zext_ln680_fu_445">
<pin_list>
<pin id="446" dir="0" index="0" bw="119" slack="0"/>
<pin id="447" dir="1" index="1" bw="149" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln680/1 "/>
</bind>
</comp>

<comp id="449" class="1004" name="tmp_50_fu_449">
<pin_list>
<pin id="450" dir="0" index="0" bw="1" slack="0"/>
<pin id="451" dir="0" index="1" bw="119" slack="0"/>
<pin id="452" dir="0" index="2" bw="8" slack="0"/>
<pin id="453" dir="1" index="3" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_50/1 "/>
</bind>
</comp>

<comp id="457" class="1004" name="zext_ln675_fu_457">
<pin_list>
<pin id="458" dir="0" index="0" bw="1" slack="1"/>
<pin id="459" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln675/2 "/>
</bind>
</comp>

<comp id="460" class="1004" name="select_ln680_fu_460">
<pin_list>
<pin id="461" dir="0" index="0" bw="1" slack="1"/>
<pin id="462" dir="0" index="1" bw="6" slack="0"/>
<pin id="463" dir="0" index="2" bw="6" slack="0"/>
<pin id="464" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln680/2 "/>
</bind>
</comp>

<comp id="467" class="1004" name="add_ln680_fu_467">
<pin_list>
<pin id="468" dir="0" index="0" bw="1" slack="0"/>
<pin id="469" dir="0" index="1" bw="6" slack="1"/>
<pin id="470" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln680/2 "/>
</bind>
</comp>

<comp id="472" class="1004" name="sf_r_fu_472">
<pin_list>
<pin id="473" dir="0" index="0" bw="6" slack="0"/>
<pin id="474" dir="0" index="1" bw="3" slack="0"/>
<pin id="475" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="sf_r/2 "/>
</bind>
</comp>

<comp id="478" class="1004" name="icmp_ln703_fu_478">
<pin_list>
<pin id="479" dir="0" index="0" bw="6" slack="0"/>
<pin id="480" dir="0" index="1" bw="6" slack="0"/>
<pin id="481" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln703/2 "/>
</bind>
</comp>

<comp id="484" class="1004" name="select_ln720_fu_484">
<pin_list>
<pin id="485" dir="0" index="0" bw="1" slack="1"/>
<pin id="486" dir="0" index="1" bw="6" slack="0"/>
<pin id="487" dir="0" index="2" bw="6" slack="0"/>
<pin id="488" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln720/2 "/>
</bind>
</comp>

<comp id="491" class="1004" name="or_ln720_fu_491">
<pin_list>
<pin id="492" dir="0" index="0" bw="1" slack="0"/>
<pin id="493" dir="0" index="1" bw="1" slack="1"/>
<pin id="494" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln720/2 "/>
</bind>
</comp>

<comp id="496" class="1004" name="regime_fu_496">
<pin_list>
<pin id="497" dir="0" index="0" bw="1" slack="0"/>
<pin id="498" dir="0" index="1" bw="6" slack="0"/>
<pin id="499" dir="0" index="2" bw="6" slack="0"/>
<pin id="500" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="regime/2 "/>
</bind>
</comp>

<comp id="504" class="1004" name="regime_17_fu_504">
<pin_list>
<pin id="505" dir="0" index="0" bw="6" slack="0"/>
<pin id="506" dir="0" index="1" bw="3" slack="0"/>
<pin id="507" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="regime_17/2 "/>
</bind>
</comp>

<comp id="510" class="1004" name="icmp_ln803_fu_510">
<pin_list>
<pin id="511" dir="0" index="0" bw="6" slack="0"/>
<pin id="512" dir="0" index="1" bw="6" slack="0"/>
<pin id="513" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln803/2 "/>
</bind>
</comp>

<comp id="516" class="1004" name="icmp_ln804_fu_516">
<pin_list>
<pin id="517" dir="0" index="0" bw="6" slack="0"/>
<pin id="518" dir="0" index="1" bw="6" slack="0"/>
<pin id="519" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln804/2 "/>
</bind>
</comp>

<comp id="522" class="1004" name="select_ln804_fu_522">
<pin_list>
<pin id="523" dir="0" index="0" bw="1" slack="0"/>
<pin id="524" dir="0" index="1" bw="6" slack="0"/>
<pin id="525" dir="0" index="2" bw="6" slack="0"/>
<pin id="526" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln804/2 "/>
</bind>
</comp>

<comp id="530" class="1004" name="or_ln820_fu_530">
<pin_list>
<pin id="531" dir="0" index="0" bw="1" slack="0"/>
<pin id="532" dir="0" index="1" bw="1" slack="1"/>
<pin id="533" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln820/2 "/>
</bind>
</comp>

<comp id="535" class="1004" name="regime_19_fu_535">
<pin_list>
<pin id="536" dir="0" index="0" bw="1" slack="0"/>
<pin id="537" dir="0" index="1" bw="6" slack="0"/>
<pin id="538" dir="0" index="2" bw="6" slack="0"/>
<pin id="539" dir="1" index="3" bw="6" slack="1"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="regime_19/2 "/>
</bind>
</comp>

<comp id="543" class="1004" name="select_ln739_fu_543">
<pin_list>
<pin id="544" dir="0" index="0" bw="1" slack="2"/>
<pin id="545" dir="0" index="1" bw="30" slack="0"/>
<pin id="546" dir="0" index="2" bw="30" slack="0"/>
<pin id="547" dir="1" index="3" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln739/3 "/>
</bind>
</comp>

<comp id="551" class="1004" name="tmp_i_fu_551">
<pin_list>
<pin id="552" dir="0" index="0" bw="94" slack="0"/>
<pin id="553" dir="0" index="1" bw="30" slack="8"/>
<pin id="554" dir="0" index="2" bw="1" slack="0"/>
<pin id="555" dir="0" index="3" bw="1" slack="8"/>
<pin id="556" dir="0" index="4" bw="1" slack="0"/>
<pin id="557" dir="0" index="5" bw="6" slack="8"/>
<pin id="558" dir="0" index="6" bw="1" slack="0"/>
<pin id="559" dir="0" index="7" bw="1" slack="8"/>
<pin id="560" dir="0" index="8" bw="1" slack="0"/>
<pin id="561" dir="0" index="9" bw="1" slack="8"/>
<pin id="562" dir="1" index="10" bw="94" slack="1"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp_i/9 "/>
</bind>
</comp>

<comp id="568" class="1004" name="result_isZero_fu_568">
<pin_list>
<pin id="569" dir="0" index="0" bw="39" slack="0"/>
<pin id="570" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_isZero/10 "/>
</bind>
</comp>

<comp id="572" class="1004" name="result_regime_fu_572">
<pin_list>
<pin id="573" dir="0" index="0" bw="39" slack="0"/>
<pin id="574" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_regime/10 "/>
</bind>
</comp>

<comp id="576" class="1004" name="result_exponent_fu_576">
<pin_list>
<pin id="577" dir="0" index="0" bw="39" slack="0"/>
<pin id="578" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_exponent/10 "/>
</bind>
</comp>

<comp id="580" class="1004" name="result_mantissa_fu_580">
<pin_list>
<pin id="581" dir="0" index="0" bw="39" slack="0"/>
<pin id="582" dir="1" index="1" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_mantissa/10 "/>
</bind>
</comp>

<comp id="584" class="1004" name="tmp_18_i_fu_584">
<pin_list>
<pin id="585" dir="0" index="0" bw="94" slack="0"/>
<pin id="586" dir="0" index="1" bw="30" slack="0"/>
<pin id="587" dir="0" index="2" bw="1" slack="0"/>
<pin id="588" dir="0" index="3" bw="1" slack="0"/>
<pin id="589" dir="0" index="4" bw="1" slack="0"/>
<pin id="590" dir="0" index="5" bw="6" slack="0"/>
<pin id="591" dir="0" index="6" bw="1" slack="0"/>
<pin id="592" dir="0" index="7" bw="1" slack="0"/>
<pin id="593" dir="0" index="8" bw="1" slack="0"/>
<pin id="594" dir="0" index="9" bw="1" slack="9"/>
<pin id="595" dir="1" index="10" bw="94" slack="0"/>
</pin_list>
<bind>
<opcode="bitconcatenate(1004) " fcode="bitconcatenate"/>
<opset="tmp_18_i/10 "/>
</bind>
</comp>

<comp id="606" class="1004" name="m_angle_sign_8_fu_606">
<pin_list>
<pin id="607" dir="0" index="0" bw="94" slack="0"/>
<pin id="608" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="m_angle_sign_8/10 "/>
</bind>
</comp>

<comp id="610" class="1004" name="m_angle_isZero_fu_610">
<pin_list>
<pin id="611" dir="0" index="0" bw="1" slack="0"/>
<pin id="612" dir="0" index="1" bw="94" slack="0"/>
<pin id="613" dir="0" index="2" bw="5" slack="0"/>
<pin id="614" dir="1" index="3" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="m_angle_isZero/10 "/>
</bind>
</comp>

<comp id="618" class="1004" name="m_angle_regime_9_fu_618">
<pin_list>
<pin id="619" dir="0" index="0" bw="6" slack="0"/>
<pin id="620" dir="0" index="1" bw="94" slack="0"/>
<pin id="621" dir="0" index="2" bw="6" slack="0"/>
<pin id="622" dir="0" index="3" bw="6" slack="0"/>
<pin id="623" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="m_angle_regime_9/10 "/>
</bind>
</comp>

<comp id="628" class="1004" name="m_angle_exponent_9_fu_628">
<pin_list>
<pin id="629" dir="0" index="0" bw="1" slack="0"/>
<pin id="630" dir="0" index="1" bw="94" slack="0"/>
<pin id="631" dir="0" index="2" bw="7" slack="0"/>
<pin id="632" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="m_angle_exponent_9/10 "/>
</bind>
</comp>

<comp id="636" class="1004" name="m_angle_mantissa_fu_636">
<pin_list>
<pin id="637" dir="0" index="0" bw="30" slack="0"/>
<pin id="638" dir="0" index="1" bw="94" slack="0"/>
<pin id="639" dir="0" index="2" bw="8" slack="0"/>
<pin id="640" dir="0" index="3" bw="8" slack="0"/>
<pin id="641" dir="1" index="4" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="m_angle_mantissa/10 "/>
</bind>
</comp>

<comp id="646" class="1004" name="tmp_53_fu_646">
<pin_list>
<pin id="647" dir="0" index="0" bw="5" slack="0"/>
<pin id="648" dir="0" index="1" bw="94" slack="0"/>
<pin id="649" dir="0" index="2" bw="6" slack="0"/>
<pin id="650" dir="0" index="3" bw="6" slack="0"/>
<pin id="651" dir="1" index="4" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="tmp_53/10 "/>
</bind>
</comp>

<comp id="656" class="1004" name="icmp_ln23_4_fu_656">
<pin_list>
<pin id="657" dir="0" index="0" bw="5" slack="0"/>
<pin id="658" dir="0" index="1" bw="5" slack="0"/>
<pin id="659" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23_4/10 "/>
</bind>
</comp>

<comp id="662" class="1004" name="icmp_ln24_3_fu_662">
<pin_list>
<pin id="663" dir="0" index="0" bw="6" slack="0"/>
<pin id="664" dir="0" index="1" bw="6" slack="0"/>
<pin id="665" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln24_3/10 "/>
</bind>
</comp>

<comp id="668" class="1004" name="and_ln24_fu_668">
<pin_list>
<pin id="669" dir="0" index="0" bw="1" slack="0"/>
<pin id="670" dir="0" index="1" bw="1" slack="0"/>
<pin id="671" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln24/10 "/>
</bind>
</comp>

<comp id="674" class="1004" name="xor_ln25_3_fu_674">
<pin_list>
<pin id="675" dir="0" index="0" bw="1" slack="0"/>
<pin id="676" dir="0" index="1" bw="1" slack="0"/>
<pin id="677" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln25_3/10 "/>
</bind>
</comp>

<comp id="680" class="1004" name="icmp_ln25_5_fu_680">
<pin_list>
<pin id="681" dir="0" index="0" bw="30" slack="0"/>
<pin id="682" dir="0" index="1" bw="30" slack="0"/>
<pin id="683" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_5/10 "/>
</bind>
</comp>

<comp id="686" class="1004" name="and_ln25_11_fu_686">
<pin_list>
<pin id="687" dir="0" index="0" bw="1" slack="0"/>
<pin id="688" dir="0" index="1" bw="1" slack="0"/>
<pin id="689" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_11/10 "/>
</bind>
</comp>

<comp id="692" class="1004" name="and_ln25_12_fu_692">
<pin_list>
<pin id="693" dir="0" index="0" bw="1" slack="0"/>
<pin id="694" dir="0" index="1" bw="1" slack="0"/>
<pin id="695" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_12/10 "/>
</bind>
</comp>

<comp id="698" class="1004" name="or_ln24_fu_698">
<pin_list>
<pin id="699" dir="0" index="0" bw="1" slack="0"/>
<pin id="700" dir="0" index="1" bw="1" slack="0"/>
<pin id="701" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln24/10 "/>
</bind>
</comp>

<comp id="704" class="1004" name="absXGreaterEqual_fu_704">
<pin_list>
<pin id="705" dir="0" index="0" bw="1" slack="0"/>
<pin id="706" dir="0" index="1" bw="1" slack="0"/>
<pin id="707" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual/10 "/>
</bind>
</comp>

<comp id="710" class="1004" name="xor_ln27_fu_710">
<pin_list>
<pin id="711" dir="0" index="0" bw="1" slack="0"/>
<pin id="712" dir="0" index="1" bw="1" slack="0"/>
<pin id="713" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27/10 "/>
</bind>
</comp>

<comp id="716" class="1004" name="not_m_angle_sign_fu_716">
<pin_list>
<pin id="717" dir="0" index="0" bw="1" slack="0"/>
<pin id="718" dir="0" index="1" bw="1" slack="0"/>
<pin id="719" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="not_m_angle_sign/10 "/>
</bind>
</comp>

<comp id="722" class="1004" name="retval_1_i_fu_722">
<pin_list>
<pin id="723" dir="0" index="0" bw="1" slack="0"/>
<pin id="724" dir="0" index="1" bw="1" slack="0"/>
<pin id="725" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i/10 "/>
</bind>
</comp>

<comp id="728" class="1004" name="icmp_ln23_5_fu_728">
<pin_list>
<pin id="729" dir="0" index="0" bw="6" slack="0"/>
<pin id="730" dir="0" index="1" bw="6" slack="0"/>
<pin id="731" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23_5/10 "/>
</bind>
</comp>

<comp id="734" class="1004" name="icmp_ln25_6_fu_734">
<pin_list>
<pin id="735" dir="0" index="0" bw="30" slack="0"/>
<pin id="736" dir="0" index="1" bw="30" slack="0"/>
<pin id="737" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_6/10 "/>
</bind>
</comp>

<comp id="740" class="1004" name="and_ln25_13_fu_740">
<pin_list>
<pin id="741" dir="0" index="0" bw="1" slack="0"/>
<pin id="742" dir="0" index="1" bw="1" slack="0"/>
<pin id="743" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_13/10 "/>
</bind>
</comp>

<comp id="746" class="1004" name="and_ln25_14_fu_746">
<pin_list>
<pin id="747" dir="0" index="0" bw="1" slack="0"/>
<pin id="748" dir="0" index="1" bw="1" slack="0"/>
<pin id="749" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_14/10 "/>
</bind>
</comp>

<comp id="752" class="1004" name="absXGreaterEqual_5_fu_752">
<pin_list>
<pin id="753" dir="0" index="0" bw="1" slack="0"/>
<pin id="754" dir="0" index="1" bw="1" slack="0"/>
<pin id="755" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual_5/10 "/>
</bind>
</comp>

<comp id="758" class="1004" name="xor_ln27_4_fu_758">
<pin_list>
<pin id="759" dir="0" index="0" bw="1" slack="0"/>
<pin id="760" dir="0" index="1" bw="1" slack="0"/>
<pin id="761" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27_4/10 "/>
</bind>
</comp>

<comp id="764" class="1004" name="retval_1_i9_fu_764">
<pin_list>
<pin id="765" dir="0" index="0" bw="1" slack="0"/>
<pin id="766" dir="0" index="1" bw="1" slack="0"/>
<pin id="767" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i9/10 "/>
</bind>
</comp>

<comp id="770" class="1004" name="icmp_ln23_6_fu_770">
<pin_list>
<pin id="771" dir="0" index="0" bw="6" slack="0"/>
<pin id="772" dir="0" index="1" bw="6" slack="0"/>
<pin id="773" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23_6/18 "/>
</bind>
</comp>

<comp id="776" class="1004" name="icmp_ln24_4_fu_776">
<pin_list>
<pin id="777" dir="0" index="0" bw="6" slack="0"/>
<pin id="778" dir="0" index="1" bw="6" slack="0"/>
<pin id="779" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln24_4/18 "/>
</bind>
</comp>

<comp id="782" class="1004" name="and_ln24_2_fu_782">
<pin_list>
<pin id="783" dir="0" index="0" bw="1" slack="0"/>
<pin id="784" dir="0" index="1" bw="1" slack="0"/>
<pin id="785" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln24_2/18 "/>
</bind>
</comp>

<comp id="788" class="1004" name="xor_ln25_4_fu_788">
<pin_list>
<pin id="789" dir="0" index="0" bw="1" slack="0"/>
<pin id="790" dir="0" index="1" bw="1" slack="0"/>
<pin id="791" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln25_4/18 "/>
</bind>
</comp>

<comp id="794" class="1004" name="icmp_ln25_7_fu_794">
<pin_list>
<pin id="795" dir="0" index="0" bw="30" slack="0"/>
<pin id="796" dir="0" index="1" bw="30" slack="0"/>
<pin id="797" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_7/18 "/>
</bind>
</comp>

<comp id="800" class="1004" name="and_ln25_15_fu_800">
<pin_list>
<pin id="801" dir="0" index="0" bw="1" slack="0"/>
<pin id="802" dir="0" index="1" bw="1" slack="0"/>
<pin id="803" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_15/18 "/>
</bind>
</comp>

<comp id="806" class="1004" name="and_ln25_16_fu_806">
<pin_list>
<pin id="807" dir="0" index="0" bw="1" slack="0"/>
<pin id="808" dir="0" index="1" bw="1" slack="0"/>
<pin id="809" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_16/18 "/>
</bind>
</comp>

<comp id="812" class="1004" name="or_ln24_2_fu_812">
<pin_list>
<pin id="813" dir="0" index="0" bw="1" slack="0"/>
<pin id="814" dir="0" index="1" bw="1" slack="0"/>
<pin id="815" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln24_2/18 "/>
</bind>
</comp>

<comp id="818" class="1004" name="absXGreaterEqual_6_fu_818">
<pin_list>
<pin id="819" dir="0" index="0" bw="1" slack="0"/>
<pin id="820" dir="0" index="1" bw="1" slack="0"/>
<pin id="821" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual_6/18 "/>
</bind>
</comp>

<comp id="824" class="1004" name="xor_ln27_5_fu_824">
<pin_list>
<pin id="825" dir="0" index="0" bw="1" slack="0"/>
<pin id="826" dir="0" index="1" bw="1" slack="0"/>
<pin id="827" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27_5/18 "/>
</bind>
</comp>

<comp id="830" class="1004" name="not_y_sign_fu_830">
<pin_list>
<pin id="831" dir="0" index="0" bw="1" slack="0"/>
<pin id="832" dir="0" index="1" bw="1" slack="0"/>
<pin id="833" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="not_y_sign/18 "/>
</bind>
</comp>

<comp id="836" class="1004" name="retval_1_i20_fu_836">
<pin_list>
<pin id="837" dir="0" index="0" bw="1" slack="0"/>
<pin id="838" dir="0" index="1" bw="1" slack="0"/>
<pin id="839" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i20/18 "/>
</bind>
</comp>

<comp id="842" class="1004" name="tmp_54_fu_842">
<pin_list>
<pin id="843" dir="0" index="0" bw="1" slack="0"/>
<pin id="844" dir="0" index="1" bw="6" slack="0"/>
<pin id="845" dir="0" index="2" bw="4" slack="0"/>
<pin id="846" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_54/18 "/>
</bind>
</comp>

<comp id="850" class="1004" name="icmp_ln25_8_fu_850">
<pin_list>
<pin id="851" dir="0" index="0" bw="30" slack="0"/>
<pin id="852" dir="0" index="1" bw="30" slack="0"/>
<pin id="853" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln25_8/18 "/>
</bind>
</comp>

<comp id="856" class="1004" name="and_ln25_17_fu_856">
<pin_list>
<pin id="857" dir="0" index="0" bw="1" slack="0"/>
<pin id="858" dir="0" index="1" bw="1" slack="0"/>
<pin id="859" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_17/18 "/>
</bind>
</comp>

<comp id="862" class="1004" name="and_ln25_18_fu_862">
<pin_list>
<pin id="863" dir="0" index="0" bw="1" slack="0"/>
<pin id="864" dir="0" index="1" bw="1" slack="0"/>
<pin id="865" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln25_18/18 "/>
</bind>
</comp>

<comp id="868" class="1004" name="absXGreaterEqual_7_fu_868">
<pin_list>
<pin id="869" dir="0" index="0" bw="1" slack="0"/>
<pin id="870" dir="0" index="1" bw="1" slack="0"/>
<pin id="871" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="absXGreaterEqual_7/18 "/>
</bind>
</comp>

<comp id="874" class="1004" name="xor_ln27_6_fu_874">
<pin_list>
<pin id="875" dir="0" index="0" bw="1" slack="0"/>
<pin id="876" dir="0" index="1" bw="1" slack="0"/>
<pin id="877" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln27_6/18 "/>
</bind>
</comp>

<comp id="880" class="1004" name="retval_1_i31_fu_880">
<pin_list>
<pin id="881" dir="0" index="0" bw="1" slack="0"/>
<pin id="882" dir="0" index="1" bw="1" slack="0"/>
<pin id="883" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="retval_1_i31/18 "/>
</bind>
</comp>

<comp id="886" class="1004" name="newret_fu_886">
<pin_list>
<pin id="887" dir="0" index="0" bw="39" slack="0"/>
<pin id="888" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="newret/26 "/>
</bind>
</comp>

<comp id="890" class="1004" name="m_angle_sign_7_fu_890">
<pin_list>
<pin id="891" dir="0" index="0" bw="1" slack="0"/>
<pin id="892" dir="0" index="1" bw="1" slack="0"/>
<pin id="893" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="m_angle_sign_7/26 "/>
</bind>
</comp>

<comp id="897" class="1004" name="result_sign_fu_897">
<pin_list>
<pin id="898" dir="0" index="0" bw="39" slack="0"/>
<pin id="899" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="result_sign/26 "/>
</bind>
</comp>

<comp id="902" class="1004" name="mrv_fu_902">
<pin_list>
<pin id="903" dir="0" index="0" bw="39" slack="0"/>
<pin id="904" dir="0" index="1" bw="1" slack="0"/>
<pin id="905" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv/26 "/>
</bind>
</comp>

<comp id="908" class="1004" name="mrv_1_fu_908">
<pin_list>
<pin id="909" dir="0" index="0" bw="39" slack="0"/>
<pin id="910" dir="0" index="1" bw="1" slack="0"/>
<pin id="911" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_1/26 "/>
</bind>
</comp>

<comp id="914" class="1004" name="mrv_2_fu_914">
<pin_list>
<pin id="915" dir="0" index="0" bw="39" slack="0"/>
<pin id="916" dir="0" index="1" bw="6" slack="0"/>
<pin id="917" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_2/26 "/>
</bind>
</comp>

<comp id="920" class="1004" name="mrv_3_fu_920">
<pin_list>
<pin id="921" dir="0" index="0" bw="39" slack="0"/>
<pin id="922" dir="0" index="1" bw="1" slack="0"/>
<pin id="923" dir="1" index="2" bw="39" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_3/26 "/>
</bind>
</comp>

<comp id="926" class="1004" name="mrv_4_fu_926">
<pin_list>
<pin id="927" dir="0" index="0" bw="39" slack="0"/>
<pin id="928" dir="0" index="1" bw="30" slack="0"/>
<pin id="929" dir="1" index="2" bw="39" slack="2147483647"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_4/26 "/>
</bind>
</comp>

<comp id="932" class="1005" name="x_mantissa_read_reg_932">
<pin_list>
<pin id="933" dir="0" index="0" bw="30" slack="2"/>
<pin id="934" dir="1" index="1" bw="30" slack="2"/>
</pin_list>
<bind>
<opset="x_mantissa_read "/>
</bind>
</comp>

<comp id="938" class="1005" name="x_exponent_read_reg_938">
<pin_list>
<pin id="939" dir="0" index="0" bw="1" slack="1"/>
<pin id="940" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="x_exponent_read "/>
</bind>
</comp>

<comp id="945" class="1005" name="x_regime_read_reg_945">
<pin_list>
<pin id="946" dir="0" index="0" bw="6" slack="1"/>
<pin id="947" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="x_regime_read "/>
</bind>
</comp>

<comp id="952" class="1005" name="x_isZero_read_reg_952">
<pin_list>
<pin id="953" dir="0" index="0" bw="1" slack="1"/>
<pin id="954" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="x_isZero_read "/>
</bind>
</comp>

<comp id="963" class="1005" name="x_sign_read_reg_963">
<pin_list>
<pin id="964" dir="0" index="0" bw="1" slack="8"/>
<pin id="965" dir="1" index="1" bw="1" slack="8"/>
</pin_list>
<bind>
<opset="x_sign_read "/>
</bind>
</comp>

<comp id="969" class="1005" name="icmp_ln23_reg_969">
<pin_list>
<pin id="970" dir="0" index="0" bw="1" slack="1"/>
<pin id="971" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="icmp_ln23 "/>
</bind>
</comp>

<comp id="973" class="1005" name="absXGreaterEqual_9_reg_973">
<pin_list>
<pin id="974" dir="0" index="0" bw="1" slack="1"/>
<pin id="975" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="absXGreaterEqual_9 "/>
</bind>
</comp>

<comp id="977" class="1005" name="tmp_50_reg_977">
<pin_list>
<pin id="978" dir="0" index="0" bw="1" slack="1"/>
<pin id="979" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="tmp_50 "/>
</bind>
</comp>

<comp id="982" class="1005" name="regime_19_reg_982">
<pin_list>
<pin id="983" dir="0" index="0" bw="6" slack="1"/>
<pin id="984" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="regime_19 "/>
</bind>
</comp>

<comp id="987" class="1005" name="tmp_i_reg_987">
<pin_list>
<pin id="988" dir="0" index="0" bw="94" slack="1"/>
<pin id="989" dir="1" index="1" bw="94" slack="1"/>
</pin_list>
<bind>
<opset="tmp_i "/>
</bind>
</comp>

<comp id="992" class="1005" name="m_angle_sign_8_reg_992">
<pin_list>
<pin id="993" dir="0" index="0" bw="1" slack="1"/>
<pin id="994" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_sign_8 "/>
</bind>
</comp>

<comp id="998" class="1005" name="m_angle_isZero_reg_998">
<pin_list>
<pin id="999" dir="0" index="0" bw="1" slack="1"/>
<pin id="1000" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_isZero "/>
</bind>
</comp>

<comp id="1004" class="1005" name="m_angle_regime_9_reg_1004">
<pin_list>
<pin id="1005" dir="0" index="0" bw="6" slack="1"/>
<pin id="1006" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_regime_9 "/>
</bind>
</comp>

<comp id="1010" class="1005" name="m_angle_exponent_9_reg_1010">
<pin_list>
<pin id="1011" dir="0" index="0" bw="1" slack="1"/>
<pin id="1012" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_exponent_9 "/>
</bind>
</comp>

<comp id="1016" class="1005" name="m_angle_mantissa_reg_1016">
<pin_list>
<pin id="1017" dir="0" index="0" bw="30" slack="1"/>
<pin id="1018" dir="1" index="1" bw="30" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_mantissa "/>
</bind>
</comp>

<comp id="1022" class="1005" name="retval_1_i_reg_1022">
<pin_list>
<pin id="1023" dir="0" index="0" bw="1" slack="1"/>
<pin id="1024" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i "/>
</bind>
</comp>

<comp id="1026" class="1005" name="retval_1_i9_reg_1026">
<pin_list>
<pin id="1027" dir="0" index="0" bw="1" slack="1"/>
<pin id="1028" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i9 "/>
</bind>
</comp>

<comp id="1030" class="1005" name="m_angle_isZero_6_reg_1030">
<pin_list>
<pin id="1031" dir="0" index="0" bw="1" slack="1"/>
<pin id="1032" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_isZero_6 "/>
</bind>
</comp>

<comp id="1035" class="1005" name="m_angle_isZero_5_reg_1035">
<pin_list>
<pin id="1036" dir="0" index="0" bw="1" slack="1"/>
<pin id="1037" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="m_angle_isZero_5 "/>
</bind>
</comp>

<comp id="1040" class="1005" name="retval_1_i20_reg_1040">
<pin_list>
<pin id="1041" dir="0" index="0" bw="1" slack="1"/>
<pin id="1042" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i20 "/>
</bind>
</comp>

<comp id="1044" class="1005" name="retval_1_i31_reg_1044">
<pin_list>
<pin id="1045" dir="0" index="0" bw="1" slack="1"/>
<pin id="1046" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="retval_1_i31 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="102"><net_src comp="10" pin="0"/><net_sink comp="98" pin=0"/></net>

<net id="103"><net_src comp="8" pin="0"/><net_sink comp="98" pin=1"/></net>

<net id="108"><net_src comp="12" pin="0"/><net_sink comp="104" pin=0"/></net>

<net id="109"><net_src comp="6" pin="0"/><net_sink comp="104" pin=1"/></net>

<net id="114"><net_src comp="14" pin="0"/><net_sink comp="110" pin=0"/></net>

<net id="115"><net_src comp="4" pin="0"/><net_sink comp="110" pin=1"/></net>

<net id="120"><net_src comp="12" pin="0"/><net_sink comp="116" pin=0"/></net>

<net id="121"><net_src comp="2" pin="0"/><net_sink comp="116" pin=1"/></net>

<net id="126"><net_src comp="12" pin="0"/><net_sink comp="122" pin=0"/></net>

<net id="127"><net_src comp="0" pin="0"/><net_sink comp="122" pin=1"/></net>

<net id="148"><net_src comp="140" pin="6"/><net_sink comp="137" pin=0"/></net>

<net id="160"><net_src comp="152" pin="6"/><net_sink comp="149" pin=0"/></net>

<net id="172"><net_src comp="164" pin="6"/><net_sink comp="161" pin=0"/></net>

<net id="184"><net_src comp="176" pin="6"/><net_sink comp="173" pin=0"/></net>

<net id="196"><net_src comp="188" pin="6"/><net_sink comp="185" pin=0"/></net>

<net id="208"><net_src comp="137" pin="1"/><net_sink comp="200" pin=4"/></net>

<net id="220"><net_src comp="185" pin="1"/><net_sink comp="212" pin=4"/></net>

<net id="232"><net_src comp="149" pin="1"/><net_sink comp="224" pin=4"/></net>

<net id="244"><net_src comp="161" pin="1"/><net_sink comp="236" pin=4"/></net>

<net id="256"><net_src comp="173" pin="1"/><net_sink comp="248" pin=4"/></net>

<net id="270"><net_src comp="54" pin="0"/><net_sink comp="257" pin=0"/></net>

<net id="271"><net_src comp="56" pin="0"/><net_sink comp="257" pin=1"/></net>

<net id="272"><net_src comp="26" pin="0"/><net_sink comp="257" pin=6"/></net>

<net id="273"><net_src comp="56" pin="0"/><net_sink comp="257" pin=9"/></net>

<net id="287"><net_src comp="54" pin="0"/><net_sink comp="274" pin=0"/></net>

<net id="288"><net_src comp="26" pin="0"/><net_sink comp="274" pin=1"/></net>

<net id="289"><net_src comp="56" pin="0"/><net_sink comp="274" pin=6"/></net>

<net id="290"><net_src comp="56" pin="0"/><net_sink comp="274" pin=7"/></net>

<net id="291"><net_src comp="24" pin="0"/><net_sink comp="274" pin=8"/></net>

<net id="292"><net_src comp="56" pin="0"/><net_sink comp="274" pin=9"/></net>

<net id="293"><net_src comp="28" pin="0"/><net_sink comp="274" pin=10"/></net>

<net id="294"><net_src comp="26" pin="0"/><net_sink comp="274" pin=6"/></net>

<net id="308"><net_src comp="54" pin="0"/><net_sink comp="295" pin=0"/></net>

<net id="309"><net_src comp="26" pin="0"/><net_sink comp="295" pin=1"/></net>

<net id="310"><net_src comp="188" pin="6"/><net_sink comp="295" pin=2"/></net>

<net id="311"><net_src comp="149" pin="1"/><net_sink comp="295" pin=3"/></net>

<net id="312"><net_src comp="161" pin="1"/><net_sink comp="295" pin=4"/></net>

<net id="313"><net_src comp="173" pin="1"/><net_sink comp="295" pin=5"/></net>

<net id="314"><net_src comp="56" pin="0"/><net_sink comp="295" pin=6"/></net>

<net id="315"><net_src comp="56" pin="0"/><net_sink comp="295" pin=7"/></net>

<net id="316"><net_src comp="92" pin="0"/><net_sink comp="295" pin=8"/></net>

<net id="317"><net_src comp="56" pin="0"/><net_sink comp="295" pin=9"/></net>

<net id="318"><net_src comp="28" pin="0"/><net_sink comp="295" pin=10"/></net>

<net id="319"><net_src comp="56" pin="0"/><net_sink comp="295" pin=1"/></net>

<net id="320"><net_src comp="56" pin="0"/><net_sink comp="295" pin=2"/></net>

<net id="321"><net_src comp="92" pin="0"/><net_sink comp="295" pin=3"/></net>

<net id="322"><net_src comp="56" pin="0"/><net_sink comp="295" pin=4"/></net>

<net id="323"><net_src comp="28" pin="0"/><net_sink comp="295" pin=5"/></net>

<net id="324"><net_src comp="26" pin="0"/><net_sink comp="295" pin=6"/></net>

<net id="325"><net_src comp="188" pin="6"/><net_sink comp="295" pin=7"/></net>

<net id="326"><net_src comp="149" pin="1"/><net_sink comp="295" pin=8"/></net>

<net id="327"><net_src comp="161" pin="1"/><net_sink comp="295" pin=9"/></net>

<net id="328"><net_src comp="173" pin="1"/><net_sink comp="295" pin=10"/></net>

<net id="333"><net_src comp="34" pin="0"/><net_sink comp="329" pin=1"/></net>

<net id="337"><net_src comp="274" pin="11"/><net_sink comp="334" pin=0"/></net>

<net id="338"><net_src comp="334" pin="1"/><net_sink comp="140" pin=2"/></net>

<net id="339"><net_src comp="334" pin="1"/><net_sink comp="140" pin=0"/></net>

<net id="343"><net_src comp="274" pin="11"/><net_sink comp="340" pin=0"/></net>

<net id="347"><net_src comp="274" pin="11"/><net_sink comp="344" pin=0"/></net>

<net id="348"><net_src comp="344" pin="1"/><net_sink comp="152" pin=2"/></net>

<net id="349"><net_src comp="344" pin="1"/><net_sink comp="152" pin=0"/></net>

<net id="353"><net_src comp="274" pin="11"/><net_sink comp="350" pin=0"/></net>

<net id="354"><net_src comp="350" pin="1"/><net_sink comp="164" pin=2"/></net>

<net id="355"><net_src comp="350" pin="1"/><net_sink comp="164" pin=0"/></net>

<net id="359"><net_src comp="274" pin="11"/><net_sink comp="356" pin=0"/></net>

<net id="360"><net_src comp="356" pin="1"/><net_sink comp="176" pin=2"/></net>

<net id="361"><net_src comp="356" pin="1"/><net_sink comp="176" pin=0"/></net>

<net id="365"><net_src comp="295" pin="11"/><net_sink comp="362" pin=0"/></net>

<net id="366"><net_src comp="362" pin="1"/><net_sink comp="212" pin=2"/></net>

<net id="367"><net_src comp="362" pin="1"/><net_sink comp="212" pin=0"/></net>

<net id="371"><net_src comp="295" pin="11"/><net_sink comp="368" pin=0"/></net>

<net id="372"><net_src comp="368" pin="1"/><net_sink comp="224" pin=2"/></net>

<net id="373"><net_src comp="368" pin="1"/><net_sink comp="224" pin=0"/></net>

<net id="377"><net_src comp="295" pin="11"/><net_sink comp="374" pin=0"/></net>

<net id="378"><net_src comp="374" pin="1"/><net_sink comp="236" pin=2"/></net>

<net id="379"><net_src comp="374" pin="1"/><net_sink comp="236" pin=0"/></net>

<net id="383"><net_src comp="295" pin="11"/><net_sink comp="380" pin=0"/></net>

<net id="384"><net_src comp="380" pin="1"/><net_sink comp="248" pin=2"/></net>

<net id="385"><net_src comp="380" pin="1"/><net_sink comp="248" pin=0"/></net>

<net id="392"><net_src comp="16" pin="0"/><net_sink comp="386" pin=0"/></net>

<net id="393"><net_src comp="110" pin="2"/><net_sink comp="386" pin=1"/></net>

<net id="394"><net_src comp="18" pin="0"/><net_sink comp="386" pin=2"/></net>

<net id="395"><net_src comp="20" pin="0"/><net_sink comp="386" pin=3"/></net>

<net id="400"><net_src comp="386" pin="4"/><net_sink comp="396" pin=0"/></net>

<net id="401"><net_src comp="22" pin="0"/><net_sink comp="396" pin=1"/></net>

<net id="406"><net_src comp="110" pin="2"/><net_sink comp="402" pin=0"/></net>

<net id="407"><net_src comp="24" pin="0"/><net_sink comp="402" pin=1"/></net>

<net id="412"><net_src comp="104" pin="2"/><net_sink comp="408" pin=0"/></net>

<net id="413"><net_src comp="26" pin="0"/><net_sink comp="408" pin=1"/></net>

<net id="418"><net_src comp="98" pin="2"/><net_sink comp="414" pin=0"/></net>

<net id="419"><net_src comp="28" pin="0"/><net_sink comp="414" pin=1"/></net>

<net id="424"><net_src comp="414" pin="2"/><net_sink comp="420" pin=0"/></net>

<net id="425"><net_src comp="408" pin="2"/><net_sink comp="420" pin=1"/></net>

<net id="430"><net_src comp="420" pin="2"/><net_sink comp="426" pin=0"/></net>

<net id="431"><net_src comp="402" pin="2"/><net_sink comp="426" pin=1"/></net>

<net id="437"><net_src comp="30" pin="0"/><net_sink comp="432" pin=0"/></net>

<net id="438"><net_src comp="98" pin="2"/><net_sink comp="432" pin=1"/></net>

<net id="439"><net_src comp="32" pin="0"/><net_sink comp="432" pin=2"/></net>

<net id="443"><net_src comp="432" pin="3"/><net_sink comp="440" pin=0"/></net>

<net id="444"><net_src comp="440" pin="1"/><net_sink comp="329" pin=0"/></net>

<net id="448"><net_src comp="329" pin="2"/><net_sink comp="445" pin=0"/></net>

<net id="454"><net_src comp="36" pin="0"/><net_sink comp="449" pin=0"/></net>

<net id="455"><net_src comp="445" pin="1"/><net_sink comp="449" pin=1"/></net>

<net id="456"><net_src comp="38" pin="0"/><net_sink comp="449" pin=2"/></net>

<net id="465"><net_src comp="40" pin="0"/><net_sink comp="460" pin=1"/></net>

<net id="466"><net_src comp="42" pin="0"/><net_sink comp="460" pin=2"/></net>

<net id="471"><net_src comp="457" pin="1"/><net_sink comp="467" pin=0"/></net>

<net id="476"><net_src comp="467" pin="2"/><net_sink comp="472" pin=0"/></net>

<net id="477"><net_src comp="460" pin="3"/><net_sink comp="472" pin=1"/></net>

<net id="482"><net_src comp="472" pin="2"/><net_sink comp="478" pin=0"/></net>

<net id="483"><net_src comp="44" pin="0"/><net_sink comp="478" pin=1"/></net>

<net id="489"><net_src comp="46" pin="0"/><net_sink comp="484" pin=1"/></net>

<net id="490"><net_src comp="48" pin="0"/><net_sink comp="484" pin=2"/></net>

<net id="495"><net_src comp="478" pin="2"/><net_sink comp="491" pin=0"/></net>

<net id="501"><net_src comp="491" pin="2"/><net_sink comp="496" pin=0"/></net>

<net id="502"><net_src comp="484" pin="3"/><net_sink comp="496" pin=1"/></net>

<net id="503"><net_src comp="472" pin="2"/><net_sink comp="496" pin=2"/></net>

<net id="508"><net_src comp="496" pin="3"/><net_sink comp="504" pin=0"/></net>

<net id="509"><net_src comp="24" pin="0"/><net_sink comp="504" pin=1"/></net>

<net id="514"><net_src comp="504" pin="2"/><net_sink comp="510" pin=0"/></net>

<net id="515"><net_src comp="44" pin="0"/><net_sink comp="510" pin=1"/></net>

<net id="520"><net_src comp="504" pin="2"/><net_sink comp="516" pin=0"/></net>

<net id="521"><net_src comp="50" pin="0"/><net_sink comp="516" pin=1"/></net>

<net id="527"><net_src comp="516" pin="2"/><net_sink comp="522" pin=0"/></net>

<net id="528"><net_src comp="504" pin="2"/><net_sink comp="522" pin=1"/></net>

<net id="529"><net_src comp="50" pin="0"/><net_sink comp="522" pin=2"/></net>

<net id="534"><net_src comp="510" pin="2"/><net_sink comp="530" pin=0"/></net>

<net id="540"><net_src comp="530" pin="2"/><net_sink comp="535" pin=0"/></net>

<net id="541"><net_src comp="484" pin="3"/><net_sink comp="535" pin=1"/></net>

<net id="542"><net_src comp="522" pin="3"/><net_sink comp="535" pin=2"/></net>

<net id="548"><net_src comp="52" pin="0"/><net_sink comp="543" pin=1"/></net>

<net id="549"><net_src comp="28" pin="0"/><net_sink comp="543" pin=2"/></net>

<net id="550"><net_src comp="543" pin="3"/><net_sink comp="257" pin=10"/></net>

<net id="563"><net_src comp="58" pin="0"/><net_sink comp="551" pin=0"/></net>

<net id="564"><net_src comp="60" pin="0"/><net_sink comp="551" pin=2"/></net>

<net id="565"><net_src comp="62" pin="0"/><net_sink comp="551" pin=4"/></net>

<net id="566"><net_src comp="64" pin="0"/><net_sink comp="551" pin=6"/></net>

<net id="567"><net_src comp="66" pin="0"/><net_sink comp="551" pin=8"/></net>

<net id="571"><net_src comp="257" pin="11"/><net_sink comp="568" pin=0"/></net>

<net id="575"><net_src comp="257" pin="11"/><net_sink comp="572" pin=0"/></net>

<net id="579"><net_src comp="257" pin="11"/><net_sink comp="576" pin=0"/></net>

<net id="583"><net_src comp="257" pin="11"/><net_sink comp="580" pin=0"/></net>

<net id="596"><net_src comp="58" pin="0"/><net_sink comp="584" pin=0"/></net>

<net id="597"><net_src comp="580" pin="1"/><net_sink comp="584" pin=1"/></net>

<net id="598"><net_src comp="60" pin="0"/><net_sink comp="584" pin=2"/></net>

<net id="599"><net_src comp="576" pin="1"/><net_sink comp="584" pin=3"/></net>

<net id="600"><net_src comp="62" pin="0"/><net_sink comp="584" pin=4"/></net>

<net id="601"><net_src comp="572" pin="1"/><net_sink comp="584" pin=5"/></net>

<net id="602"><net_src comp="64" pin="0"/><net_sink comp="584" pin=6"/></net>

<net id="603"><net_src comp="568" pin="1"/><net_sink comp="584" pin=7"/></net>

<net id="604"><net_src comp="66" pin="0"/><net_sink comp="584" pin=8"/></net>

<net id="605"><net_src comp="584" pin="10"/><net_sink comp="131" pin=0"/></net>

<net id="609"><net_src comp="131" pin="4"/><net_sink comp="606" pin=0"/></net>

<net id="615"><net_src comp="68" pin="0"/><net_sink comp="610" pin=0"/></net>

<net id="616"><net_src comp="131" pin="4"/><net_sink comp="610" pin=1"/></net>

<net id="617"><net_src comp="70" pin="0"/><net_sink comp="610" pin=2"/></net>

<net id="624"><net_src comp="72" pin="0"/><net_sink comp="618" pin=0"/></net>

<net id="625"><net_src comp="131" pin="4"/><net_sink comp="618" pin=1"/></net>

<net id="626"><net_src comp="74" pin="0"/><net_sink comp="618" pin=2"/></net>

<net id="627"><net_src comp="76" pin="0"/><net_sink comp="618" pin=3"/></net>

<net id="633"><net_src comp="68" pin="0"/><net_sink comp="628" pin=0"/></net>

<net id="634"><net_src comp="131" pin="4"/><net_sink comp="628" pin=1"/></net>

<net id="635"><net_src comp="78" pin="0"/><net_sink comp="628" pin=2"/></net>

<net id="642"><net_src comp="80" pin="0"/><net_sink comp="636" pin=0"/></net>

<net id="643"><net_src comp="131" pin="4"/><net_sink comp="636" pin=1"/></net>

<net id="644"><net_src comp="82" pin="0"/><net_sink comp="636" pin=2"/></net>

<net id="645"><net_src comp="84" pin="0"/><net_sink comp="636" pin=3"/></net>

<net id="652"><net_src comp="86" pin="0"/><net_sink comp="646" pin=0"/></net>

<net id="653"><net_src comp="131" pin="4"/><net_sink comp="646" pin=1"/></net>

<net id="654"><net_src comp="88" pin="0"/><net_sink comp="646" pin=2"/></net>

<net id="655"><net_src comp="76" pin="0"/><net_sink comp="646" pin=3"/></net>

<net id="660"><net_src comp="646" pin="4"/><net_sink comp="656" pin=0"/></net>

<net id="661"><net_src comp="90" pin="0"/><net_sink comp="656" pin=1"/></net>

<net id="666"><net_src comp="618" pin="4"/><net_sink comp="662" pin=0"/></net>

<net id="667"><net_src comp="92" pin="0"/><net_sink comp="662" pin=1"/></net>

<net id="672"><net_src comp="662" pin="2"/><net_sink comp="668" pin=0"/></net>

<net id="673"><net_src comp="628" pin="3"/><net_sink comp="668" pin=1"/></net>

<net id="678"><net_src comp="628" pin="3"/><net_sink comp="674" pin=0"/></net>

<net id="679"><net_src comp="26" pin="0"/><net_sink comp="674" pin=1"/></net>

<net id="684"><net_src comp="636" pin="4"/><net_sink comp="680" pin=0"/></net>

<net id="685"><net_src comp="28" pin="0"/><net_sink comp="680" pin=1"/></net>

<net id="690"><net_src comp="680" pin="2"/><net_sink comp="686" pin=0"/></net>

<net id="691"><net_src comp="674" pin="2"/><net_sink comp="686" pin=1"/></net>

<net id="696"><net_src comp="686" pin="2"/><net_sink comp="692" pin=0"/></net>

<net id="697"><net_src comp="662" pin="2"/><net_sink comp="692" pin=1"/></net>

<net id="702"><net_src comp="656" pin="2"/><net_sink comp="698" pin=0"/></net>

<net id="703"><net_src comp="668" pin="2"/><net_sink comp="698" pin=1"/></net>

<net id="708"><net_src comp="698" pin="2"/><net_sink comp="704" pin=0"/></net>

<net id="709"><net_src comp="692" pin="2"/><net_sink comp="704" pin=1"/></net>

<net id="714"><net_src comp="704" pin="2"/><net_sink comp="710" pin=0"/></net>

<net id="715"><net_src comp="606" pin="1"/><net_sink comp="710" pin=1"/></net>

<net id="720"><net_src comp="606" pin="1"/><net_sink comp="716" pin=0"/></net>

<net id="721"><net_src comp="26" pin="0"/><net_sink comp="716" pin=1"/></net>

<net id="726"><net_src comp="710" pin="2"/><net_sink comp="722" pin=0"/></net>

<net id="727"><net_src comp="716" pin="2"/><net_sink comp="722" pin=1"/></net>

<net id="732"><net_src comp="618" pin="4"/><net_sink comp="728" pin=0"/></net>

<net id="733"><net_src comp="92" pin="0"/><net_sink comp="728" pin=1"/></net>

<net id="738"><net_src comp="636" pin="4"/><net_sink comp="734" pin=0"/></net>

<net id="739"><net_src comp="28" pin="0"/><net_sink comp="734" pin=1"/></net>

<net id="744"><net_src comp="734" pin="2"/><net_sink comp="740" pin=0"/></net>

<net id="745"><net_src comp="674" pin="2"/><net_sink comp="740" pin=1"/></net>

<net id="750"><net_src comp="740" pin="2"/><net_sink comp="746" pin=0"/></net>

<net id="751"><net_src comp="662" pin="2"/><net_sink comp="746" pin=1"/></net>

<net id="756"><net_src comp="728" pin="2"/><net_sink comp="752" pin=0"/></net>

<net id="757"><net_src comp="746" pin="2"/><net_sink comp="752" pin=1"/></net>

<net id="762"><net_src comp="752" pin="2"/><net_sink comp="758" pin=0"/></net>

<net id="763"><net_src comp="26" pin="0"/><net_sink comp="758" pin=1"/></net>

<net id="768"><net_src comp="606" pin="1"/><net_sink comp="764" pin=0"/></net>

<net id="769"><net_src comp="758" pin="2"/><net_sink comp="764" pin=1"/></net>

<net id="774"><net_src comp="152" pin="6"/><net_sink comp="770" pin=0"/></net>

<net id="775"><net_src comp="46" pin="0"/><net_sink comp="770" pin=1"/></net>

<net id="780"><net_src comp="152" pin="6"/><net_sink comp="776" pin=0"/></net>

<net id="781"><net_src comp="46" pin="0"/><net_sink comp="776" pin=1"/></net>

<net id="786"><net_src comp="776" pin="2"/><net_sink comp="782" pin=0"/></net>

<net id="787"><net_src comp="164" pin="6"/><net_sink comp="782" pin=1"/></net>

<net id="792"><net_src comp="164" pin="6"/><net_sink comp="788" pin=0"/></net>

<net id="793"><net_src comp="26" pin="0"/><net_sink comp="788" pin=1"/></net>

<net id="798"><net_src comp="176" pin="6"/><net_sink comp="794" pin=0"/></net>

<net id="799"><net_src comp="28" pin="0"/><net_sink comp="794" pin=1"/></net>

<net id="804"><net_src comp="794" pin="2"/><net_sink comp="800" pin=0"/></net>

<net id="805"><net_src comp="788" pin="2"/><net_sink comp="800" pin=1"/></net>

<net id="810"><net_src comp="800" pin="2"/><net_sink comp="806" pin=0"/></net>

<net id="811"><net_src comp="776" pin="2"/><net_sink comp="806" pin=1"/></net>

<net id="816"><net_src comp="770" pin="2"/><net_sink comp="812" pin=0"/></net>

<net id="817"><net_src comp="782" pin="2"/><net_sink comp="812" pin=1"/></net>

<net id="822"><net_src comp="812" pin="2"/><net_sink comp="818" pin=0"/></net>

<net id="823"><net_src comp="806" pin="2"/><net_sink comp="818" pin=1"/></net>

<net id="828"><net_src comp="818" pin="2"/><net_sink comp="824" pin=0"/></net>

<net id="829"><net_src comp="140" pin="6"/><net_sink comp="824" pin=1"/></net>

<net id="834"><net_src comp="140" pin="6"/><net_sink comp="830" pin=0"/></net>

<net id="835"><net_src comp="26" pin="0"/><net_sink comp="830" pin=1"/></net>

<net id="840"><net_src comp="824" pin="2"/><net_sink comp="836" pin=0"/></net>

<net id="841"><net_src comp="830" pin="2"/><net_sink comp="836" pin=1"/></net>

<net id="847"><net_src comp="94" pin="0"/><net_sink comp="842" pin=0"/></net>

<net id="848"><net_src comp="152" pin="6"/><net_sink comp="842" pin=1"/></net>

<net id="849"><net_src comp="20" pin="0"/><net_sink comp="842" pin=2"/></net>

<net id="854"><net_src comp="176" pin="6"/><net_sink comp="850" pin=0"/></net>

<net id="855"><net_src comp="28" pin="0"/><net_sink comp="850" pin=1"/></net>

<net id="860"><net_src comp="850" pin="2"/><net_sink comp="856" pin=0"/></net>

<net id="861"><net_src comp="788" pin="2"/><net_sink comp="856" pin=1"/></net>

<net id="866"><net_src comp="856" pin="2"/><net_sink comp="862" pin=0"/></net>

<net id="867"><net_src comp="776" pin="2"/><net_sink comp="862" pin=1"/></net>

<net id="872"><net_src comp="842" pin="3"/><net_sink comp="868" pin=0"/></net>

<net id="873"><net_src comp="862" pin="2"/><net_sink comp="868" pin=1"/></net>

<net id="878"><net_src comp="868" pin="2"/><net_sink comp="874" pin=0"/></net>

<net id="879"><net_src comp="26" pin="0"/><net_sink comp="874" pin=1"/></net>

<net id="884"><net_src comp="140" pin="6"/><net_sink comp="880" pin=0"/></net>

<net id="885"><net_src comp="874" pin="2"/><net_sink comp="880" pin=1"/></net>

<net id="889"><net_src comp="295" pin="11"/><net_sink comp="886" pin=0"/></net>

<net id="894"><net_src comp="886" pin="1"/><net_sink comp="890" pin=0"/></net>

<net id="895"><net_src comp="26" pin="0"/><net_sink comp="890" pin=1"/></net>

<net id="896"><net_src comp="890" pin="2"/><net_sink comp="200" pin=2"/></net>

<net id="900"><net_src comp="295" pin="11"/><net_sink comp="897" pin=0"/></net>

<net id="901"><net_src comp="897" pin="1"/><net_sink comp="200" pin=0"/></net>

<net id="906"><net_src comp="96" pin="0"/><net_sink comp="902" pin=0"/></net>

<net id="907"><net_src comp="200" pin="6"/><net_sink comp="902" pin=1"/></net>

<net id="912"><net_src comp="902" pin="2"/><net_sink comp="908" pin=0"/></net>

<net id="913"><net_src comp="212" pin="6"/><net_sink comp="908" pin=1"/></net>

<net id="918"><net_src comp="908" pin="2"/><net_sink comp="914" pin=0"/></net>

<net id="919"><net_src comp="224" pin="6"/><net_sink comp="914" pin=1"/></net>

<net id="924"><net_src comp="914" pin="2"/><net_sink comp="920" pin=0"/></net>

<net id="925"><net_src comp="236" pin="6"/><net_sink comp="920" pin=1"/></net>

<net id="930"><net_src comp="920" pin="2"/><net_sink comp="926" pin=0"/></net>

<net id="931"><net_src comp="248" pin="6"/><net_sink comp="926" pin=1"/></net>

<net id="935"><net_src comp="98" pin="2"/><net_sink comp="932" pin=0"/></net>

<net id="936"><net_src comp="932" pin="1"/><net_sink comp="257" pin=5"/></net>

<net id="937"><net_src comp="932" pin="1"/><net_sink comp="551" pin=1"/></net>

<net id="941"><net_src comp="104" pin="2"/><net_sink comp="938" pin=0"/></net>

<net id="942"><net_src comp="938" pin="1"/><net_sink comp="457" pin=0"/></net>

<net id="943"><net_src comp="938" pin="1"/><net_sink comp="257" pin=4"/></net>

<net id="944"><net_src comp="938" pin="1"/><net_sink comp="551" pin=3"/></net>

<net id="948"><net_src comp="110" pin="2"/><net_sink comp="945" pin=0"/></net>

<net id="949"><net_src comp="945" pin="1"/><net_sink comp="467" pin=1"/></net>

<net id="950"><net_src comp="945" pin="1"/><net_sink comp="257" pin=3"/></net>

<net id="951"><net_src comp="945" pin="1"/><net_sink comp="551" pin=5"/></net>

<net id="955"><net_src comp="116" pin="2"/><net_sink comp="952" pin=0"/></net>

<net id="956"><net_src comp="952" pin="1"/><net_sink comp="484" pin=0"/></net>

<net id="957"><net_src comp="952" pin="1"/><net_sink comp="491" pin=1"/></net>

<net id="958"><net_src comp="952" pin="1"/><net_sink comp="530" pin=1"/></net>

<net id="959"><net_src comp="952" pin="1"/><net_sink comp="543" pin=0"/></net>

<net id="960"><net_src comp="952" pin="1"/><net_sink comp="257" pin=2"/></net>

<net id="961"><net_src comp="952" pin="1"/><net_sink comp="257" pin=7"/></net>

<net id="962"><net_src comp="952" pin="1"/><net_sink comp="551" pin=7"/></net>

<net id="966"><net_src comp="122" pin="2"/><net_sink comp="963" pin=0"/></net>

<net id="967"><net_src comp="963" pin="1"/><net_sink comp="551" pin=9"/></net>

<net id="968"><net_src comp="963" pin="1"/><net_sink comp="584" pin=9"/></net>

<net id="972"><net_src comp="396" pin="2"/><net_sink comp="969" pin=0"/></net>

<net id="976"><net_src comp="426" pin="2"/><net_sink comp="973" pin=0"/></net>

<net id="980"><net_src comp="449" pin="3"/><net_sink comp="977" pin=0"/></net>

<net id="981"><net_src comp="977" pin="1"/><net_sink comp="460" pin=0"/></net>

<net id="985"><net_src comp="535" pin="3"/><net_sink comp="982" pin=0"/></net>

<net id="986"><net_src comp="982" pin="1"/><net_sink comp="257" pin=8"/></net>

<net id="990"><net_src comp="551" pin="10"/><net_sink comp="987" pin=0"/></net>

<net id="991"><net_src comp="987" pin="1"/><net_sink comp="131" pin=2"/></net>

<net id="995"><net_src comp="606" pin="1"/><net_sink comp="992" pin=0"/></net>

<net id="996"><net_src comp="992" pin="1"/><net_sink comp="274" pin=1"/></net>

<net id="997"><net_src comp="992" pin="1"/><net_sink comp="140" pin=4"/></net>

<net id="1001"><net_src comp="610" pin="3"/><net_sink comp="998" pin=0"/></net>

<net id="1002"><net_src comp="998" pin="1"/><net_sink comp="274" pin=2"/></net>

<net id="1003"><net_src comp="998" pin="1"/><net_sink comp="188" pin=4"/></net>

<net id="1007"><net_src comp="618" pin="4"/><net_sink comp="1004" pin=0"/></net>

<net id="1008"><net_src comp="1004" pin="1"/><net_sink comp="274" pin=3"/></net>

<net id="1009"><net_src comp="1004" pin="1"/><net_sink comp="152" pin=4"/></net>

<net id="1013"><net_src comp="628" pin="3"/><net_sink comp="1010" pin=0"/></net>

<net id="1014"><net_src comp="1010" pin="1"/><net_sink comp="274" pin=4"/></net>

<net id="1015"><net_src comp="1010" pin="1"/><net_sink comp="164" pin=4"/></net>

<net id="1019"><net_src comp="636" pin="4"/><net_sink comp="1016" pin=0"/></net>

<net id="1020"><net_src comp="1016" pin="1"/><net_sink comp="274" pin=5"/></net>

<net id="1021"><net_src comp="1016" pin="1"/><net_sink comp="176" pin=4"/></net>

<net id="1025"><net_src comp="722" pin="2"/><net_sink comp="1022" pin=0"/></net>

<net id="1029"><net_src comp="764" pin="2"/><net_sink comp="1026" pin=0"/></net>

<net id="1033"><net_src comp="340" pin="1"/><net_sink comp="1030" pin=0"/></net>

<net id="1034"><net_src comp="1030" pin="1"/><net_sink comp="188" pin=2"/></net>

<net id="1038"><net_src comp="340" pin="1"/><net_sink comp="1035" pin=0"/></net>

<net id="1039"><net_src comp="1035" pin="1"/><net_sink comp="188" pin=0"/></net>

<net id="1043"><net_src comp="836" pin="2"/><net_sink comp="1040" pin=0"/></net>

<net id="1047"><net_src comp="880" pin="2"/><net_sink comp="1044" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: x_sign | {}
	Port: x_isZero | {}
	Port: x_regime | {}
	Port: x_exponent | {}
	Port: x_mantissa | {}
 - Input state : 
	Port: pNAngle : x_sign | {1 }
	Port: pNAngle : x_isZero | {1 }
	Port: pNAngle : x_regime | {1 }
	Port: pNAngle : x_exponent | {1 }
	Port: pNAngle : x_mantissa | {1 }
  - Chain level:
	State 1
		icmp_ln23 : 1
		br_ln23 : 2
		zext_ln675_2 : 1
		mul_ln675 : 2
		zext_ln680 : 3
		tmp_50 : 4
	State 2
		add_ln680 : 1
		sf_r : 2
		icmp_ln703 : 3
		or_ln720 : 4
		regime : 4
		regime_17 : 5
		icmp_ln803 : 6
		icmp_ln804 : 6
		select_ln804 : 7
		or_ln820 : 7
		regime_19 : 8
	State 3
		call_ret_i : 1
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
		result_isZero : 1
		result_regime : 1
		result_exponent : 1
		result_mantissa : 1
		tmp_18_i : 2
		storemerge_in_i : 3
		m_angle_sign_8 : 4
		m_angle_isZero : 4
		m_angle_regime_9 : 4
		m_angle_exponent_9 : 4
		m_angle_mantissa : 4
		tmp_53 : 4
		icmp_ln23_4 : 5
		icmp_ln24_3 : 5
		and_ln24 : 6
		xor_ln25_3 : 5
		icmp_ln25_5 : 5
		and_ln25_11 : 6
		and_ln25_12 : 6
		or_ln24 : 6
		absXGreaterEqual : 6
		xor_ln27 : 6
		not_m_angle_sign : 5
		retval_1_i : 6
		br_ln1196 : 6
		icmp_ln23_5 : 5
		icmp_ln25_6 : 5
		and_ln25_13 : 6
		and_ln25_14 : 6
		absXGreaterEqual_5 : 6
		xor_ln27_4 : 6
		retval_1_i9 : 6
		br_ln1198 : 6
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
		m_angle_sign_5 : 1
		m_angle_isZero_6 : 1
		m_angle_regime_5 : 1
		m_angle_exponent_5 : 1
		m_angle_mantissa_6 : 1
		m_angle_sign : 1
		m_angle_isZero_5 : 1
		m_angle_regime : 1
		m_angle_exponent : 1
		m_angle_mantissa_5 : 1
		x_sign_6 : 2
		x_regime_10 : 2
		x_exponent_7 : 2
		y_mantissa : 2
		icmp_ln23_6 : 3
		icmp_ln24_4 : 3
		and_ln24_2 : 4
		xor_ln25_4 : 3
		icmp_ln25_7 : 3
		and_ln25_15 : 4
		and_ln25_16 : 4
		or_ln24_2 : 4
		absXGreaterEqual_6 : 4
		xor_ln27_5 : 4
		not_y_sign : 3
		retval_1_i20 : 4
		br_ln1200 : 4
		tmp_54 : 3
		icmp_ln25_8 : 3
		and_ln25_17 : 4
		and_ln25_18 : 4
		absXGreaterEqual_7 : 4
		xor_ln27_6 : 4
		retval_1_i31 : 4
	State 19
		call_ret1 : 1
		call_ret9 : 1
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
		newret : 1
		m_angle_isZero_8 : 1
		m_angle_regime_7 : 1
		m_angle_exponent_7 : 1
		m_angle_mantissa_8 : 1
		m_angle_sign_7 : 2
		result_sign : 1
		result_isZero_6 : 1
		result_regime_17 : 1
		result_exponent_2 : 1
		result_mantissa_8 : 1
		ref_tmp_0292_2 : 2
		ref_tmp_1293_2 : 2
		ref_tmp_3_2 : 2
		ref_tmp_4_2 : 2
		ref_tmp_5_2 : 2
		mrv : 3
		mrv_1 : 4
		mrv_2 : 5
		mrv_3 : 6
		mrv_4 : 7
		ret_ln852 : 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-----------------------------|---------|---------|---------|
| Operation|       Functional Unit       |   DSP   |    FF   |   LUT   |
|----------|-----------------------------|---------|---------|---------|
|          |     grp_positAdd_fu_257     |    0    |   266   |   1589  |
|   call   |     grp_positAdd_fu_274     |    0    |   266   |   1589  |
|          |     grp_positAdd_fu_295     |    0    |   266   |   1589  |
|----------|-----------------------------|---------|---------|---------|
|          |       icmp_ln23_fu_396      |    0    |    0    |    12   |
|          |       icmp_ln24_fu_402      |    0    |    0    |    13   |
|          |       icmp_ln25_fu_414      |    0    |    0    |    37   |
|          |      icmp_ln703_fu_478      |    0    |    0    |    13   |
|          |      icmp_ln803_fu_510      |    0    |    0    |    13   |
|          |      icmp_ln804_fu_516      |    0    |    0    |    13   |
|          |      icmp_ln23_4_fu_656     |    0    |    0    |    12   |
|   icmp   |      icmp_ln24_3_fu_662     |    0    |    0    |    13   |
|          |      icmp_ln25_5_fu_680     |    0    |    0    |    37   |
|          |      icmp_ln23_5_fu_728     |    0    |    0    |    13   |
|          |      icmp_ln25_6_fu_734     |    0    |    0    |    37   |
|          |      icmp_ln23_6_fu_770     |    0    |    0    |    13   |
|          |      icmp_ln24_4_fu_776     |    0    |    0    |    13   |
|          |      icmp_ln25_7_fu_794     |    0    |    0    |    37   |
|          |      icmp_ln25_8_fu_850     |    0    |    0    |    37   |
|----------|-----------------------------|---------|---------|---------|
|          |     select_ln680_fu_460     |    0    |    0    |    6    |
|          |     select_ln720_fu_484     |    0    |    0    |    6    |
|  select  |        regime_fu_496        |    0    |    0    |    6    |
|          |     select_ln804_fu_522     |    0    |    0    |    6    |
|          |       regime_19_fu_535      |    0    |    0    |    6    |
|          |     select_ln739_fu_543     |    0    |    0    |    29   |
|----------|-----------------------------|---------|---------|---------|
|    mul   |       mul_ln675_fu_329      |    10   |    0    |    38   |
|----------|-----------------------------|---------|---------|---------|
|          |       add_ln680_fu_467      |    0    |    0    |    13   |
|    add   |         sf_r_fu_472         |    0    |    0    |    13   |
|          |       regime_17_fu_504      |    0    |    0    |    13   |
|----------|-----------------------------|---------|---------|---------|
|          |       and_ln25_fu_420       |    0    |    0    |    2    |
|          |  absXGreaterEqual_9_fu_426  |    0    |    0    |    2    |
|          |       and_ln24_fu_668       |    0    |    0    |    2    |
|          |      and_ln25_11_fu_686     |    0    |    0    |    2    |
|          |      and_ln25_12_fu_692     |    0    |    0    |    2    |
|          |      retval_1_i_fu_722      |    0    |    0    |    2    |
|          |      and_ln25_13_fu_740     |    0    |    0    |    2    |
|    and   |      and_ln25_14_fu_746     |    0    |    0    |    2    |
|          |      retval_1_i9_fu_764     |    0    |    0    |    2    |
|          |      and_ln24_2_fu_782      |    0    |    0    |    2    |
|          |      and_ln25_15_fu_800     |    0    |    0    |    2    |
|          |      and_ln25_16_fu_806     |    0    |    0    |    2    |
|          |     retval_1_i20_fu_836     |    0    |    0    |    2    |
|          |      and_ln25_17_fu_856     |    0    |    0    |    2    |
|          |      and_ln25_18_fu_862     |    0    |    0    |    2    |
|          |     retval_1_i31_fu_880     |    0    |    0    |    2    |
|----------|-----------------------------|---------|---------|---------|
|          |       xor_ln25_fu_408       |    0    |    0    |    2    |
|          |      xor_ln25_3_fu_674      |    0    |    0    |    2    |
|          |       xor_ln27_fu_710       |    0    |    0    |    2    |
|          |   not_m_angle_sign_fu_716   |    0    |    0    |    2    |
|    xor   |      xor_ln27_4_fu_758      |    0    |    0    |    2    |
|          |      xor_ln25_4_fu_788      |    0    |    0    |    2    |
|          |      xor_ln27_5_fu_824      |    0    |    0    |    2    |
|          |      not_y_sign_fu_830      |    0    |    0    |    2    |
|          |      xor_ln27_6_fu_874      |    0    |    0    |    2    |
|          |    m_angle_sign_7_fu_890    |    0    |    0    |    2    |
|----------|-----------------------------|---------|---------|---------|
|          |       or_ln720_fu_491       |    0    |    0    |    2    |
|          |       or_ln820_fu_530       |    0    |    0    |    2    |
|          |        or_ln24_fu_698       |    0    |    0    |    2    |
|    or    |   absXGreaterEqual_fu_704   |    0    |    0    |    2    |
|          |  absXGreaterEqual_5_fu_752  |    0    |    0    |    2    |
|          |       or_ln24_2_fu_812      |    0    |    0    |    2    |
|          |  absXGreaterEqual_6_fu_818  |    0    |    0    |    2    |
|          |  absXGreaterEqual_7_fu_868  |    0    |    0    |    2    |
|----------|-----------------------------|---------|---------|---------|
|          |  x_mantissa_read_read_fu_98 |    0    |    0    |    0    |
|          | x_exponent_read_read_fu_104 |    0    |    0    |    0    |
|   read   |  x_regime_read_read_fu_110  |    0    |    0    |    0    |
|          |  x_isZero_read_read_fu_116  |    0    |    0    |    0    |
|          |   x_sign_read_read_fu_122   |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |          grp_fu_334         |    0    |    0    |    0    |
|          |          grp_fu_340         |    0    |    0    |    0    |
|          |          grp_fu_344         |    0    |    0    |    0    |
|          |          grp_fu_350         |    0    |    0    |    0    |
|          |          grp_fu_356         |    0    |    0    |    0    |
|          |          grp_fu_362         |    0    |    0    |    0    |
|          |          grp_fu_368         |    0    |    0    |    0    |
|extractvalue|          grp_fu_374         |    0    |    0    |    0    |
|          |          grp_fu_380         |    0    |    0    |    0    |
|          |     result_isZero_fu_568    |    0    |    0    |    0    |
|          |     result_regime_fu_572    |    0    |    0    |    0    |
|          |    result_exponent_fu_576   |    0    |    0    |    0    |
|          |    result_mantissa_fu_580   |    0    |    0    |    0    |
|          |        newret_fu_886        |    0    |    0    |    0    |
|          |      result_sign_fu_897     |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |          tmp_fu_386         |    0    |    0    |    0    |
|partselect|   m_angle_regime_9_fu_618   |    0    |    0    |    0    |
|          |   m_angle_mantissa_fu_636   |    0    |    0    |    0    |
|          |        tmp_53_fu_646        |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |        shl_ln_fu_432        |    0    |    0    |    0    |
|bitconcatenate|         tmp_i_fu_551        |    0    |    0    |    0    |
|          |       tmp_18_i_fu_584       |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |     zext_ln675_2_fu_440     |    0    |    0    |    0    |
|   zext   |      zext_ln680_fu_445      |    0    |    0    |    0    |
|          |      zext_ln675_fu_457      |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |        tmp_50_fu_449        |    0    |    0    |    0    |
| bitselect|    m_angle_isZero_fu_610    |    0    |    0    |    0    |
|          |  m_angle_exponent_9_fu_628  |    0    |    0    |    0    |
|          |        tmp_54_fu_842        |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|   trunc  |    m_angle_sign_8_fu_606    |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|          |          mrv_fu_902         |    0    |    0    |    0    |
|          |         mrv_1_fu_908        |    0    |    0    |    0    |
|insertvalue|         mrv_2_fu_914        |    0    |    0    |    0    |
|          |         mrv_3_fu_920        |    0    |    0    |    0    |
|          |         mrv_4_fu_926        |    0    |    0    |    0    |
|----------|-----------------------------|---------|---------|---------|
|   Total  |                             |    10   |   798   |   5284  |
|----------|-----------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+---------------------------+--------+
|                           |   FF   |
+---------------------------+--------+
| absXGreaterEqual_9_reg_973|    1   |
|     icmp_ln23_reg_969     |    1   |
|m_angle_exponent_9_reg_1010|    1   |
| m_angle_isZero_5_reg_1035 |    1   |
| m_angle_isZero_6_reg_1030 |    1   |
|   m_angle_isZero_reg_998  |    1   |
| m_angle_mantissa_reg_1016 |   30   |
| m_angle_regime_9_reg_1004 |    6   |
|   m_angle_sign_8_reg_992  |    1   |
|   ref_tmp_0292_2_reg_197  |    1   |
|   ref_tmp_1293_2_reg_209  |    1   |
|    ref_tmp_3_2_reg_221    |    6   |
|    ref_tmp_4_2_reg_233    |    1   |
|    ref_tmp_5_2_reg_245    |   30   |
|     regime_19_reg_982     |    6   |
|   retval_1_i20_reg_1040   |    1   |
|   retval_1_i31_reg_1044   |    1   |
|    retval_1_i9_reg_1026   |    1   |
|    retval_1_i_reg_1022    |    1   |
|  storemerge_in_i_reg_128  |   94   |
|       tmp_50_reg_977      |    1   |
|       tmp_i_reg_987       |   94   |
|    x_exponent_7_reg_161   |    1   |
|  x_exponent_read_reg_938  |    1   |
|   x_isZero_read_reg_952   |    1   |
|  x_mantissa_read_reg_932  |   30   |
|    x_regime_10_reg_149    |    6   |
|   x_regime_read_reg_945   |    6   |
|      x_sign_6_reg_137     |    1   |
|    x_sign_read_reg_963    |    1   |
|      y_isZero_reg_185     |    1   |
|     y_mantissa_reg_173    |   30   |
+---------------------------+--------+
|           Total           |   359  |
+---------------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||    FF   ||   LUT   |
|---------------------|------|------|------|--------||---------||---------||---------|
| grp_positAdd_fu_274 |  p1  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_274 |  p6  |   2  |   1  |    2   |
| grp_positAdd_fu_295 |  p1  |   2  |   1  |    2   |
| grp_positAdd_fu_295 |  p2  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_295 |  p3  |   2  |   6  |   12   ||    0    ||    9    |
| grp_positAdd_fu_295 |  p4  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_295 |  p5  |   2  |  30  |   60   ||    0    ||    9    |
| grp_positAdd_fu_295 |  p6  |   2  |   1  |    2   |
| grp_positAdd_fu_295 |  p7  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_295 |  p8  |   2  |   6  |   12   ||    0    ||    9    |
| grp_positAdd_fu_295 |  p9  |   2  |   1  |    2   ||    0    ||    9    |
| grp_positAdd_fu_295 |  p10 |   2  |  30  |   60   ||    0    ||    9    |
|---------------------|------|------|------|--------||---------||---------||---------|
|        Total        |      |      |      |   160  ||  5.868  ||    0    ||    81   |
|---------------------|------|------|------|--------||---------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |   DSP  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |   10   |    -   |   798  |  5284  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    5   |    0   |   81   |
|  Register |    -   |    -   |   359  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |   10   |    5   |  1157  |  5365  |
+-----------+--------+--------+--------+--------+
