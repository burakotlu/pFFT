

================================================================
== Vitis HLS Report for 'positCos'
================================================================
* Date:           Tue Apr  8 14:32:51 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        PositFFT
* Solution:       hls (Vivado IP Flow Target)
* Product family: azynquplus
* Target device:  xazu7ev-fbvb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.140 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       51|       51|  0.510 us|  0.510 us|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 52


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 52
* Pipeline : 1
  Pipeline-0 : II = 1, D = 52, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.54>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%x_mantissa_read = read i30 @_ssdm_op_Read.ap_auto.i30, i30 %x_mantissa" [posit_lib.cpp:1042]   --->   Operation 53 'read' 'x_mantissa_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%x_exponent_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_exponent" [posit_lib.cpp:1042]   --->   Operation 54 'read' 'x_exponent_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%x_regime_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %x_regime" [posit_lib.cpp:1042]   --->   Operation 55 'read' 'x_regime_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%x_isZero_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_isZero" [posit_lib.cpp:1042]   --->   Operation 56 'read' 'x_isZero_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%x_sign_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %x_sign" [posit_lib.cpp:1042]   --->   Operation 57 'read' 'x_sign_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.54ns)   --->   "%br_ln1047 = br i1 %x_isZero_read, void %if.end, void %cleanup" [posit_lib.cpp:1047]   --->   Operation 58 'br' 'br_ln1047' <Predicate = true> <Delay = 0.54>

State 2 <SV = 1> <Delay = 5.04>
ST_2 : Operation 59 [26/26] (5.04ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 59 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 5.04> <CoreType = "Generic">   --->   Generic Core

State 3 <SV = 2> <Delay = 7.14>
ST_3 : Operation 60 [25/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 60 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 4 <SV = 3> <Delay = 7.14>
ST_4 : Operation 61 [24/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 61 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 5 <SV = 4> <Delay = 7.14>
ST_5 : Operation 62 [23/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 62 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 6 <SV = 5> <Delay = 7.14>
ST_6 : Operation 63 [22/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 63 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 7 <SV = 6> <Delay = 7.14>
ST_7 : Operation 64 [21/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 64 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 8 <SV = 7> <Delay = 7.14>
ST_8 : Operation 65 [20/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 65 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 9 <SV = 8> <Delay = 7.14>
ST_9 : Operation 66 [19/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 66 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 10 <SV = 9> <Delay = 7.14>
ST_10 : Operation 67 [18/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 67 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 11 <SV = 10> <Delay = 7.14>
ST_11 : Operation 68 [17/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 68 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 12 <SV = 11> <Delay = 7.14>
ST_12 : Operation 69 [16/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 69 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 13 <SV = 12> <Delay = 7.14>
ST_13 : Operation 70 [15/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 70 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 14 <SV = 13> <Delay = 7.14>
ST_14 : Operation 71 [14/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 71 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 15 <SV = 14> <Delay = 7.14>
ST_15 : Operation 72 [13/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 72 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 16 <SV = 15> <Delay = 7.14>
ST_16 : Operation 73 [12/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 73 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 17 <SV = 16> <Delay = 7.14>
ST_17 : Operation 74 [11/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 74 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 18 <SV = 17> <Delay = 7.14>
ST_18 : Operation 75 [10/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 75 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 19 <SV = 18> <Delay = 7.14>
ST_19 : Operation 76 [9/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 76 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 20 <SV = 19> <Delay = 7.14>
ST_20 : Operation 77 [8/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 77 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 21 <SV = 20> <Delay = 7.14>
ST_21 : Operation 78 [7/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 78 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 22 <SV = 21> <Delay = 7.14>
ST_22 : Operation 79 [6/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 79 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 23 <SV = 22> <Delay = 7.14>
ST_23 : Operation 80 [5/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 80 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 24 <SV = 23> <Delay = 7.14>
ST_24 : Operation 81 [4/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 81 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 25 <SV = 24> <Delay = 7.14>
ST_25 : Operation 82 [3/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 82 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 26 <SV = 25> <Delay = 7.14>
ST_26 : Operation 83 [2/26] (7.14ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 83 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 27 <SV = 26> <Delay = 5.31>
ST_27 : Operation 84 [1/26] (1.09ns)   --->   "%call_ret8 = call i39 @pReduceAngle, i1 %x_sign_read, i6 %x_regime_read, i1 %x_exponent_read, i30 %x_mantissa_read" [posit_lib.cpp:1048]   --->   Operation 84 'call' 'call_ret8' <Predicate = (!x_isZero_read)> <Delay = 1.09> <CoreType = "Generic">   --->   Generic Core
ST_27 : Operation 85 [1/1] (0.00ns)   --->   "%y_isZero = extractvalue i39 %call_ret8" [posit_lib.cpp:1048]   --->   Operation 85 'extractvalue' 'y_isZero' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node sf_r)   --->   "%y_regime_2 = extractvalue i39 %call_ret8" [posit_lib.cpp:1048]   --->   Operation 86 'extractvalue' 'y_regime_2' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node sf_r)   --->   "%y_exponent = extractvalue i39 %call_ret8" [posit_lib.cpp:1048]   --->   Operation 87 'extractvalue' 'y_exponent' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 88 [1/1] (0.00ns)   --->   "%y_mantissa_2 = extractvalue i39 %call_ret8" [posit_lib.cpp:1048]   --->   Operation 88 'extractvalue' 'y_mantissa_2' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 89 [1/1] (0.00ns)   --->   "%negate = extractvalue i39 %call_ret8" [posit_lib.cpp:1048]   --->   Operation 89 'extractvalue' 'negate' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln748 = zext i30 %y_mantissa_2" [posit_lib.cpp:748->posit_lib.cpp:1050]   --->   Operation 90 'zext' 'zext_ln748' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node sf_r)   --->   "%add_ln = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i6.i1, i6 %y_regime_2, i1 0" [posit_lib.cpp:757->posit_lib.cpp:1050]   --->   Operation 91 'bitconcatenate' 'add_ln' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node sf_r)   --->   "%add_ln757_3 = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 %y_exponent, i1 0" [posit_lib.cpp:757->posit_lib.cpp:1050]   --->   Operation 92 'bitconcatenate' 'add_ln757_3' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node sf_r)   --->   "%zext_ln757 = zext i2 %add_ln757_3" [posit_lib.cpp:757->posit_lib.cpp:1050]   --->   Operation 93 'zext' 'zext_ln757' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 94 [1/1] (0.89ns) (out node of the LUT)   --->   "%sf_r = add i7 %zext_ln757, i7 %add_ln" [posit_lib.cpp:757->posit_lib.cpp:1050]   --->   Operation 94 'add' 'sf_r' <Predicate = (!x_isZero_read)> <Delay = 0.89> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node regime_3)   --->   "%trunc_ln734 = trunc i7 %sf_r" [posit_lib.cpp:734->posit_lib.cpp:1050]   --->   Operation 95 'trunc' 'trunc_ln734' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_i = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %sf_r, i32 5" [posit_lib.cpp:771->posit_lib.cpp:1050]   --->   Operation 96 'partselect' 'tmp_i' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 97 [1/1] (0.62ns)   --->   "%icmp_ln771 = icmp_eq  i2 %tmp_i, i2 2" [posit_lib.cpp:771->posit_lib.cpp:1050]   --->   Operation 97 'icmp' 'icmp_ln771' <Predicate = (!x_isZero_read)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 98 [1/1] (3.76ns)   --->   "%mant = mul i60 %zext_ln748, i60 %zext_ln748" [posit_lib.cpp:778->posit_lib.cpp:1050]   --->   Operation 98 'mul' 'mant' <Predicate = (!x_isZero_read)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.76> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 99 [1/1] (0.00ns)   --->   "%ovf = bitselect i1 @_ssdm_op_BitSelect.i1.i60.i32, i60 %mant, i32 59" [posit_lib.cpp:779->posit_lib.cpp:1050]   --->   Operation 99 'bitselect' 'ovf' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node regime_3)   --->   "%tmp = partselect i5 @_ssdm_op_PartSelect.i5.i7.i32.i32, i7 %sf_r, i32 1, i32 5" [posit_lib.cpp:781->posit_lib.cpp:1050]   --->   Operation 100 'partselect' 'tmp' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node regime_3)   --->   "%sf_r_4 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i5.i1, i5 %tmp, i1 1" [posit_lib.cpp:781->posit_lib.cpp:1050]   --->   Operation 101 'bitconcatenate' 'sf_r_4' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node mantissa_16)   --->   "%mantissa = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant, i32 30" [posit_lib.cpp:782->posit_lib.cpp:1050]   --->   Operation 102 'partselect' 'mantissa' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node mantissa_16)   --->   "%mantissa_5 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant, i32 29" [posit_lib.cpp:785->posit_lib.cpp:1050]   --->   Operation 103 'partselect' 'mantissa_5' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_27 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node regime_3)   --->   "%sf_r_11 = select i1 %ovf, i6 %sf_r_4, i6 %trunc_ln734" [posit_lib.cpp:800->posit_lib.cpp:1050]   --->   Operation 104 'select' 'sf_r_11' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node mantissa_16)   --->   "%mantissa_6 = select i1 %ovf, i30 %mantissa, i30 %mantissa_5" [posit_lib.cpp:779->posit_lib.cpp:1050]   --->   Operation 105 'select' 'mantissa_6' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 106 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_3 = select i1 %icmp_ln771, i6 34, i6 %sf_r_11" [posit_lib.cpp:771->posit_lib.cpp:1050]   --->   Operation 106 'select' 'regime_3' <Predicate = (!x_isZero_read)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 107 [1/1] (0.46ns)   --->   "%select_ln820_5 = select i1 %y_isZero, i30 0, i30 536870912" [posit_lib.cpp:820->posit_lib.cpp:1050]   --->   Operation 107 'select' 'select_ln820_5' <Predicate = (!x_isZero_read)> <Delay = 0.46> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node mantissa_16)   --->   "%or_ln820_2 = or i1 %y_isZero, i1 %icmp_ln771" [posit_lib.cpp:820->posit_lib.cpp:1050]   --->   Operation 108 'or' 'or_ln820_2' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 109 [1/1] (0.46ns) (out node of the LUT)   --->   "%mantissa_16 = select i1 %or_ln820_2, i30 %select_ln820_5, i30 %mantissa_6" [posit_lib.cpp:820->posit_lib.cpp:1050]   --->   Operation 109 'select' 'mantissa_16' <Predicate = (!x_isZero_read)> <Delay = 0.46> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 28 <SV = 27> <Delay = 7.04>
ST_28 : Operation 110 [1/1] (0.88ns)   --->   "%icmp_ln803 = icmp_sgt  i6 %regime_3, i6 29" [posit_lib.cpp:803->posit_lib.cpp:1050]   --->   Operation 110 'icmp' 'icmp_ln803' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 111 [1/1] (0.88ns)   --->   "%icmp_ln804 = icmp_sgt  i6 %regime_3, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1050]   --->   Operation 111 'icmp' 'icmp_ln804' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node regime_10)   --->   "%select_ln804 = select i1 %icmp_ln804, i6 %regime_3, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1050]   --->   Operation 112 'select' 'select_ln804' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 113 [1/1] (0.44ns)   --->   "%select_ln820 = select i1 %y_isZero, i6 0, i6 30" [posit_lib.cpp:820->posit_lib.cpp:1050]   --->   Operation 113 'select' 'select_ln820' <Predicate = (!x_isZero_read)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node regime_10)   --->   "%or_ln820 = or i1 %y_isZero, i1 %icmp_ln803" [posit_lib.cpp:820->posit_lib.cpp:1050]   --->   Operation 114 'or' 'or_ln820' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 115 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_10 = select i1 %or_ln820, i6 %select_ln820, i6 %select_ln804" [posit_lib.cpp:820->posit_lib.cpp:1050]   --->   Operation 115 'select' 'regime_10' <Predicate = (!x_isZero_read)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln748_2 = zext i30 %mantissa_16" [posit_lib.cpp:748->posit_lib.cpp:1051]   --->   Operation 116 'zext' 'zext_ln748_2' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node regime_5)   --->   "%trunc_ln734_1 = trunc i6 %regime_10" [posit_lib.cpp:734->posit_lib.cpp:1051]   --->   Operation 117 'trunc' 'trunc_ln734_1' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node regime_5)   --->   "%shl_ln734 = shl i6 %regime_10, i6 1" [posit_lib.cpp:734->posit_lib.cpp:1051]   --->   Operation 118 'shl' 'shl_ln734' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_i6 = partselect i2 @_ssdm_op_PartSelect.i2.i6.i32.i32, i6 %regime_10, i32 4, i32 5" [posit_lib.cpp:771->posit_lib.cpp:1051]   --->   Operation 119 'partselect' 'tmp_i6' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 120 [1/1] (0.62ns)   --->   "%icmp_ln771_1 = icmp_eq  i2 %tmp_i6, i2 2" [posit_lib.cpp:771->posit_lib.cpp:1051]   --->   Operation 120 'icmp' 'icmp_ln771_1' <Predicate = (!x_isZero_read)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 121 [1/1] (3.76ns)   --->   "%mant_1 = mul i60 %zext_ln748_2, i60 %zext_ln748_2" [posit_lib.cpp:778->posit_lib.cpp:1051]   --->   Operation 121 'mul' 'mant_1' <Predicate = (!x_isZero_read)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.76> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 122 [1/1] (0.00ns)   --->   "%ovf_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i60.i32, i60 %mant_1, i32 59" [posit_lib.cpp:779->posit_lib.cpp:1051]   --->   Operation 122 'bitselect' 'ovf_1' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node regime_5)   --->   "%sf_r_6 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i5.i1, i5 %trunc_ln734_1, i1 1" [posit_lib.cpp:781->posit_lib.cpp:1051]   --->   Operation 123 'bitconcatenate' 'sf_r_6' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node mantissa_17)   --->   "%mantissa_8 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant_1, i32 30" [posit_lib.cpp:782->posit_lib.cpp:1051]   --->   Operation 124 'partselect' 'mantissa_8' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node mantissa_17)   --->   "%mantissa_9 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant_1, i32 29" [posit_lib.cpp:785->posit_lib.cpp:1051]   --->   Operation 125 'partselect' 'mantissa_9' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node regime_5)   --->   "%sf_r_12 = select i1 %ovf_1, i6 %sf_r_6, i6 %shl_ln734" [posit_lib.cpp:800->posit_lib.cpp:1051]   --->   Operation 126 'select' 'sf_r_12' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node mantissa_17)   --->   "%mantissa_10 = select i1 %ovf_1, i30 %mantissa_8, i30 %mantissa_9" [posit_lib.cpp:779->posit_lib.cpp:1051]   --->   Operation 127 'select' 'mantissa_10' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 128 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_5 = select i1 %icmp_ln771_1, i6 34, i6 %sf_r_12" [posit_lib.cpp:771->posit_lib.cpp:1051]   --->   Operation 128 'select' 'regime_5' <Predicate = (!x_isZero_read)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 129 [1/1] (0.88ns)   --->   "%icmp_ln803_1 = icmp_sgt  i6 %regime_5, i6 29" [posit_lib.cpp:803->posit_lib.cpp:1051]   --->   Operation 129 'icmp' 'icmp_ln803_1' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 130 [1/1] (0.88ns)   --->   "%icmp_ln804_1 = icmp_sgt  i6 %regime_5, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1051]   --->   Operation 130 'icmp' 'icmp_ln804_1' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node sf_in_1)   --->   "%select_ln804_1 = select i1 %icmp_ln804_1, i6 %regime_5, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1051]   --->   Operation 131 'select' 'select_ln804_1' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node sf_in_1)   --->   "%or_ln820_3 = or i1 %y_isZero, i1 %icmp_ln803_1" [posit_lib.cpp:820->posit_lib.cpp:1051]   --->   Operation 132 'or' 'or_ln820_3' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node sf_in_1)   --->   "%regime_11 = select i1 %or_ln820_3, i6 %select_ln820, i6 %select_ln804_1" [posit_lib.cpp:820->posit_lib.cpp:1051]   --->   Operation 133 'select' 'regime_11' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node mantissa_17)   --->   "%or_ln820_4 = or i1 %y_isZero, i1 %icmp_ln771_1" [posit_lib.cpp:820->posit_lib.cpp:1051]   --->   Operation 134 'or' 'or_ln820_4' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 135 [1/1] (0.46ns) (out node of the LUT)   --->   "%mantissa_17 = select i1 %or_ln820_4, i30 %select_ln820_5, i30 %mantissa_10" [posit_lib.cpp:820->posit_lib.cpp:1051]   --->   Operation 135 'select' 'mantissa_17' <Predicate = (!x_isZero_read)> <Delay = 0.46> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 136 [1/1] (0.88ns)   --->   "%sf_in = add i6 %regime_10, i6 63" [posit_lib.cpp:635->posit_lib.cpp:1053]   --->   Operation 136 'add' 'sf_in' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node sf_in_1)   --->   "%sext_ln629 = sext i6 %regime_11" [posit_lib.cpp:629->posit_lib.cpp:1059]   --->   Operation 137 'sext' 'sext_ln629' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 138 [1/1] (0.88ns) (out node of the LUT)   --->   "%sf_in_1 = add i7 %sext_ln629, i7 123" [posit_lib.cpp:629->posit_lib.cpp:1059]   --->   Operation 138 'add' 'sf_in_1' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_s = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %sf_in_1, i32 5" [posit_lib.cpp:631->posit_lib.cpp:1059]   --->   Operation 139 'partselect' 'tmp_s' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 140 [1/1] (0.62ns)   --->   "%icmp_ln631 = icmp_eq  i2 %tmp_s, i2 2" [posit_lib.cpp:631->posit_lib.cpp:1059]   --->   Operation 140 'icmp' 'icmp_ln631' <Predicate = (!x_isZero_read)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 141 [1/1] (0.00ns)   --->   "%result_regime_6 = trunc i7 %sf_in_1" [posit_lib.cpp:635->posit_lib.cpp:1059]   --->   Operation 141 'trunc' 'result_regime_6' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_28 : Operation 142 [1/1] (0.44ns)   --->   "%result_regime_11 = select i1 %icmp_ln631, i6 34, i6 %result_regime_6" [posit_lib.cpp:631->posit_lib.cpp:1059]   --->   Operation 142 'select' 'result_regime_11' <Predicate = (!x_isZero_read)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 29 <SV = 28> <Delay = 7.04>
ST_29 : Operation 143 [1/1] (0.00ns)   --->   "%sext_ln755 = sext i6 %regime_10" [posit_lib.cpp:755->posit_lib.cpp:1051]   --->   Operation 143 'sext' 'sext_ln755' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 144 [1/1] (0.00ns)   --->   "%zext_ln748_3 = zext i30 %mantissa_17" [posit_lib.cpp:748->posit_lib.cpp:1067]   --->   Operation 144 'zext' 'zext_ln748_3' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 145 [1/1] (0.00ns)   --->   "%sext_ln755_1 = sext i6 %result_regime_11" [posit_lib.cpp:755->posit_lib.cpp:1067]   --->   Operation 145 'sext' 'sext_ln755_1' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 146 [1/1] (0.88ns)   --->   "%add_ln755 = add i6 %result_regime_11, i6 %regime_10" [posit_lib.cpp:755->posit_lib.cpp:1067]   --->   Operation 146 'add' 'add_ln755' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 147 [1/1] (0.88ns)   --->   "%sf_r_8 = add i7 %sext_ln755_1, i7 %sext_ln755" [posit_lib.cpp:755->posit_lib.cpp:1067]   --->   Operation 147 'add' 'sf_r_8' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_i1 = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %sf_r_8, i32 5" [posit_lib.cpp:771->posit_lib.cpp:1067]   --->   Operation 148 'partselect' 'tmp_i1' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 149 [1/1] (0.62ns)   --->   "%icmp_ln771_2 = icmp_eq  i2 %tmp_i1, i2 2" [posit_lib.cpp:771->posit_lib.cpp:1067]   --->   Operation 149 'icmp' 'icmp_ln771_2' <Predicate = (!x_isZero_read)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 150 [1/1] (3.76ns)   --->   "%mant_2 = mul i60 %zext_ln748_2, i60 %zext_ln748_3" [posit_lib.cpp:778->posit_lib.cpp:1067]   --->   Operation 150 'mul' 'mant_2' <Predicate = (!x_isZero_read)> <Delay = 3.76> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.76> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 151 [1/1] (0.00ns)   --->   "%ovf_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i60.i32, i60 %mant_2, i32 59" [posit_lib.cpp:779->posit_lib.cpp:1067]   --->   Operation 151 'bitselect' 'ovf_2' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 152 [1/1] (0.88ns)   --->   "%sf_r_9 = add i6 %add_ln755, i6 1" [posit_lib.cpp:781->posit_lib.cpp:1067]   --->   Operation 152 'add' 'sf_r_9' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node mantissa_18)   --->   "%mantissa_12 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant_2, i32 30" [posit_lib.cpp:782->posit_lib.cpp:1067]   --->   Operation 153 'partselect' 'mantissa_12' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node mantissa_18)   --->   "%mantissa_13 = partselect i30 @_ssdm_op_PartSelect.i30.i60.i32, i60 %mant_2, i32 29" [posit_lib.cpp:785->posit_lib.cpp:1067]   --->   Operation 154 'partselect' 'mantissa_13' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node regime_8)   --->   "%sf_r_13 = select i1 %ovf_2, i6 %sf_r_9, i6 %add_ln755" [posit_lib.cpp:800->posit_lib.cpp:1067]   --->   Operation 155 'select' 'sf_r_13' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node mantissa_18)   --->   "%mantissa_14 = select i1 %ovf_2, i30 %mantissa_12, i30 %mantissa_13" [posit_lib.cpp:779->posit_lib.cpp:1067]   --->   Operation 156 'select' 'mantissa_14' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 157 [1/1] (0.44ns) (out node of the LUT)   --->   "%regime_8 = select i1 %icmp_ln771_2, i6 34, i6 %sf_r_13" [posit_lib.cpp:771->posit_lib.cpp:1067]   --->   Operation 157 'select' 'regime_8' <Predicate = (!x_isZero_read)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 158 [1/1] (0.88ns)   --->   "%icmp_ln803_2 = icmp_sgt  i6 %regime_8, i6 29" [posit_lib.cpp:803->posit_lib.cpp:1067]   --->   Operation 158 'icmp' 'icmp_ln803_2' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 159 [1/1] (0.88ns)   --->   "%icmp_ln804_2 = icmp_sgt  i6 %regime_8, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1067]   --->   Operation 159 'icmp' 'icmp_ln804_2' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node sf_in_2)   --->   "%select_ln804_2 = select i1 %icmp_ln804_2, i6 %regime_8, i6 34" [posit_lib.cpp:804->posit_lib.cpp:1067]   --->   Operation 160 'select' 'select_ln804_2' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node sf_in_2)   --->   "%or_ln820_5 = or i1 %y_isZero, i1 %icmp_ln803_2" [posit_lib.cpp:820->posit_lib.cpp:1067]   --->   Operation 161 'or' 'or_ln820_5' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node sf_in_2)   --->   "%regime = select i1 %or_ln820_5, i6 %select_ln820, i6 %select_ln804_2" [posit_lib.cpp:820->posit_lib.cpp:1067]   --->   Operation 162 'select' 'regime' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node mantissa_18)   --->   "%or_ln820_6 = or i1 %y_isZero, i1 %icmp_ln771_2" [posit_lib.cpp:820->posit_lib.cpp:1067]   --->   Operation 163 'or' 'or_ln820_6' <Predicate = (!x_isZero_read)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 164 [1/1] (0.46ns) (out node of the LUT)   --->   "%mantissa_18 = select i1 %or_ln820_6, i30 %select_ln820_5, i30 %mantissa_14" [posit_lib.cpp:820->posit_lib.cpp:1067]   --->   Operation 164 'select' 'mantissa_18' <Predicate = (!x_isZero_read)> <Delay = 0.46> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.46> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node sf_in_2)   --->   "%sext_ln629_1 = sext i6 %regime" [posit_lib.cpp:629->posit_lib.cpp:1067]   --->   Operation 165 'sext' 'sext_ln629_1' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 166 [1/1] (0.88ns) (out node of the LUT)   --->   "%sf_in_2 = add i7 %sext_ln629_1, i7 123" [posit_lib.cpp:629->posit_lib.cpp:1067]   --->   Operation 166 'add' 'sf_in_2' <Predicate = (!x_isZero_read)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 167 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i2 @_ssdm_op_PartSelect.i2.i7.i32, i7 %sf_in_2, i32 5" [posit_lib.cpp:631->posit_lib.cpp:1067]   --->   Operation 167 'partselect' 'tmp_6' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 168 [1/1] (0.62ns)   --->   "%icmp_ln631_1 = icmp_eq  i2 %tmp_6, i2 2" [posit_lib.cpp:631->posit_lib.cpp:1067]   --->   Operation 168 'icmp' 'icmp_ln631_1' <Predicate = (!x_isZero_read)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 169 [1/1] (0.00ns)   --->   "%result_regime_7 = trunc i7 %sf_in_2" [posit_lib.cpp:635->posit_lib.cpp:1067]   --->   Operation 169 'trunc' 'result_regime_7' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_29 : Operation 170 [1/1] (0.44ns)   --->   "%result_regime = select i1 %icmp_ln631_1, i6 34, i6 %result_regime_7" [posit_lib.cpp:631->posit_lib.cpp:1067]   --->   Operation 170 'select' 'result_regime' <Predicate = (!x_isZero_read)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 171 [8/8] (6.84ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 171 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 30 <SV = 29> <Delay = 7.14>
ST_30 : Operation 172 [7/8] (7.14ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 172 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 31 <SV = 30> <Delay = 7.14>
ST_31 : Operation 173 [6/8] (7.14ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 173 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 32 <SV = 31> <Delay = 7.14>
ST_32 : Operation 174 [5/8] (7.14ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 174 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 33 <SV = 32> <Delay = 7.14>
ST_33 : Operation 175 [4/8] (7.14ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 175 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 34 <SV = 33> <Delay = 7.14>
ST_34 : Operation 176 [3/8] (7.14ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 176 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 35 <SV = 34> <Delay = 7.14>
ST_35 : Operation 177 [2/8] (7.14ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 177 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 36 <SV = 35> <Delay = 0.54>
ST_36 : Operation 178 [1/8] (0.54ns)   --->   "%call_ret2 = call i39 @positAdd, i1 0, i1 0, i6 0, i1 0, i30 536870912, i1 1, i1 %y_isZero, i6 %sf_in, i1 0, i30 %mantissa_16" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 178 'call' 'call_ret2' <Predicate = (!x_isZero_read)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_36 : Operation 179 [1/1] (0.00ns)   --->   "%result_sign = extractvalue i39 %call_ret2" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 179 'extractvalue' 'result_sign' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_36 : Operation 180 [1/1] (0.00ns)   --->   "%result_isZero = extractvalue i39 %call_ret2" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 180 'extractvalue' 'result_isZero' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_36 : Operation 181 [1/1] (0.00ns)   --->   "%result_regime_12 = extractvalue i39 %call_ret2" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 181 'extractvalue' 'result_regime_12' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_36 : Operation 182 [1/1] (0.00ns)   --->   "%result_exponent = extractvalue i39 %call_ret2" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 182 'extractvalue' 'result_exponent' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_36 : Operation 183 [1/1] (0.00ns)   --->   "%result_mantissa = extractvalue i39 %call_ret2" [posit_lib.cpp:852->posit_lib.cpp:1071]   --->   Operation 183 'extractvalue' 'result_mantissa' <Predicate = (!x_isZero_read)> <Delay = 0.00>

State 37 <SV = 36> <Delay = 6.84>
ST_37 : Operation 184 [8/8] (6.84ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 184 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 38 <SV = 37> <Delay = 7.14>
ST_38 : Operation 185 [7/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 185 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 39 <SV = 38> <Delay = 7.14>
ST_39 : Operation 186 [6/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 186 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 40 <SV = 39> <Delay = 7.14>
ST_40 : Operation 187 [5/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 187 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 41 <SV = 40> <Delay = 7.14>
ST_41 : Operation 188 [4/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 188 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 42 <SV = 41> <Delay = 7.14>
ST_42 : Operation 189 [3/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 189 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 43 <SV = 42> <Delay = 7.14>
ST_43 : Operation 190 [2/8] (7.14ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 190 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 44 <SV = 43> <Delay = 0.54>
ST_44 : Operation 191 [1/8] (0.54ns)   --->   "%call_ret3 = call i39 @positAdd, i1 %result_sign, i1 %result_isZero, i6 %result_regime_12, i1 %result_exponent, i30 %result_mantissa, i1 0, i1 %y_isZero, i6 %result_regime_11, i1 0, i30 %mantissa_17" [posit_lib.cpp:1078]   --->   Operation 191 'call' 'call_ret3' <Predicate = (!x_isZero_read)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_44 : Operation 192 [1/1] (0.00ns)   --->   "%x_sign_69 = extractvalue i39 %call_ret3" [posit_lib.cpp:1078]   --->   Operation 192 'extractvalue' 'x_sign_69' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_44 : Operation 193 [1/1] (0.00ns)   --->   "%x_isZero_70 = extractvalue i39 %call_ret3" [posit_lib.cpp:1078]   --->   Operation 193 'extractvalue' 'x_isZero_70' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_44 : Operation 194 [1/1] (0.00ns)   --->   "%x_regime_71 = extractvalue i39 %call_ret3" [posit_lib.cpp:1078]   --->   Operation 194 'extractvalue' 'x_regime_71' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_44 : Operation 195 [1/1] (0.00ns)   --->   "%x_exponent_72 = extractvalue i39 %call_ret3" [posit_lib.cpp:1078]   --->   Operation 195 'extractvalue' 'x_exponent_72' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_44 : Operation 196 [1/1] (0.00ns)   --->   "%x_mantissa_73 = extractvalue i39 %call_ret3" [posit_lib.cpp:1078]   --->   Operation 196 'extractvalue' 'x_mantissa_73' <Predicate = (!x_isZero_read)> <Delay = 0.00>

State 45 <SV = 44> <Delay = 6.84>
ST_45 : Operation 197 [8/8] (6.84ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 197 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 6.84> <CoreType = "Generic">   --->   Generic Core

State 46 <SV = 45> <Delay = 7.14>
ST_46 : Operation 198 [7/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 198 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 47 <SV = 46> <Delay = 7.14>
ST_47 : Operation 199 [6/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 199 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 48 <SV = 47> <Delay = 7.14>
ST_48 : Operation 200 [5/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 200 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 49 <SV = 48> <Delay = 7.14>
ST_49 : Operation 201 [4/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 201 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 50 <SV = 49> <Delay = 7.14>
ST_50 : Operation 202 [3/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 202 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 51 <SV = 50> <Delay = 7.14>
ST_51 : Operation 203 [2/8] (7.14ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 203 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 7.14> <CoreType = "Generic">   --->   Generic Core

State 52 <SV = 51> <Delay = 1.42>
ST_52 : Operation 204 [1/8] (0.54ns)   --->   "%call_ret4 = call i39 @positAdd, i1 %x_sign_69, i1 %x_isZero_70, i6 %x_regime_71, i1 %x_exponent_72, i30 %x_mantissa_73, i1 1, i1 %y_isZero, i6 %result_regime, i1 0, i30 %mantissa_18" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 204 'call' 'call_ret4' <Predicate = (!x_isZero_read)> <Delay = 0.54> <CoreType = "Generic">   --->   Generic Core
ST_52 : Operation 205 [1/1] (0.00ns)   --->   "%negated_posit_sign_2 = extractvalue i39 %call_ret4" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 205 'extractvalue' 'negated_posit_sign_2' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_52 : Operation 206 [1/1] (0.00ns)   --->   "%negated_posit_isZero = extractvalue i39 %call_ret4" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 206 'extractvalue' 'negated_posit_isZero' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_52 : Operation 207 [1/1] (0.00ns)   --->   "%negated_posit_regime = extractvalue i39 %call_ret4" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 207 'extractvalue' 'negated_posit_regime' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_52 : Operation 208 [1/1] (0.00ns)   --->   "%negated_posit_exponent = extractvalue i39 %call_ret4" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 208 'extractvalue' 'negated_posit_exponent' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_52 : Operation 209 [1/1] (0.00ns)   --->   "%negated_posit_mantissa = extractvalue i39 %call_ret4" [posit_lib.cpp:852->posit_lib.cpp:1078]   --->   Operation 209 'extractvalue' 'negated_posit_mantissa' <Predicate = (!x_isZero_read)> <Delay = 0.00>
ST_52 : Operation 210 [1/1] (0.54ns)   --->   "%br_ln1083 = br i1 %negate, void %cleanup, void %cond.true" [posit_lib.cpp:1083]   --->   Operation 210 'br' 'br_ln1083' <Predicate = (!x_isZero_read)> <Delay = 0.54>
ST_52 : Operation 211 [1/1] (0.33ns)   --->   "%negated_posit_sign = xor i1 %negated_posit_sign_2, i1 1" [posit_lib.cpp:253->posit_lib.cpp:1083]   --->   Operation 211 'xor' 'negated_posit_sign' <Predicate = (!x_isZero_read & negate)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 212 [1/1] (0.54ns)   --->   "%br_ln1083 = br void %cleanup" [posit_lib.cpp:1083]   --->   Operation 212 'br' 'br_ln1083' <Predicate = (!x_isZero_read & negate)> <Delay = 0.54>
ST_52 : Operation 213 [1/1] (0.00ns)   --->   "%agg_result_01_1 = phi i1 0, void %entry, i1 %negated_posit_sign, void %cond.true, i1 %negated_posit_sign_2, void %if.end"   --->   Operation 213 'phi' 'agg_result_01_1' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 214 [1/1] (0.00ns)   --->   "%agg_result_12_1 = phi i1 0, void %entry, i1 %negated_posit_isZero, void %cond.true, i1 %negated_posit_isZero, void %if.end"   --->   Operation 214 'phi' 'agg_result_12_1' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 215 [1/1] (0.00ns)   --->   "%agg_result_3_1 = phi i6 0, void %entry, i6 %negated_posit_regime, void %cond.true, i6 %negated_posit_regime, void %if.end"   --->   Operation 215 'phi' 'agg_result_3_1' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 216 [1/1] (0.00ns)   --->   "%agg_result_4_1 = phi i1 0, void %entry, i1 %negated_posit_exponent, void %cond.true, i1 %negated_posit_exponent, void %if.end"   --->   Operation 216 'phi' 'agg_result_4_1' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 217 [1/1] (0.00ns)   --->   "%agg_result_5_1 = phi i30 536870912, void %entry, i30 %negated_posit_mantissa, void %cond.true, i30 %negated_posit_mantissa, void %if.end"   --->   Operation 217 'phi' 'agg_result_5_1' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 218 [1/1] (0.00ns)   --->   "%newret3 = insertvalue i39 <undef>, i1 %agg_result_01_1" [posit_lib.cpp:253->posit_lib.cpp:1083]   --->   Operation 218 'insertvalue' 'newret3' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 219 [1/1] (0.00ns)   --->   "%newret5 = insertvalue i39 %newret3, i1 %agg_result_12_1" [posit_lib.cpp:253->posit_lib.cpp:1083]   --->   Operation 219 'insertvalue' 'newret5' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 220 [1/1] (0.00ns)   --->   "%newret7 = insertvalue i39 %newret5, i6 %agg_result_3_1" [posit_lib.cpp:253->posit_lib.cpp:1083]   --->   Operation 220 'insertvalue' 'newret7' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 221 [1/1] (0.00ns)   --->   "%newret9 = insertvalue i39 %newret7, i1 %agg_result_4_1" [posit_lib.cpp:253->posit_lib.cpp:1083]   --->   Operation 221 'insertvalue' 'newret9' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 222 [1/1] (0.00ns)   --->   "%newret = insertvalue i39 %newret9, i30 %agg_result_5_1" [posit_lib.cpp:253->posit_lib.cpp:1083]   --->   Operation 222 'insertvalue' 'newret' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 223 [1/1] (0.00ns)   --->   "%ret_ln253 = ret i39 %newret" [posit_lib.cpp:253->posit_lib.cpp:1083]   --->   Operation 223 'ret' 'ret_ln253' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 0.547ns
The critical path consists of the following:
	wire read operation ('x_isZero_read', posit_lib.cpp:1042) on port 'x_isZero' (posit_lib.cpp:1042) [9]  (0.000 ns)
	multiplexor before 'phi' operation 1 bit ('negated_posit.sign') with incoming values : ('negated_posit.sign', posit_lib.cpp:852->posit_lib.cpp:1078) ('negated_posit.sign', posit_lib.cpp:253->posit_lib.cpp:1083) [123]  (0.547 ns)

 <State 2>: 5.040ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (5.040 ns)

 <State 3>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 4>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 5>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 6>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 7>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 8>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 9>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 10>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 11>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 12>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 13>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 14>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 15>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 16>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 17>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 18>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 19>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 20>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 21>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 22>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 23>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 24>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 25>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 26>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (7.140 ns)

 <State 27>: 5.319ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret8', posit_lib.cpp:1048) to 'pReduceAngle' [13]  (1.094 ns)
	'mul' operation 60 bit ('mant', posit_lib.cpp:778->posit_lib.cpp:1050) [27]  (3.760 ns)
	'select' operation 30 bit ('mantissa', posit_lib.cpp:779->posit_lib.cpp:1050) [34]  (0.000 ns)
	'select' operation 30 bit ('mantissa', posit_lib.cpp:820->posit_lib.cpp:1050) [44]  (0.465 ns)

 <State 28>: 7.040ns
The critical path consists of the following:
	'mul' operation 60 bit ('mant', posit_lib.cpp:778->posit_lib.cpp:1051) [51]  (3.760 ns)
	'select' operation 6 bit ('sf_r', posit_lib.cpp:800->posit_lib.cpp:1051) [56]  (0.000 ns)
	'select' operation 6 bit ('regime', posit_lib.cpp:771->posit_lib.cpp:1051) [58]  (0.440 ns)
	'icmp' operation 1 bit ('icmp_ln803_1', posit_lib.cpp:803->posit_lib.cpp:1051) [59]  (0.887 ns)
	'or' operation 1 bit ('or_ln820_3', posit_lib.cpp:820->posit_lib.cpp:1051) [62]  (0.000 ns)
	'select' operation 6 bit ('regime', posit_lib.cpp:820->posit_lib.cpp:1051) [63]  (0.000 ns)
	'add' operation 7 bit ('sf_out', posit_lib.cpp:629->posit_lib.cpp:1059) [68]  (0.887 ns)
	'icmp' operation 1 bit ('icmp_ln631', posit_lib.cpp:631->posit_lib.cpp:1059) [70]  (0.625 ns)
	'select' operation 6 bit ('result.regime', posit_lib.cpp:631->posit_lib.cpp:1059) [72]  (0.440 ns)

 <State 29>: 7.040ns
The critical path consists of the following:
	'mul' operation 60 bit ('mant', posit_lib.cpp:778->posit_lib.cpp:1067) [79]  (3.760 ns)
	'select' operation 6 bit ('sf_r', posit_lib.cpp:800->posit_lib.cpp:1067) [84]  (0.000 ns)
	'select' operation 6 bit ('regime', posit_lib.cpp:771->posit_lib.cpp:1067) [86]  (0.440 ns)
	'icmp' operation 1 bit ('icmp_ln804_2', posit_lib.cpp:804->posit_lib.cpp:1067) [88]  (0.887 ns)
	'select' operation 6 bit ('select_ln804_2', posit_lib.cpp:804->posit_lib.cpp:1067) [89]  (0.000 ns)
	'select' operation 6 bit ('regime', posit_lib.cpp:820->posit_lib.cpp:1067) [91]  (0.000 ns)
	'add' operation 7 bit ('sf_out', posit_lib.cpp:629->posit_lib.cpp:1067) [95]  (0.887 ns)
	'icmp' operation 1 bit ('icmp_ln631_1', posit_lib.cpp:631->posit_lib.cpp:1067) [97]  (0.625 ns)
	'select' operation 6 bit ('result.regime', posit_lib.cpp:631->posit_lib.cpp:1067) [99]  (0.440 ns)

 <State 30>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:852->posit_lib.cpp:1071) to 'positAdd' [100]  (7.140 ns)

 <State 31>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:852->posit_lib.cpp:1071) to 'positAdd' [100]  (7.140 ns)

 <State 32>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:852->posit_lib.cpp:1071) to 'positAdd' [100]  (7.140 ns)

 <State 33>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:852->posit_lib.cpp:1071) to 'positAdd' [100]  (7.140 ns)

 <State 34>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:852->posit_lib.cpp:1071) to 'positAdd' [100]  (7.140 ns)

 <State 35>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:852->posit_lib.cpp:1071) to 'positAdd' [100]  (7.140 ns)

 <State 36>: 0.547ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret2', posit_lib.cpp:852->posit_lib.cpp:1071) to 'positAdd' [100]  (0.547 ns)

 <State 37>: 6.850ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (6.850 ns)

 <State 38>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (7.140 ns)

 <State 39>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (7.140 ns)

 <State 40>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (7.140 ns)

 <State 41>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (7.140 ns)

 <State 42>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (7.140 ns)

 <State 43>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (7.140 ns)

 <State 44>: 0.547ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret3', posit_lib.cpp:1078) to 'positAdd' [106]  (0.547 ns)

 <State 45>: 6.850ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (6.850 ns)

 <State 46>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (7.140 ns)

 <State 47>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (7.140 ns)

 <State 48>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (7.140 ns)

 <State 49>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (7.140 ns)

 <State 50>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (7.140 ns)

 <State 51>: 7.140ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (7.140 ns)

 <State 52>: 1.425ns
The critical path consists of the following:
	'call' operation 39 bit ('call_ret4', posit_lib.cpp:852->posit_lib.cpp:1078) to 'positAdd' [112]  (0.547 ns)
	'xor' operation 1 bit ('negated_posit.sign', posit_lib.cpp:253->posit_lib.cpp:1083) [120]  (0.331 ns)
	multiplexor before 'phi' operation 1 bit ('negated_posit.sign') with incoming values : ('negated_posit.sign', posit_lib.cpp:852->posit_lib.cpp:1078) ('negated_posit.sign', posit_lib.cpp:253->posit_lib.cpp:1083) [123]  (0.547 ns)
	'phi' operation 1 bit ('negated_posit.sign') with incoming values : ('negated_posit.sign', posit_lib.cpp:852->posit_lib.cpp:1078) ('negated_posit.sign', posit_lib.cpp:253->posit_lib.cpp:1083) [123]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
