<profile>

<section name = "Vitis HLS Report for 'positDiv'" level="0">
<item name = "Date">Wed Mar  5 22:25:18 2025
</item>
<item name = "Version">2024.2 (Build 5238294 on Nov  8 2024)</item>
<item name = "Project">PositFFT</item>
<item name = "Solution">hls (Vivado IP Flow Target)</item>
<item name = "Product family">azynquplus</item>
<item name = "Target device">xazu3teg-sfvc784-1Q-q</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 5.129 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">1, 29, 10.000 ns, 0.290 us, 2, 30, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 308, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, -, 310, 192, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, 0, 172, -</column>
<column name="Register">-, -, 64, -, -</column>
<specialColumn name="Available">288, 576, 144000, 72000, 48</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="sparsemux_7_2_1_1_1_U3">sparsemux_7_2_1_1_1, 0, 0, 0, 9, 0</column>
<column name="sparsemux_7_2_5_1_1_U2">sparsemux_7_2_5_1_1, 0, 0, 0, 9, 0</column>
<column name="udiv_25ns_13ns_25_29_seq_1_U1">udiv_25ns_13ns_25_29_seq_1, 0, 0, 310, 174, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln736_fu_411_p2">+, 0, 0, 12, 5, 2</column>
<column name="sf_r_2_fu_327_p2">+, 0, 0, 14, 7, 2</column>
<column name="REM_fu_431_p2">-, 0, 0, 13, 6, 5</column>
<column name="sf_r_fu_271_p2">-, 0, 0, 14, 7, 7</column>
<column name="sub_ln736_fu_417_p2">-, 0, 0, 12, 2, 5</column>
<column name="and_ln733_fu_499_p2">and, 0, 0, 2, 1, 1</column>
<column name="and_ln739_fu_551_p2">and, 0, 0, 2, 1, 1</column>
<column name="exponent_2_fu_565_p6">and, 0, 0, 2, 1, 1</column>
<column name="exponent_3_fu_590_p2">and, 0, 0, 2, 1, 1</column>
<column name="sign_1_fu_603_p2">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln697_fu_285_p2">icmp, 0, 0, 10, 2, 3</column>
<column name="icmp_ln729_fu_377_p2">icmp, 0, 0, 10, 2, 3</column>
<column name="icmp_ln732_fu_391_p2">icmp, 0, 0, 12, 5, 4</column>
<column name="icmp_ln733_fu_397_p2">icmp, 0, 0, 12, 5, 5</column>
<column name="icmp_ln738_fu_437_p2">icmp, 0, 0, 13, 5, 6</column>
<column name="icmp_ln739_fu_453_p2">icmp, 0, 0, 12, 4, 1</column>
<column name="isZero_fu_221_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln738_1_fu_539_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln738_fu_533_p2">or, 0, 0, 2, 1, 1</column>
<column name="SREG_fu_423_p3">select, 0, 0, 5, 1, 5</column>
<column name="mantissa_2_fu_596_p3">select, 0, 0, 13, 1, 1</column>
<column name="mantissa_fu_351_p3">select, 0, 0, 13, 1, 13</column>
<column name="regime_2_fu_383_p3">select, 0, 0, 5, 1, 5</column>
<column name="select_ln749_fu_608_p3">select, 0, 0, 5, 1, 1</column>
<column name="sf_r_3_fu_332_p3">select, 0, 0, 7, 1, 7</column>
<column name="shl_ln744_fu_471_p2">shl, 0, 0, 100, 1, 32</column>
<column name="sign_fu_215_p2">xor, 0, 0, 2, 1, 1</column>
<column name="xor_ln732_fu_493_p2">xor, 0, 0, 2, 1, 2</column>
<column name="xor_ln738_fu_545_p2">xor, 0, 0, 2, 1, 2</column>
<column name="xor_ln744_fu_481_p2">xor, 0, 0, 2, 1, 2</column>
<column name="xor_ln749_fu_585_p2">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">145, 31, 1, 31</column>
<column name="mantissa_1_reg_152">9, 2, 13, 26</column>
<column name="regime_1_reg_141">9, 2, 5, 10</column>
<column name="sf_r_1_reg_132">9, 2, 7, 14</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">30, 0, 30, 0</column>
<column name="isZero_reg_650">1, 0, 1, 0</column>
<column name="mantissa_1_reg_152">13, 0, 13, 0</column>
<column name="regime_1_reg_141">5, 0, 5, 0</column>
<column name="sf_r_1_reg_132">7, 0, 7, 0</column>
<column name="sf_r_reg_658">7, 0, 7, 0</column>
<column name="sign_reg_645">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, positDiv, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, positDiv, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, positDiv, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, positDiv, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, positDiv, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, positDiv, return value</column>
<column name="ap_return">out, 64, ap_ctrl_hs, positDiv, return value</column>
<column name="x">in, 64, ap_none, x, scalar</column>
<column name="y">in, 64, ap_none, y, scalar</column>
</table>
</item>
</section>
</profile>
